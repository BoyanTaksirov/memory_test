(()=>{"use strict";var __webpack_modules__={479:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(935);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(294);\n;// CONCATENATED MODULE: ./src/js/state/constants.js\nconst ASSETS_DATA = [{\n  name: "win",\n  path: "./assets/win2.png"\n}, {\n  name: "show",\n  path: "./assets/uncheck.png"\n}, {\n  name: "check",\n  path: "./assets/check.png"\n}, {\n  name: "unguess",\n  path: "./assets/unguess.png"\n}, {\n  name: "error",\n  path: "./assets/x2.png"\n}, {\n  name: "splash",\n  path: "./assets/splash.png"\n}, {\n  name: "exit",\n  path: "./assets/exit.png"\n}, {\n  name: "sound_click",\n  path: "./assets/click.wav"\n}];\nvar IMAGES_DATA = {};\nvar SOUNDS = {};\nconst SCREENS = {\n  BEGIN_SCREEN: "BEGIN_SCREEN",\n  GAME_SCREEN: "GAME_SCREEN",\n  WIN_SCREEN: "WIN_SCREEN"\n};\nconst CELL_TYPES = {\n  EMPTY: "EMPTY",\n  FULL: "FULL"\n};\nconst CELL_STATES = {\n  OPENED: "OPENED",\n  CLOSED: "CLOSED"\n};\nconst CELL_VISUAL_STATES = {\n  COVERED: "COVERED",\n  SHOW: "SHOW",\n  GUESSED: "GUESSED",\n  UNGUESSED: "UNGUESSED",\n  ERROR: "ERROR"\n};\nconst constants_ACTIONS = {\n  START_LEVEL: "START_LEVEL",\n  SWITCH_PRE_REMEMBER_PHASE: "SWITCH_PRE_REMEMBER_PHASE",\n  SWITCH_REMEMBER_PHASE: "SWITCH_REMEMBER_PHASE",\n  HIDE_LEVEL_MENU: "HIDE_LEVEL_MENU",\n  SHOW_LEVEL_MENU: "SHOW_LEVEL_MENU",\n  CHANGE_LEVEL: "CHANGE_LEVEL",\n  CELL_GUESSED: "CELL_GUESSED",\n  CELL_ERROR: "CELL_ERROR",\n  TIME_TICK_SECONDS: "TIME_TICK_SECONDS",\n  SHOW_BEGIN_SCREEN: "SHOW_BEGIN_SCREEN",\n  INITIATE_NEW_LEVEL: "INITIATE_NEW_LEVEL",\n  SHOW_WIN_SCREEN: "SHOW_WIN_SCREEN",\n  END_GAME_LEVEL_UP: "END_GAME_LEVEL_UP",\n  END_GAME_LAST_LEVEL: "END_GAME_LAST_LEVEL",\n  END_GAME_TIMEOUT: "END_GAME_TIMEOUT",\n  END_GAME_ERROR: "END_GAME_ERROR",\n  END_GAME_CANCEL: "END_GAME_CANCEL",\n  UPDATE_LEVEL: "UPDATE_LEVEL",\n  UPDATE_MAX_LEVEL: "UPDATE_MAX_LEVEL"\n};\nconst GAME_STATUS = {\n  STATUS_PRE_MEMORIZE: "STATUS_PRE_MEMORIZE",\n  STATUS_RUNNING_MEMORIZE: "STATUS_RUNNING_MEMORIZE",\n  STATUS_PRE_REMEMBER: "STATUS_PRE_REMEMBER",\n  STATUS_RUNNING_REMEMBER: "STATUS_RUNNING_REMEMBER",\n  STATUS_ENDED_LEVEL_UP: "STATUS_ENDED_LEVEL_UP",\n  STATUS_ENDED_TIMEOUT: "STATUS_ENDED_TIMEOUT",\n  STATUS_ENDED_ERROR: "STATUS_ENDED_ERROR",\n  STATUS_ENDED_LAST_LEVEL: "STATUS_ENDED_LAST_LEVEL"\n};\nconst GRID_LEVELS = [{\n  w: 4,\n  h: 4,\n  c: 2,\n  timeM: 5,\n  timeR: 15\n}, {\n  w: 4,\n  h: 4,\n  c: 3,\n  timeM: 5,\n  timeR: 15\n}, {\n  w: 4,\n  h: 4,\n  c: 4,\n  timeM: 5,\n  timeR: 15\n}, {\n  w: 4,\n  h: 4,\n  c: 5,\n  timeM: 7,\n  timeR: 15\n}, {\n  w: 4,\n  h: 4,\n  c: 6,\n  timeM: 7,\n  timeR: 15\n}, {\n  w: 5,\n  h: 5,\n  c: 4,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 5,\n  h: 5,\n  c: 5,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 5,\n  h: 5,\n  c: 6,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 5,\n  h: 5,\n  c: 7,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 5,\n  h: 5,\n  c: 8,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 5,\n  h: 5,\n  c: 5,\n  timeM: 7,\n  timeR: 15\n}, {\n  w: 5,\n  h: 5,\n  c: 6,\n  timeM: 7,\n  timeR: 15\n}, {\n  w: 5,\n  h: 5,\n  c: 7,\n  timeM: 7,\n  timeR: 15\n}, {\n  w: 5,\n  h: 5,\n  c: 8,\n  timeM: 7,\n  timeR: 15\n}, {\n  w: 5,\n  h: 5,\n  c: 9,\n  timeM: 7,\n  timeR: 15\n}, {\n  w: 6,\n  h: 6,\n  c: 4,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 6,\n  h: 6,\n  c: 5,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 6,\n  h: 6,\n  c: 6,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 6,\n  h: 6,\n  c: 7,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 6,\n  h: 6,\n  c: 8,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 5,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 6,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 7,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 8,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 9,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 6,\n  timeM: 8,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 7,\n  timeM: 8,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 8,\n  timeM: 8,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 9,\n  timeM: 8,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 10,\n  timeM: 8,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 7,\n  timeM: 7,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 8,\n  timeM: 7,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 9,\n  timeM: 7,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 10,\n  timeM: 7,\n  timeR: 15\n}, {\n  w: 7,\n  h: 7,\n  c: 11,\n  timeM: 7,\n  timeR: 15\n}, {\n  w: 8,\n  h: 8,\n  c: 5,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 8,\n  h: 8,\n  c: 6,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 8,\n  h: 8,\n  c: 7,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 8,\n  h: 8,\n  c: 8,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 8,\n  h: 8,\n  c: 9,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 9,\n  h: 9,\n  c: 6,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 9,\n  h: 9,\n  c: 7,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 9,\n  h: 9,\n  c: 8,\n  timeM: 10,\n  timeR: 15\n}, {\n  w: 9,\n  h: 9,\n  c: 9,\n  timeM: 12,\n  timeR: 15\n}, {\n  w: 9,\n  h: 9,\n  c: 10,\n  timeM: 12,\n  timeR: 15\n}];\n/*export const GRID_LEVELS = [\r\n    { w: 4, h: 4, c: 4, timeM: 10, timeR: 15 },\r\n    { w: 4, h: 4, c: 5, timeM: 10, timeR: 15 },\r\n]*/\n\nconst BASE_POINTS_PER_GUESS = 100;\nconst PRE_REM_MODE_DURATION_SEC = 0.5;\nconst MAX_ERRORS = 0;\nconst CC_THRES_1 = 70;\nconst CC_THRES_2 = 30;\nconst COLOR_1 = "rgb(108, 205, 40)";\nconst COLOR_2 = "rgb(255, 196, 0)";\nconst COLOR_3 = "rgb(255, 8, 0)";\nconst LEVEL_GROUP_SIZE = 5;\nvar initialGameState = {\n  screen: SCREENS.BEGIN_SCREEN,\n  levelMenuOn: false,\n  gameLevel: 0,\n  maxLevel: 0,\n  levelData: null,\n  score: 0,\n  game: {\n    time: 0,\n    lastGuessTimestamp: 0,\n    allCells: null,\n    gameStatus: null,\n    errors: 0,\n    cancelled: false,\n    clickedIndex: null\n  }\n}; //----------------------------------TEXTS----------------------------------------\n\nconst TEXTS = {\n  Start: "Start",\n  Skip: "Skip",\n  Cancel: "Cancel",\n  Starting: "Starting...",\n  Select_Level: "Select Level: ",\n  When_ready: "Press start and try to memorize the cells.",\n  Try_to_memorize: "Try to memorize green cells. Time left: ",\n  Click_on_green_cells: "Click on green cells locations. Time left: ",\n  Time_up: "Time up!",\n  Time_stopped: "Time stopped!",\n  Continue: "Continue"\n};\n;// CONCATENATED MODULE: ./src/js/components/levelMenu.js\n\n\nclass LevelMenu extends react.Component {\n  constructor(props) {\n    super(props);\n    this.numLevels = this.props.numLevels;\n    this.show = this.props.show;\n    this.maxLevel = this.props.maxLevel;\n    this.buttonClicked = this.buttonClicked.bind(this);\n  }\n\n  buttonClicked(index) {\n    this.props.onLevelClicked(index);\n  }\n\n  render() {\n    var levelButtons = [];\n\n    if (!this.props.show) {\n      return null;\n    }\n\n    for (let i = 0; i < this.numLevels; i++) {\n      let label = "Level " + (i + 1);\n      var clickHandler = null;\n      var style = {\n        color: "rgb(170, 170, 170)",\n        backgroundColor: "rgb(112, 112, 112)"\n      };\n      var currentLevelGroup = Math.ceil((this.maxLevel + 1) / LEVEL_GROUP_SIZE);\n      var maxUnlockedLevel = currentLevelGroup * LEVEL_GROUP_SIZE;\n\n      if (i < maxUnlockedLevel) {\n        clickHandler = () => this.buttonClicked(i);\n\n        style = null;\n      }\n\n      let button = /*#__PURE__*/react.createElement("div", {\n        key: i,\n        className: "menuButton",\n        style: style,\n        onClick: clickHandler\n      }, label);\n      levelButtons.push(button);\n    }\n\n    return /*#__PURE__*/react.createElement("div", {\n      className: "menuButtonsContainer"\n    }, levelButtons);\n  }\n\n}\n;// CONCATENATED MODULE: ./src/js/view/begin_screen.js\n\n\n\nclass BeginScreen extends react.Component {\n  constructor(props) {\n    super(props);\n    this.onLevelClicked = this.onLevelClicked.bind(this);\n  }\n\n  onLevelClicked(index) {\n    this.props.onLevelClicked(index);\n  }\n\n  render() {\n    var startBtnStyle = {\n      position: "absolute",\n      marginTop: "3vmin",\n      marginLeft: "auto",\n      marginRight: "auto",\n      left: 0,\n      right: 0,\n      height: "6vmin",\n      lineHeight: "6vmin",\n      fontSize: "5vmin",\n      top: "80%"\n    };\n    var selectBtnStyle = {};\n    var size = window.innerWidth > window.innerHeight ? window.innerHeight * 0.6 : window.innerWidth * 0.6;\n\n    if (window.innerHeight > window.innerWidth * 1.2) {\n      size = window.innerWidth * 0.8;\n      startBtnStyle.height = "12vmin";\n      startBtnStyle.lineHeight = "12vmin";\n      startBtnStyle.fontSize = "6vmin";\n      selectBtnStyle.height = "12vmin";\n      selectBtnStyle.lineHeight = "12vmin";\n      selectBtnStyle.fontSize = "6vmin";\n    }\n\n    var selectLevelLabel = TEXTS.Select_Level + (this.props.level + 1);\n    return /*#__PURE__*/react.createElement("div", {\n      className: "BS_Bkg",\n      onClick: this.props.hideLevelMenu\n    }, /*#__PURE__*/react.createElement(LevelMenu, {\n      onLevelClicked: this.onLevelClicked,\n      numLevels: GRID_LEVELS.length,\n      show: this.props.levelMenuOn,\n      level: this.props.level,\n      maxLevel: this.props.maxLevel\n    }), /*#__PURE__*/react.createElement("img", {\n      className: "splash",\n      src: IMAGES_DATA.splash\n    }), /*#__PURE__*/react.createElement("div", {\n      className: "selectLevelButton",\n      style: selectBtnStyle,\n      onClick: this.props.onSelectLevelClicked\n    }, selectLevelLabel), /*#__PURE__*/react.createElement("div", {\n      className: "GS_GameButton",\n      style: startBtnStyle,\n      onClick: this.props.onStartGameClicked\n    }, "Start"));\n  }\n\n}\n;// CONCATENATED MODULE: ./src/js/components/cell.js\n\n\nclass Cell extends react.Component {\n  constructor(props) {\n    super(props);\n    this.proceedCellClick = this.proceedCellClick.bind(this);\n  }\n\n  proceedCellClick(e) {\n    e.stopPropagation(); //console.log(this.props.index);\n\n    this.props.proceedClick(this.props.index);\n  }\n\n  render() {\n    var styleObj = {\n      animation: ""\n    };\n\n    if (this.props.isAnim) {\n      styleObj.animation = "fadeIn 0.5s forwards";\n    }\n\n    var picture = null;\n\n    switch (this.props.vState) {\n      case CELL_VISUAL_STATES.SHOW:\n        picture = /*#__PURE__*/react.createElement("img", {\n          src: IMAGES_DATA.show,\n          className: "cell_Img",\n          style: styleObj\n        });\n        break;\n\n      case CELL_VISUAL_STATES.ERROR:\n        picture = /*#__PURE__*/react.createElement("img", {\n          src: IMAGES_DATA.error,\n          className: "cell_Img",\n          style: styleObj\n        });\n        break;\n\n      case CELL_VISUAL_STATES.GUESSED:\n        picture = /*#__PURE__*/react.createElement("img", {\n          src: IMAGES_DATA.check,\n          className: "cell_Img",\n          style: styleObj\n        });\n        break;\n\n      case CELL_VISUAL_STATES.UNGUESSED:\n        picture = /*#__PURE__*/react.createElement("img", {\n          src: IMAGES_DATA.unguess,\n          className: "cell_Img",\n          style: styleObj\n        });\n        break;\n    }\n\n    return /*#__PURE__*/react.createElement("div", {\n      key: this.props.index,\n      className: this.props.cellClass,\n      onClick: this.proceedCellClick\n    }, picture);\n  }\n\n}\n;// CONCATENATED MODULE: ./src/js/view/game_screen.js\n\n\n\nclass GameScreen extends react.Component {\n  constructor(props) {\n    super(props);\n    this.proceedClick = this.proceedClick.bind(this);\n    this.proceedButtonClick = this.proceedButtonClick.bind(this);\n    this.proceedButtonClickBkg = this.proceedButtonClickBkg.bind(this);\n  }\n\n  proceedClick(index) {\n    if (this.props.state.game.gameStatus != GAME_STATUS.STATUS_RUNNING_REMEMBER) {\n      //console.log("NOT IN MODE!");\n      return;\n    } //console.log(index);\n\n\n    this.props.onCellClicked(index);\n  }\n\n  proceedButtonClick(e) {\n    e.stopPropagation();\n    this.props.onGameButtonClicked();\n  }\n\n  proceedButtonClickBkg(e) {\n    if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_RUNNING_REMEMBER && !this.props.state.game.cancelled) {\n      return;\n    }\n\n    e.stopPropagation();\n    this.props.onGameButtonClicked();\n  }\n\n  getMessageString() {\n    var messageString = "";\n\n    if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_PRE_MEMORIZE) {\n      messageString = TEXTS.When_ready;\n    } else if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_RUNNING_MEMORIZE) {\n      messageString = TEXTS.Try_to_memorize;\n    } else if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_PRE_REMEMBER) {\n      messageString = TEXTS.Starting;\n    } else if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_RUNNING_REMEMBER) {\n      messageString = TEXTS.Click_on_green_cells;\n    } else if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_ENDED_TIMEOUT) {\n      messageString = TEXTS.Time_up;\n    } else if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_ENDED_ERROR) {\n      messageString = TEXTS.Time_stopped;\n    } else if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_ENDED_LEVEL_UP) {\n      messageString = TEXTS.Time_stopped;\n    } else if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_ENDED_LAST_LEVEL) {\n      messageString = TEXTS.Time_stopped;\n    }\n\n    return messageString;\n  }\n\n  getClock(gameState) {\n    if (gameState.gameStatus == GAME_STATUS.STATUS_PRE_REMEMBER) {\n      return /*#__PURE__*/react.createElement("div", {\n        className: "clockClass"\n      }, "-- : -- : --");\n    }\n\n    let timeObj = this.getTimeString();\n    let timeStr = timeObj.timeStr;\n    let timeSec = timeObj.timeSec;\n    let timeLimit = this.props.state.game.gameStatus == GAME_STATUS.STATUS_PRE_MEMORIZE || this.props.state.game.gameStatus == GAME_STATUS.STATUS_RUNNING_MEMORIZE ? this.props.state.levelData.timeM : this.props.state.levelData.timeR;\n    let elapsedTimePer = timeSec / timeLimit * 100; //console.log("ELAPSED %: " + elapsedTimePer + " time limit: " + timeLimit + " game status: " + this.props.state.game.gameStatus);\n\n    let styleObj = {\n      color: "white"\n    };\n\n    if (elapsedTimePer > CC_THRES_1) {\n      styleObj.color = COLOR_1;\n    } else if (elapsedTimePer <= CC_THRES_1 && elapsedTimePer > CC_THRES_2) {\n      styleObj.color = COLOR_2;\n    } else if (elapsedTimePer <= CC_THRES_2) {\n      styleObj.color = COLOR_3;\n    }\n\n    var clockDisplay = /*#__PURE__*/react.createElement("div", {\n      className: "clockClass",\n      style: styleObj\n    }, timeStr, " sec.");\n    return clockDisplay;\n  }\n\n  getTimeString() {\n    let timeSec = this.props.state.game.time;\n    let minutesElapsed = Math.floor(timeSec / 60);\n    let hours = Math.floor(timeSec / 3600);\n    let seconds = timeSec % 60;\n    let minutes = minutesElapsed % 60;\n    let hoursStr = hours >= 0 && hours < 10 ? "0" + hours : hours;\n    let minutesStr = minutes >= 0 && minutes < 10 ? "0" + minutes : minutes;\n    let secondsStr = seconds >= 0 && seconds < 10 ? "0" + seconds : seconds;\n    var secondsLeft;\n\n    if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_PRE_MEMORIZE || this.props.state.game.gameStatus == GAME_STATUS.STATUS_RUNNING_MEMORIZE) {\n      secondsLeft = this.props.state.levelData.timeM - timeSec;\n    } else if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_RUNNING_REMEMBER || this.props.state.game.gameStatus == GAME_STATUS.STATUS_ENDED_ERROR || this.props.state.game.gameStatus == GAME_STATUS.STATUS_ENDED_LEVEL_UP || this.props.state.game.gameStatus == GAME_STATUS.STATUS_ENDED_LAST_LEVEL) {\n      secondsLeft = this.props.state.levelData.timeR - timeSec; //console.log("R timeSec: " + timeSec + " sec left: " + secondsLeft);\n    } else if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_ENDED_TIMEOUT || this.props.state.game.gameStatus == GAME_STATUS.STATUS_PRE_REMEMBER) {\n      secondsLeft = 0;\n    }\n\n    let secondsLeftStr = secondsLeft >= 0 && secondsLeft < 10 ? "0" + secondsLeft : secondsLeft;\n    return {\n      timeStr: hoursStr + ":" + minutesStr + ":" + secondsLeftStr,\n      timeSec: secondsLeft\n    };\n  }\n\n  getButtonLabel(gameState) {\n    var gameStatus = gameState.gameStatus;\n    var isCancelled = gameState.cancelled;\n    var buttonLabel = "NOT_DEFINED";\n\n    if (isCancelled) {\n      return "Continue";\n    }\n\n    switch (gameStatus) {\n      case GAME_STATUS.STATUS_PRE_MEMORIZE:\n        buttonLabel = TEXTS.Start;\n        break;\n\n      case GAME_STATUS.STATUS_RUNNING_MEMORIZE:\n        buttonLabel = TEXTS.Start;\n        break;\n\n      case GAME_STATUS.STATUS_PRE_REMEMBER:\n        buttonLabel = TEXTS.Start;\n        break;\n\n      case GAME_STATUS.STATUS_RUNNING_REMEMBER:\n        buttonLabel = TEXTS.Start;\n        break;\n\n      case GAME_STATUS.STATUS_ENDED_LEVEL_UP:\n        buttonLabel = TEXTS.Continue;\n        break;\n\n      case GAME_STATUS.STATUS_ENDED_TIMEOUT:\n        buttonLabel = TEXTS.Continue;\n        break;\n\n      case GAME_STATUS.STATUS_ENDED_ERROR:\n        buttonLabel = TEXTS.Continue;\n        break;\n\n      case GAME_STATUS.STATUS_ENDED_LAST_LEVEL:\n        buttonLabel = TEXTS.Continue;\n        break;\n    }\n\n    return buttonLabel;\n  }\n\n  getLevel() {\n    if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_ENDED_LEVEL_UP) {\n      return this.props.state.gameLevel;\n    } else if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_ENDED_LAST_LEVEL) {\n      return GRID_LEVELS.length + 1;\n    } else {\n      return this.props.state.gameLevel + 1;\n    }\n  }\n\n  getCellStyle(gameStatus, cellType, cellState) {\n    var classStr = "NOT_DEFINED";\n    var visualState;\n\n    if (gameStatus == GAME_STATUS.STATUS_PRE_MEMORIZE || gameStatus == GAME_STATUS.STATUS_PRE_REMEMBER) {\n      classStr = "cell cellEmpty";\n      visualState = CELL_VISUAL_STATES.COVERED;\n    } else if (gameStatus == GAME_STATUS.STATUS_RUNNING_MEMORIZE) {\n      if (cellType == CELL_TYPES.FULL) {\n        classStr = "cell cellFull";\n        visualState = CELL_VISUAL_STATES.SHOW;\n      } else {\n        classStr = "cell cellEmpty";\n        visualState = CELL_VISUAL_STATES.COVERED;\n      }\n    } else if (gameStatus == GAME_STATUS.STATUS_ENDED_ERROR) {\n      if (cellType == CELL_TYPES.EMPTY) {\n        if (cellState == CELL_STATES.OPENED) {\n          classStr = "cell cellError";\n          visualState = CELL_VISUAL_STATES.ERROR;\n        } else {\n          classStr = "cell cellEmpty";\n          visualState = CELL_VISUAL_STATES.COVERED;\n        }\n      } else if (cellType == CELL_TYPES.FULL) {\n        if (cellState == CELL_STATES.OPENED) {\n          classStr = "cell cellFull";\n          visualState = CELL_VISUAL_STATES.GUESSED;\n        } else {\n          classStr = "cell cellFullUnopened";\n          visualState = CELL_VISUAL_STATES.UNGUESSED;\n        }\n      }\n    } else {\n      if (cellState == CELL_STATES.CLOSED) {\n        let cursorStyle = gameStatus == GAME_STATUS.STATUS_RUNNING_REMEMBER ? " cellCursor" : "";\n        classStr = "cell cellEmpty" + cursorStyle;\n        visualState = CELL_VISUAL_STATES.COVERED;\n      } else if (cellState == CELL_STATES.OPENED && cellType == CELL_TYPES.FULL) {\n        classStr = "cell cellFull";\n        visualState = CELL_VISUAL_STATES.GUESSED;\n      } else if (cellState == CELL_STATES.OPENED && cellType == CELL_TYPES.EMPTY) {\n        classStr = "cell cellError";\n        visualState = CELL_VISUAL_STATES.ERROR;\n      }\n    }\n\n    return {\n      class: classStr,\n      visual: visualState\n    };\n  }\n\n  getMessagePopup(gameState) {\n    var gameStatus = gameState.gameStatus;\n\n    if (gameState.cancelled) {\n      return /*#__PURE__*/react.createElement("div", {\n        className: "messagePopup bkgRed"\n      }, "GAME CANCELLED!");\n    }\n\n    var styleObj = {\n      animation: "fadeIn 0.5s forwards"\n    };\n\n    switch (gameStatus) {\n      case GAME_STATUS.STATUS_PRE_REMEMBER:\n        //return (<div className="messagePopupLevelUp" style = {styleObj}>READY?</div>);\n        return null;\n\n      case GAME_STATUS.STATUS_ENDED_LEVEL_UP:\n        return /*#__PURE__*/react.createElement("div", {\n          className: "messagePopup bkgGreen",\n          style: styleObj\n        }, "LEVEL UP!");\n\n      case GAME_STATUS.STATUS_ENDED_LAST_LEVEL:\n        return /*#__PURE__*/react.createElement("div", {\n          className: "messagePopup bkgGreen",\n          style: styleObj\n        }, "LAST LEVEL DONE!");\n\n      case GAME_STATUS.STATUS_ENDED_ERROR:\n        return /*#__PURE__*/react.createElement("div", {\n          className: "messagePopup bkgRed",\n          style: styleObj\n        }, "ERROR! GAME OVER!");\n\n      case GAME_STATUS.STATUS_ENDED_TIMEOUT:\n        return /*#__PURE__*/react.createElement("div", {\n          className: "messagePopup bkgRed",\n          style: styleObj\n        }, "TIME UP!");\n\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    let state = this.props.state;\n    let cells = [];\n    let rowLength = state.game.allCells.length;\n    let columnHeight = state.game.allCells[0].length;\n    var clickedIndex = state.game.clickedIndex;\n    var counter = 0;\n\n    for (let n = 0; n < columnHeight; n++) {\n      for (let i = 0; i < rowLength; i++) {\n        let cellData = this.props.state.game.allCells[n][i];\n        var cellDataObj = this.getCellStyle(state.game.gameStatus, cellData.cellType, cellData.cellState);\n        var classStr = cellDataObj.class;\n        var visualState = cellDataObj.visual;\n        var isAnim = false;\n\n        if (cellData.cellIndex == clickedIndex) {\n          isAnim = true;\n        }\n\n        let tempCell = /*#__PURE__*/react.createElement(Cell, {\n          key: cellData.cellIndex,\n          index: cellData.cellIndex,\n          cellType: cellData.cellType,\n          cellState: cellData.cellState,\n          vState: visualState,\n          proceedClick: this.proceedClick,\n          cellClass: classStr,\n          isAnim: isAnim\n        }, "counter");\n        cells.push(tempCell);\n        counter++;\n      }\n    }\n\n    var messageString = this.getMessageString();\n    var clock = this.getClock(state.game);\n    var messagePopup = this.getMessagePopup(state.game);\n    var styleButton = {\n      marginTop: "3vmin",\n      marginLeft: "auto",\n      marginRight: "auto",\n      left: 0,\n      right: 0,\n      top: "75%"\n    };\n    var size = window.innerWidth > window.innerHeight ? window.innerHeight * 0.6 : window.innerWidth * 0.6;\n\n    if (window.innerHeight > window.innerWidth * 1.2) {\n      size = window.innerWidth * 0.8;\n      styleButton.height = "12vmin";\n      styleButton.lineHeight = "12vmin";\n      styleButton.fontSize = "6vmin";\n    }\n\n    var buttonLabel = this.getButtonLabel(state.game);\n    var button = null;\n\n    if (this.props.state.game.gameStatus == GAME_STATUS.STATUS_PRE_REMEMBER || this.props.state.game.gameStatus == GAME_STATUS.STATUS_RUNNING_REMEMBER) {\n      styleButton.backgroundColor = "rgb(95, 95, 95)";\n      styleButton.color = "rgb(148, 148, 148)";\n      button = /*#__PURE__*/react.createElement("div", {\n        className: "GS_GameButton",\n        style: styleButton\n      }, buttonLabel);\n    } else {\n      button = /*#__PURE__*/react.createElement("div", {\n        className: "GS_GameButton",\n        onClick: this.proceedButtonClick,\n        style: styleButton\n      }, buttonLabel);\n    }\n\n    var styleLevel = {\n      textAlign: "right",\n      marginRight: "2vw"\n    };\n    var styleScore = {\n      textAlign: "left",\n      marginLeft: "2vw"\n    };\n    var containerStyleObj = {\n      gridTemplateColumns: "repeat(" + rowLength + ", 1fr)",\n      width: size + "px",\n      height: size + "px"\n    };\n    return /*#__PURE__*/react.createElement("div", {\n      className: "gvContainer",\n      onClick: this.proceedButtonClickBkg\n    }, /*#__PURE__*/react.createElement("div", {\n      className: "headerContainer"\n    }, /*#__PURE__*/react.createElement("div", {\n      className: "levelScoreContainer"\n    }, /*#__PURE__*/react.createElement("div", {\n      className: "levelClass",\n      style: styleLevel\n    }, "Level: ", this.getLevel()), /*#__PURE__*/react.createElement("div", {\n      className: "levelClass",\n      style: styleScore\n    }, "Score: ", this.props.state.score)), /*#__PURE__*/react.createElement("div", {\n      className: "messageClass"\n    }, messageString), clock), /*#__PURE__*/react.createElement("div", {\n      className: "gvCellContainer",\n      style: containerStyleObj\n    }, cells), messagePopup, button);\n  }\n\n}\n;// CONCATENATED MODULE: ./src/js/view/win_screen.js\n\n\nclass WinScreen extends react.Component {\n  constructor(props) {\n    super(props);\n    this.proceedClick = this.proceedClick.bind(this);\n  }\n\n  proceedClick(e) {\n    e.stopPropagation();\n    this.props.showBeginScreen();\n  }\n\n  render() {\n    var styleObj = {\n      position: "absolute",\n      marginTop: "3vmin",\n      marginLeft: "auto",\n      marginRight: "auto",\n      left: 0,\n      right: 0,\n      top: "75%"\n    };\n    var size = window.innerWidth > window.innerHeight ? window.innerHeight * 0.6 : window.innerWidth * 0.6;\n\n    if (window.innerHeight > window.innerWidth * 1.2) {\n      size = window.innerWidth * 0.8;\n      styleObj.height = "12vmin";\n      styleObj.lineHeight = "12vmin";\n      styleObj.fontSize = "6vmin";\n    }\n\n    return /*#__PURE__*/react.createElement("div", {\n      className: "BS_Bkg",\n      onClick: this.proceedClick\n    }, /*#__PURE__*/react.createElement("img", {\n      className: "splash",\n      src: IMAGES_DATA.win\n    }), /*#__PURE__*/react.createElement("div", {\n      className: "GS_GameButton",\n      style: styleObj,\n      onClick: this.proceedClick\n    }, "Continue"));\n  }\n\n}\n;// CONCATENATED MODULE: ./src/js/view/game_view.js\n\n\n\n\n\nclass GameView extends react.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let BeginScreenInstance = null;\n    let GameScreenInstance = null;\n    let WinScreenInstance = null;\n\n    switch (this.props.state.screen) {\n      case SCREENS.BEGIN_SCREEN:\n        BeginScreenInstance = /*#__PURE__*/react.createElement(BeginScreen, {\n          onStartGameClicked: this.props.callbacks.onStartGameClicked,\n          onLevelClicked: this.props.callbacks.onLevelClicked,\n          levelMenuOn: this.props.state.levelMenuOn,\n          level: this.props.state.gameLevel,\n          maxLevel: this.props.state.maxLevel,\n          onSelectLevelClicked: this.props.callbacks.onSelectLevelClicked,\n          hideLevelMenu: this.props.callbacks.hideLevelMenu\n        });\n        break;\n\n      case SCREENS.GAME_SCREEN:\n        GameScreenInstance = /*#__PURE__*/react.createElement(GameScreen, {\n          state: this.props.state,\n          onCellClicked: this.props.callbacks.onCellClicked,\n          onGameButtonClicked: this.props.callbacks.onGameButtonClicked\n        });\n        break;\n\n      case SCREENS.WIN_SCREEN:\n        WinScreenInstance = /*#__PURE__*/react.createElement(WinScreen, {\n          showBeginScreen: this.props.callbacks.resetToBeginScreen\n        });\n        break;\n\n      default:\n        BeginScreenInstance = /*#__PURE__*/react.createElement(BeginScreen, null);\n    }\n\n    var exitButton = null;\n\n    if (GameScreenInstance) {\n      exitButton = /*#__PURE__*/react.createElement("img", {\n        className: "exitButton",\n        src: IMAGES_DATA.exit,\n        onClick: this.props.callbacks.resetToBeginScreen\n      });\n    }\n\n    return /*#__PURE__*/react.createElement("div", {\n      className: "full gameBkg"\n    }, BeginScreenInstance, GameScreenInstance, WinScreenInstance, exitButton);\n  }\n\n}\n;// CONCATENATED MODULE: ./node_modules/redux/es/redux.js\n\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return "Minified Redux error #" + code + "; visit https://redux.js.org/Errors?code=" + code + " for the full message or " + \'use the non-minified dev environment for full errors. \';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === \'function\' && Symbol.observable || \'@@observable\';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split(\'\').join(\'.\');\n};\n\nvar ActionTypes = {\n  INIT: "@@redux/INIT" + randomString(),\n  REPLACE: "@@redux/REPLACE" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== \'object\' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return \'undefined\';\n  if (val === null) return \'null\';\n  var type = typeof val;\n\n  switch (type) {\n    case \'boolean\':\n    case \'string\':\n    case \'number\':\n    case \'symbol\':\n    case \'function\':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return \'array\';\n  if (isDate(val)) return \'date\';\n  if (isError(val)) return \'error\';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case \'Symbol\':\n    case \'Promise\':\n    case \'WeakMap\':\n    case \'WeakSet\':\n    case \'Map\':\n    case \'Set\':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, \'\');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === \'function\' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === \'string\' && val.constructor && typeof val.constructor.stackTraceLimit === \'number\';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === \'function\' && typeof val.getDate === \'function\' && typeof val.setDate === \'function\';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (false) {}\n\n  return typeOfVal;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === \'function\' && typeof enhancer === \'function\' || typeof enhancer === \'function\' && typeof arguments[3] === \'function\') {\n    throw new Error( true ? formatProdErrorMessage(0) : 0);\n  }\n\n  if (typeof preloadedState === \'function\' && typeof enhancer === \'undefined\') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== \'undefined\') {\n    if (typeof enhancer !== \'function\') {\n      throw new Error( true ? formatProdErrorMessage(1) : 0);\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== \'function\') {\n    throw new Error( true ? formatProdErrorMessage(2) : 0);\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error( true ? formatProdErrorMessage(3) : 0);\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== \'function\') {\n      throw new Error( true ? formatProdErrorMessage(4) : 0);\n    }\n\n    if (isDispatching) {\n      throw new Error( true ? formatProdErrorMessage(5) : 0);\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error( true ? formatProdErrorMessage(6) : 0);\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error( true ? formatProdErrorMessage(7) : 0);\n    }\n\n    if (typeof action.type === \'undefined\') {\n      throw new Error( true ? formatProdErrorMessage(8) : 0);\n    }\n\n    if (isDispatching) {\n      throw new Error( true ? formatProdErrorMessage(9) : 0);\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== \'function\') {\n      throw new Error( true ? formatProdErrorMessage(10) : 0);\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== \'object\' || observer === null) {\n          throw new Error( true ? formatProdErrorMessage(11) : 0);\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an "INIT" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== \'undefined\' && typeof console.error === \'function\') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // "break on all exceptions" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? \'preloadedState argument passed to createStore\' : \'previous state received by the reducer\';\n\n  if (reducerKeys.length === 0) {\n    return \'Store does not have a valid reducer. Make sure the argument passed \' + \'to combineReducers is an object whose values are reducers.\';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return "The " + argumentName + " has unexpected type of \\"" + kindOf(inputState) + "\\". Expected argument to be an object with the following " + ("keys: \\"" + reducerKeys.join(\'", "\') + "\\"");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return "Unexpected " + (unexpectedKeys.length > 1 ? \'keys\' : \'key\') + " " + ("\\"" + unexpectedKeys.join(\'", "\') + "\\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\\"" + reducerKeys.join(\'", "\') + "\\". Unexpected keys will be ignored.");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === \'undefined\') {\n      throw new Error( true ? formatProdErrorMessage(12) : 0);\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === \'undefined\') {\n      throw new Error( true ? formatProdErrorMessage(13) : 0);\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (false) {}\n\n    if (typeof reducers[key] === \'function\') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don\'t warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (false) {}\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (false) { var warningMessage; }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === \'undefined\') {\n        var actionType = action && action.type;\n        throw new Error( true ? formatProdErrorMessage(14) : 0);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === \'function\') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== \'object\' || actionCreators === null) {\n    throw new Error( true ? formatProdErrorMessage(16) : 0);\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === \'function\') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error( true ? formatProdErrorMessage(15) : 0);\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== \'production\', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (false) {}\n\n\n\n;// CONCATENATED MODULE: ./src/js/state/reducers.js\n\nconst changeGameState = (state = {}, action) => {\n  switch (action.type) {\n    case constants_ACTIONS.INITIATE_NEW_LEVEL:\n      return {\n        screen: SCREENS.GAME_SCREEN,\n        gameLevel: action.gameData.level,\n        maxLevel: action.gameData.maxLevel,\n        score: action.gameData.score,\n        levelData: action.gameData.levelData,\n        game: {\n          time: action.gameData.time,\n          lastGuessTimestamp: action.gameData.lastGuessTimestamp,\n          allCells: action.gameData.allCells,\n          gameStatus: action.gameData.gameStatus,\n          errors: action.gameData.errors,\n          cancelled: action.gameData.cancelled,\n          clickedIndex: action.gameData.clickedIndex\n        }\n      };\n\n    case constants_ACTIONS.SHOW_BEGIN_SCREEN:\n      return { ...initialGameState,\n        gameLevel: action.level,\n        maxLevel: action.maxLevel\n      };\n\n    case constants_ACTIONS.START_LEVEL:\n      return { ...state,\n        game: { ...state.game,\n          gameStatus: GAME_STATUS.STATUS_RUNNING_MEMORIZE\n        }\n      };\n\n    case constants_ACTIONS.SWITCH_PRE_REMEMBER_PHASE:\n      return { ...state,\n        game: { ...state.game,\n          gameStatus: GAME_STATUS.STATUS_PRE_REMEMBER,\n          time: action.time\n        }\n      };\n\n    case constants_ACTIONS.SWITCH_REMEMBER_PHASE:\n      return { ...state,\n        game: { ...state.game,\n          gameStatus: GAME_STATUS.STATUS_RUNNING_REMEMBER,\n          time: action.time\n        }\n      };\n\n    case constants_ACTIONS.TIME_TICK_SECONDS:\n      return { ...state,\n        game: { ...state.game,\n          time: action.time\n        }\n      };\n\n    case constants_ACTIONS.CELL_GUESSED:\n      var newCells = [];\n      var cellData = state.game.allCells;\n\n      for (var n = 0; n < cellData.length; n++) {\n        newCells[n] = [];\n\n        for (let i = 0; i < cellData[n].length; i++) {\n          newCells[n][i] = cellData[n][i];\n\n          if (action.index == cellData[n][i].cellIndex && cellData[n][i].cellType == CELL_TYPES.FULL && cellData[n][i].cellState == CELL_STATES.CLOSED) {\n            newCells[n][i].cellState = CELL_STATES.OPENED;\n          }\n        }\n      }\n\n      return { ...state,\n        score: state.score + action.guessScore,\n        game: { ...state.game,\n          allCells: newCells,\n          clickedIndex: action.index,\n          lastGuessTimestamp: state.game.time\n        }\n      };\n\n    case constants_ACTIONS.END_GAME_LEVEL_UP:\n      return { ...state,\n        gameLevel: action.level,\n        maxLevel: action.maxLevel,\n        game: { ...state.game,\n          gameStatus: GAME_STATUS.STATUS_ENDED_LEVEL_UP\n        }\n      };\n\n    case constants_ACTIONS.CELL_ERROR:\n      var newCells = [];\n      var cellsData = state.game.allCells;\n\n      for (var n = 0; n < cellsData.length; n++) {\n        newCells[n] = [];\n\n        for (let i = 0; i < cellsData[n].length; i++) {\n          newCells[n][i] = cellsData[n][i];\n\n          if (action.index == cellsData[n][i].cellIndex && cellsData[n][i].cellType == CELL_TYPES.EMPTY && cellsData[n][i].cellState == CELL_STATES.CLOSED) {\n            newCells[n][i].cellState = CELL_STATES.OPENED;\n          }\n        }\n      }\n\n      return { ...state,\n        game: { ...state.game,\n          allCells: newCells,\n          errors: action.errors,\n          clickedIndex: action.index\n        }\n      };\n\n    case constants_ACTIONS.END_GAME_ERROR:\n      return { ...state,\n        gameLevel: action.level,\n        game: { ...state.game,\n          gameStatus: GAME_STATUS.STATUS_ENDED_ERROR\n        }\n      };\n\n    case constants_ACTIONS.END_GAME_TIMEOUT:\n      return { ...state,\n        game: { ...state.game,\n          gameStatus: GAME_STATUS.STATUS_ENDED_TIMEOUT\n        }\n      };\n\n    case constants_ACTIONS.END_GAME_CANCEL:\n      return { ...state,\n        game: { ...state.game,\n          cancelled: true\n        }\n      };\n\n    case constants_ACTIONS.SHOW_LEVEL_MENU:\n      return { ...state,\n        levelMenuOn: true\n      };\n\n    case constants_ACTIONS.HIDE_LEVEL_MENU:\n      return { ...state,\n        levelMenuOn: false\n      };\n\n    case constants_ACTIONS.CHANGE_LEVEL:\n      return { ...state,\n        gameLevel: action.level,\n        levelMenuOn: false\n      };\n\n    case constants_ACTIONS.SHOW_WIN_SCREEN:\n      return { ...state,\n        screen: SCREENS.WIN_SCREEN\n      };\n\n    case constants_ACTIONS.END_GAME_LAST_LEVEL:\n      return { ...state,\n        gameLevel: action.level,\n        game: { ...state.game,\n          gameStatus: GAME_STATUS.STATUS_ENDED_LAST_LEVEL\n        }\n      };\n\n    case constants_ACTIONS.UPDATE_MAX_LEVEL:\n      return { ...state,\n        maxLevel: action.maxLevel\n      };\n\n    case constants_ACTIONS.UPDATE_LEVEL:\n      return { ...state,\n        gameLevel: action.level\n      };\n\n    default:\n      return state;\n  }\n};\n;// CONCATENATED MODULE: ./src/js/state/store.js\n\n\n\nconst GAME_STORE = createStore(changeGameState, initialGameState);\n;// CONCATENATED MODULE: ./src/js/utils/clock.js\nclass Clock {\n  constructor(milliseconds) {\n    this.interval = milliseconds;\n    this.callbacks = [];\n    this.handle;\n    this.currentTimeMS;\n    this.onInterval = this.onInterval.bind(this);\n  }\n\n  addCallbacks(callbacksArr) {\n    for (let i = 0; i < callbacksArr.length; i++) {\n      this.callbacks.push(callbacksArr[i]);\n    }\n  }\n\n  removeCallbacks() {\n    this.callbacks = [];\n  }\n\n  start() {\n    this.reset();\n    this.handle = setInterval(this.onInterval, this.interval);\n  }\n\n  reset() {\n    clearInterval(this.handle);\n    this.handle = null;\n    this.currentTimeMS = 0;\n  }\n\n  pause() {\n    clearInterval(this.handle);\n    this.handle = null;\n  }\n\n  resume() {\n    this.handle = setInterval(this.onInterval, this.interval);\n  }\n\n  onInterval() {\n    this.currentTimeMS += this.interval;\n    var timeString = this.getCurrentTimeString();\n    this.printTimeStr(timeString);\n\n    if (this.callbacks.length > 0) {\n      for (let i = 0; i < this.callbacks.length; i++) {\n        this.callbacks[i](this.getCurrentTimeSec());\n      }\n    }\n  }\n\n  getCurrentTimeSec() {\n    return Math.round(this.currentTimeMS / 1000);\n  }\n\n  getCurrentTimeString() {\n    var timeObj = this.getTimeObj();\n    var timeStr = this.timeToStr(timeObj.hours, timeObj.minutes, timeObj.seconds);\n    return timeStr;\n  }\n\n  getTimeObj() {\n    let secondsElapsed = Math.round(this.currentTimeMS / 1000);\n    let minutesElapsed = Math.floor(secondsElapsed / 60);\n    let hours = Math.floor(secondsElapsed / 3600);\n    let seconds = secondsElapsed % 60;\n    let minutes = minutesElapsed % 60;\n    return {\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    };\n  }\n\n  timeToStr(hours, minutes, seconds) {\n    let hoursStr = hours >= 0 && hours < 10 ? "0" + hours : hours;\n    let minutesStr = minutes >= 0 && minutes < 10 ? "0" + minutes : minutes;\n    let secondsStr = seconds >= 0 && seconds < 10 ? "0" + seconds : seconds;\n    return hoursStr + ":" + minutesStr + ":" + secondsStr;\n  }\n\n  printTimeStr(timeStr) {//console.log(timeStr);\n  }\n\n}\n;// CONCATENATED MODULE: ./src/js/loaders/progress_bar_block_type.js\nfunction ProgressBarBlockType(_parentContainer, initialSize) {\n  this.parentContainer = _parentContainer;\n  this.resize = this.resize.bind(this);\n  this.currentProgressPercent = 0;\n  this.ACTIVE = false;\n  this.container = document.createElement("div");\n  this.container.className = "progressBarBT_CCSS";\n  this.updateProgressBar = this.updateProgressBar.bind(this);\n  this.blockInitArray = new Array();\n  this.blockInitArray[0] = new Array();\n  this.blockInitArray[0][0] = "*--***--*--**--*-**-*";\n  this.blockInitArray[0][1] = "-*-*-*--*--*-*-*--***";\n  this.blockInitArray[0][2] = "-*-*----**-*-*--*-*-*";\n  this.blockInitArray[0][3] = "*--*-*--*--**--*-*-*-";\n  this.blockInitArray[0][4] = "*-*--*--*--*-*-----**";\n  this.blockInitArray[0][5] = "*-*-***-*--*-*--**--*";\n  this.blockInitArray[0][6] = "*-*--*-*--*-*-*--*--*";\n  this.blockInitArray[0][7] = "*-*-*--***--*-*--*---";\n  this.blockInitArray[0][8] = "*-*-*--***--*-***-***";\n  this.blockInitArray[0][9] = "*-*-*--**--*--***--*-";\n  this.blockInitArray[0][10] = "*-*-*---*--**---*--**";\n  this.blockInitArray[0][11] = "*---*---*--**-**---*-";\n  this.coordinatesArray = new Array();\n  this.blockArray = new Array();\n  this.horizontalBlocksCount = 0;\n  this.verticalBlocksCount = 0;\n  this.toggleVisibility(false);\n  this.setDimensions(initialSize);\n  this.createBlocks();\n  window.addEventListener("resize", this.resize.bind(this));\n}\n\nProgressBarBlockType.prototype.setZIndex = function (value) {\n  this.container.style.zIndex = value;\n};\n\nProgressBarBlockType.prototype.resize = function (e) {\n  this.setDimensions();\n  this.resizeReal();\n};\n\nProgressBarBlockType.prototype.setDimensions = function (initialSize) {\n  var size = this.parentContainer.clientWidth * ProgressBarBlockType.SIZE_COEF;\n  var gap = Math.round(this.parentContainer.clientWidth * ProgressBarBlockType.GAP_COEF);\n\n  if (initialSize) {\n    size = initialSize.width * ProgressBarBlockType.SIZE_COEF;\n    gap = Math.round(initialSize.width * ProgressBarBlockType.GAP_COEF);\n  }\n\n  if (size > window.innerHeight * 0.05) {\n    size = window.innerHeight * 0.05;\n    gap = window.innerHeight * 0.01;\n  }\n\n  this.blockWidth = size;\n  this.blockHeight = this.blockWidth;\n  this.gap = gap;\n  this.container.style.width = this.blockInitArray[0][0].length * (this.blockWidth + this.gap) + "px";\n  this.container.style.height = this.blockInitArray[0].length * (this.blockWidth + this.gap) + "px";\n  this.getBlockCoordinates();\n};\n\nProgressBarBlockType.prototype.resizeReal = function () {\n  for (var i = 0; i < this.blockArray.length; i++) {\n    this.blockArray[i].resize(this.blockWidth, this.blockHeight);\n    this.blockArray[i].setPosXY(this.coordinatesArray[i].left, this.coordinatesArray[i].top);\n  }\n};\n\nProgressBarBlockType.prototype.getBlockCoordinates = function () {\n  this.horizontalBlocksCount = this.blockInitArray[0][0].length;\n  this.verticalBlocksCount = this.blockInitArray[0].length;\n  this.coordinatesArray = new Array();\n\n  for (var row = this.blockInitArray[0].length - 1; row >= 0; row--) {\n    for (var column = 0; column < this.blockInitArray[0][0].length; column++) {\n      if (this.blockInitArray[0][row].charAt(column) === "*") {\n        var coordX = column * (this.blockWidth + this.gap);\n        var coordY = row * (this.blockHeight + this.gap);\n        var coordsXY = {\n          left: coordX,\n          top: coordY\n        };\n        this.coordinatesArray.push(coordsXY);\n      }\n    }\n  }\n};\n\nProgressBarBlockType.prototype.createBlocks = function () {\n  for (var i = 0; i < this.coordinatesArray.length; i++) {\n    var tempBlock = new ProgressBarBlock(this.coordinatesArray[i].left, this.coordinatesArray[i].top, this.blockWidth, this.blockHeight, this.container);\n    this.blockArray.push(tempBlock);\n  }\n};\n\nProgressBarBlockType.prototype.addToContainer = function () {\n  if (!this.container.parentNode) {\n    this.parentContainer.appendChild(this.container);\n  }\n};\n\nProgressBarBlockType.prototype.removeFromContainer = function () {\n  window.removeEventListener("resize", this.resize);\n\n  if (this.container.parentNode) {\n    this.parentContainer.removeChild(this.container);\n  }\n};\n\nProgressBarBlockType.prototype.updateProgressBar = function (_progress) {\n  this.currentProgressPercent = _progress;\n  var activeBlocksCount = Math.floor(this.blockArray.length * (this.currentProgressPercent / 100));\n  this.updateActiveBlocksCount(activeBlocksCount);\n};\n\nProgressBarBlockType.prototype.updateActiveBlocksCount = function (_activeBlocksCount) {\n  for (var i = 0; i < this.blockArray.length; i++) {\n    if (i < _activeBlocksCount) {\n      this.blockArray[i].setActive();\n    } else {\n      this.blockArray[i].setInactive();\n    }\n  }\n};\n\nProgressBarBlockType.prototype.setXYPos = function (_left, _top) {\n  this.container.style.left = _left + "px";\n  this.container.style.top = _top + "px";\n};\n\nProgressBarBlockType.prototype.toggleVisibility = function (_visible) {\n  if (_visible) {\n    this.addToContainer();\n    this.ACTIVE = true;\n  } else {\n    this.removeFromContainer();\n    this.ACTIVE = false;\n  }\n};\n\nProgressBarBlockType.prototype.getWidth = function () {\n  return this.horizontalBlocksCount * (this.blockWidth + this.gap);\n};\n\nProgressBarBlockType.prototype.getHeight = function () {\n  return this.verticalBlocksCount * (this.blockHeight + this.gap);\n};\n\nProgressBarBlockType.SIZE_COEF = 0.035;\nProgressBarBlockType.GAP_COEF = 0;\n\nfunction ProgressBarBlock(_left, _top, _width, _height, _parentContainer) {\n  this.parentContainer = _parentContainer;\n  this.block = document.createElement("div");\n  this.block.className = "progressBarBT_Block_Inactive_CCSS";\n  this.setPosXY(_left, _top);\n  this.resize(_width, _height);\n  this.addToContainer();\n}\n\nProgressBarBlock.prototype.setActive = function () {\n  this.block.className = "progressBarBT_Block_Active_CCSS";\n};\n\nProgressBarBlock.prototype.setInactive = function () {\n  this.block.className = "progressBarBT_Block_Inactive_CCSS";\n};\n\nProgressBarBlock.prototype.addToContainer = function () {\n  this.parentContainer.appendChild(this.block);\n};\n\nProgressBarBlock.prototype.setPosXY = function (_left, _top) {\n  this.block.style.left = _left + "px";\n  this.block.style.top = _top + "px";\n};\n\nProgressBarBlock.prototype.resize = function (_width, _height) {\n  this.block.style.width = _width + "px";\n  this.block.style.height = _height + "px";\n};\n;// CONCATENATED MODULE: ./src/js/loaders/preloader_block.js\n\n\nfunction ProgressBar(parentContainer) {\n  this.parentContainer = parentContainer;\n  this.container = document.createElement("div");\n  this.parentContainer.appendChild(this.container);\n  this.outerDiv = document.createElement("div");\n  this.outerDiv.className = "preloaderOuter";\n  this.innerDiv = document.createElement("div");\n  this.innerDiv.className = "preloaderInner";\n  this.outerDiv.appendChild(this.innerDiv);\n  this.container.appendChild(this.outerDiv);\n}\n\nProgressBar.prototype.updateProgressBar = function (progress) {\n  this.innerDiv.style.width = progress + "%";\n};\n\nfunction PreloaderBlock(parentContainer, initialSize, onClickedCallback) {\n  this.parentContainer = parentContainer;\n\n  if (onClickedCallback) {\n    this.onClickedCallback = onClickedCallback;\n  }\n\n  this.removePreloader = this.removePreloader.bind(this);\n  this.removePreloaderAndClearAll = this.removePreloaderAndClearAll.bind(this);\n  this.updatePreloader = this.updatePreloader.bind(this);\n  this.container = document.createElement("div");\n  this.container.className = "preloaderBlockBkg";\n  this.progressBarBlock = new ProgressBarBlockType(this.container, initialSize);\n  this.progressBarBlock.addToContainer();\n  this.container.addEventListener("click", this.onClicked.bind(this));\n  this.label = document.createElement("div");\n  this.label.className = "preloaderBlockLabel";\n  this.container.appendChild(this.label);\n  this.progressBar = new ProgressBar(this.container);\n  this.updatePreloader(0);\n}\n\nPreloaderBlock.prototype.setZIndex = function (zIndex) {\n  this.container.style.zIndex = zIndex;\n};\n\nPreloaderBlock.prototype.updatePreloader = function (progress) {\n  var progresRounded = Math.round(progress);\n  this.label.innerText = progresRounded + "%";\n  this.progressBar.updateProgressBar(progress);\n  this.progressBarBlock.updateProgressBar(progress);\n};\n\nPreloaderBlock.prototype.onClicked = function (e) {\n  if (this.onClickedCallback) {\n    this.onClickedCallback();\n  }\n};\n\nPreloaderBlock.prototype.addToContainer = function () {\n  if (!this.container.parentNode) {\n    this.parentContainer.appendChild(this.container);\n  }\n};\n\nPreloaderBlock.prototype.removeFromContainer = function () {\n  this.parentContainer.removeChild(this.container);\n};\n\nPreloaderBlock.prototype.resetPreloader = function () {\n  this.label.innerText = 0 + "%";\n  this.progressBar.updateProgressBar(0);\n};\n\nPreloaderBlock.prototype.removePreloader = function () {\n  this.container.removeEventListener("click", this.onClicked);\n  this.container.addEventListener("animationend", this.removePreloaderAndClearAll);\n  this.container.style.animation = "preloaderFadeOut 0.5s forwards";\n};\n\nPreloaderBlock.prototype.removePreloaderAndClearAll = function () {\n  this.container.removeEventListener("animationend", this.removePreloaderAndClearAll);\n  this.removeFromContainer();\n};\n;// CONCATENATED MODULE: ./src/js/loaders/multiloader.js\nfunction MultiLoader(onLoadedCallback, onProgressCallback) {\n  if (onLoadedCallback) {\n    this.onLoadedCallback = onLoadedCallback;\n  }\n\n  if (onProgressCallback) {\n    this.onProgressCallback = onProgressCallback;\n  }\n\n  this.loaderProgress = this.loaderProgress.bind(this);\n  this.proceedLoadedResource = this.proceedLoadedResource.bind(this);\n  this.resourcesLoaded = 0;\n  this.loaders = [];\n  this.responseArray = [];\n}\n\nMultiLoader.prototype.setCallbacks = function (onLoadedCallback, onProgressCallback) {\n  if (onLoadedCallback) {\n    this.onLoadedCallback = onLoadedCallback;\n  }\n\n  if (onProgressCallback) {\n    this.onProgressCallback = onProgressCallback;\n  }\n};\n\nMultiLoader.prototype.setData = function (data) {\n  this.data = data;\n  this.resourcesLoaded = 0;\n};\n\nMultiLoader.prototype.startLoading = function () {\n  this.loaders = [];\n  this.responseArray = [];\n\n  for (var i = 0; i < this.data.length; i++) {\n    var xmlHttp = this.getXmlHttpRequest(); //console.log("TYPE: " + typeof this.data[i]);\n\n    if (typeof this.data[i] === "string") {\n      xmlHttp.path = this.data[i];\n      xmlHttp.name = this.data[i];\n    } else if (this.data[i].path) {\n      xmlHttp.path = this.data[i].path;\n      xmlHttp.name = this.data[i].name;\n\n      if (this.data[i].customData) {\n        xmlHttp.customData = this.data[i].customData;\n      }\n    } else {\n      continue;\n    }\n\n    xmlHttp.index = this.loaders.length;\n    xmlHttp.currentProgress = 0;\n    xmlHttp.open(\'GET\', xmlHttp.path, true);\n    var responseType = "arraybuffer";\n    var extension = xmlHttp.path.substr(xmlHttp.path.length - 3, 3);\n\n    switch (extension) {\n      case "txt":\n        responseType = "text";\n        break;\n\n      case "son":\n        responseType = "text";\n        break;\n\n      case "csv":\n        responseType = "text";\n        break;\n    }\n\n    xmlHttp.responseType = responseType;\n    xmlHttp.addEventListener("progress", this.loaderProgress);\n    xmlHttp.addEventListener("load", this.proceedLoadedResource);\n    this.loaders.push(xmlHttp);\n  }\n\n  for (var l = 0; l < this.loaders.length; l++) {\n    this.loaders[l].send();\n  }\n};\n\nMultiLoader.prototype.loaderProgress = function (e) {\n  if (!e.lengthComputable) {\n    return;\n  }\n\n  e.currentTarget.currentProgress = e.loaded / e.total;\n  var loadingProgress = 0;\n\n  for (var i = 0; i < this.loaders.length; i++) {\n    loadingProgress += this.loaders[i].currentProgress * 100;\n  }\n\n  loadingProgress /= this.loaders.length;\n\n  if (this.onProgressCallback) {\n    this.onProgressCallback(loadingProgress);\n  }\n};\n\nMultiLoader.prototype.proceedLoadedResource = function (e) {\n  var blob = new Blob([e.currentTarget.response]);\n  var blobLink = window.URL.createObjectURL(blob);\n  var responseObj = {\n    objectURL: blobLink,\n    objectBlob: blob,\n    data: e.currentTarget.response,\n    name: e.currentTarget.name,\n    path: e.currentTarget.path,\n    customData: e.currentTarget.customData\n  };\n  this.responseArray.push(responseObj);\n  this.resourcesLoaded++;\n\n  if (this.resourcesLoaded >= this.loaders.length) {\n    for (let i = 0; i < this.loaders.length; i++) {\n      this.loaders[i].removeEventListener("progress", this.loaderProgress);\n      this.loaders[i].removeEventListener("load", this.proceedLoadedResource);\n    }\n\n    this.loaders = null;\n    this.onLoadedCallback(this.responseArray);\n  }\n};\n\nMultiLoader.prototype.getXmlHttpRequest = function () {\n  var xmlHttp;\n\n  if (window.XMLHttpRequest) {\n    xmlHttp = new XMLHttpRequest();\n  } else {\n    xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");\n  }\n\n  return xmlHttp;\n};\n\nMultiLoader.prototype.getResource = function (resourceName) {\n  for (var i = 0; i < this.responseArray.length; i++) {\n    if (this.responseArray[i].name == resourceName) {\n      return this.responseArray[i];\n    }\n  }\n};\n;// CONCATENATED MODULE: ./src/js/state/actions.js\n\nconst CELL_GUESSED_ACTION = (index, guessScore) => {\n  return {\n    type: constants_ACTIONS.CELL_GUESSED,\n    index: index,\n    guessScore: guessScore\n  };\n};\nconst CELL_ERROR_ACTION = (index, errors) => {\n  return {\n    type: constants_ACTIONS.CELL_ERROR,\n    index: index,\n    errors: errors\n  };\n};\nconst INITIATE_NEW_LEVEL_ACTION = gameData => {\n  return {\n    type: constants_ACTIONS.INITIATE_NEW_LEVEL,\n    gameData: gameData\n  };\n};\nconst START_LEVEL_ACTION = () => {\n  return {\n    type: constants_ACTIONS.START_LEVEL\n  };\n};\nconst SWITCH_PRE_REMEMBER_PHASE_ACTION = gameData => {\n  return {\n    type: constants_ACTIONS.SWITCH_PRE_REMEMBER_PHASE,\n    gameData: gameData\n  };\n};\nconst SWITCH_REMEMBER_PHASE_ACTION = timeSec => {\n  return {\n    type: constants_ACTIONS.SWITCH_REMEMBER_PHASE,\n    time: timeSec\n  };\n}; //---------------------------end game cases----------------------\n\nconst END_GAME_LEVEL_UP_ACTION = (newLevel, maxLevel) => {\n  return {\n    type: constants_ACTIONS.END_GAME_LEVEL_UP,\n    level: newLevel,\n    maxLevel: maxLevel\n  };\n};\nconst END_GAME_ERROR_ACTION = (currentErrors, level) => {\n  return {\n    type: constants_ACTIONS.END_GAME_ERROR,\n    currentErrors: currentErrors,\n    level: level\n  };\n};\nconst END_GAME_TIMEOUT_ACTION = timeSec => {\n  return {\n    type: constants_ACTIONS.END_GAME_TIMEOUT,\n    time: timeSec\n  };\n};\nconst END_GAME_CANCEL_ACTION = () => {\n  return {\n    type: ACTIONS.END_GAME_CANCEL\n  };\n};\nconst END_GAME_LAST_LEVEL_ACTION = level => {\n  return {\n    type: constants_ACTIONS.END_GAME_LAST_LEVEL,\n    level: level\n  };\n}; //--------------------------------------end end game cases---------------------------\n\nconst SHOW_BEGIN_SCREEN_ACTION = (level, maxLevel) => {\n  return {\n    type: constants_ACTIONS.SHOW_BEGIN_SCREEN,\n    level: level,\n    maxLevel: maxLevel\n  };\n};\nconst SHOW_WIN_SCREEN_ACTION = () => {\n  return {\n    type: constants_ACTIONS.SHOW_WIN_SCREEN\n  };\n};\nconst TIME_TICK_SECONDS_ACTION = timeString => {\n  return {\n    type: constants_ACTIONS.TIME_TICK_SECONDS,\n    time: timeString\n  };\n};\nconst CHANGE_LEVEL_ACTION = level => {\n  return {\n    type: constants_ACTIONS.CHANGE_LEVEL,\n    level: level\n  };\n};\nconst SHOW_LEVEL_MENU_ACTION = () => {\n  return {\n    type: constants_ACTIONS.SHOW_LEVEL_MENU\n  };\n};\nconst HIDE_LEVEL_MENU_ACTION = () => {\n  return {\n    type: constants_ACTIONS.HIDE_LEVEL_MENU\n  };\n};\nconst UPDATE_LEVEL_ACTION = level => {\n  return {\n    type: constants_ACTIONS.UPDATE_LEVEL,\n    level: level\n  };\n};\nconst UPDATE_MAX_LEVEL_ACTION = maxLevel => {\n  return {\n    type: constants_ACTIONS.UPDATE_MAX_LEVEL,\n    maxLevel: maxLevel\n  };\n};\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(379);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(795);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(569);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(565);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(216);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(589);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/styles/preloader.css\nvar preloader = __webpack_require__(278);\n;// CONCATENATED MODULE: ./src/styles/preloader.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\n\n      options.insert = insertBySelector_default().bind(null, "head");\n    \noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(preloader/* default */.Z, options);\n\n\n\n\n       /* harmony default export */ const styles_preloader = (preloader/* default */.Z && preloader/* default.locals */.Z.locals ? preloader/* default.locals */.Z.locals : undefined);\n\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/styles/styles.css\nvar styles = __webpack_require__(772);\n;// CONCATENATED MODULE: ./src/styles/styles.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar styles_options = {};\n\nstyles_options.styleTagTransform = (styleTagTransform_default());\nstyles_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      styles_options.insert = insertBySelector_default().bind(null, "head");\n    \nstyles_options.domAPI = (styleDomAPI_default());\nstyles_options.insertStyleElement = (insertStyleElement_default());\n\nvar styles_update = injectStylesIntoStyleTag_default()(styles/* default */.Z, styles_options);\n\n\n\n\n       /* harmony default export */ const styles_styles = (styles/* default */.Z && styles/* default.locals */.Z.locals ? styles/* default.locals */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/js/index.js\n\n\n\n\n\n\n\n\n\n\n\nvar startHandle;\nvar preRemHandle;\nvar gameClock;\nvar unsubscribeClickAnalyze;\nvar unsubscribePreRemCallback;\nvar unsubscribeRemCallback; //-----------------------------------assets loading--------------------------------\n\nvar initialSize = {\n  width: window.innerWidth,\n  height: window.innerHeight\n};\nvar js_preloader = new PreloaderBlock(document.body, initialSize);\njs_preloader.setZIndex(101);\njs_preloader.addToContainer();\nvar multiloader = new MultiLoader(onAssetsLoaded, onAssetsProgress);\nmultiloader.setData(ASSETS_DATA);\nmultiloader.startLoading(); //------------------------------------------------------------------------------------\n\nfunction onAssetsProgress(progress) {\n  js_preloader.updatePreloader(progress);\n}\n\nfunction onAssetsLoaded(resources) {\n  for (var i = 0; i < resources.length; i++) {\n    if (resources[i].name.includes("sound")) {\n      let tempSound = createSound(resources[i].objectURL);\n      tempSound.volume = 0.7;\n      SOUNDS[resources[i].name] = tempSound;\n    } else {\n      IMAGES_DATA[resources[i].name] = resources[i].objectURL;\n    }\n  }\n\n  setup();\n  initialRender();\n} //--------------------------------------------------------------------------------\n\n\nfunction setup() {\n  gameClock = new Clock(1000);\n  gameClock.addCallbacks([onTick]);\n  window.onresize = renderApp;\n  updateLevelAndMaxLevel();\n  GAME_STORE.subscribe(renderApp);\n}\n\nfunction updateLevelAndMaxLevel() {\n  var maxLevel = retrieveMaxLevel();\n  GAME_STORE.dispatch(UPDATE_MAX_LEVEL_ACTION(maxLevel));\n  var level = retrieveLevel();\n  GAME_STORE.dispatch(UPDATE_LEVEL_ACTION(level));\n}\n\nfunction retrieveMaxLevel() {\n  var maxLevelValue = window.localStorage.getItem("maxLevel");\n\n  if (maxLevelValue) {\n    return Number(maxLevelValue);\n  } else {\n    return 0;\n  }\n}\n\nfunction retrieveLevel() {\n  var level = window.localStorage.getItem("level");\n\n  if (level) {\n    return Number(level);\n  } else {\n    return 0;\n  }\n}\n\nfunction initialRender() {\n  if (startHandle) {\n    clearTimeout(startHandle);\n    startHandle = null;\n  }\n\n  var container = document.getElementById("ReactContainer");\n\n  if (!container) {\n    startHandle = setTimeout(initialRender, 500);\n    return;\n  }\n\n  container.className = "full";\n  renderApp();\n\n  if (js_preloader) {\n    js_preloader.removePreloader();\n    js_preloader = null;\n  }\n}\n\nfunction renderApp() {\n  let callbacks = {\n    onCellClicked: onCellClicked,\n    onGameButtonClicked: onGameButtonClicked,\n    onStartGameClicked: onStartGameClicked,\n    onLevelClicked: onLevelClicked,\n    onSelectLevelClicked: onSelectLevelClicked,\n    hideLevelMenu: hideLevelMenu,\n    showBeginScreen: showBeginScreen,\n    resetToBeginScreen: resetToBeginScreen\n  };\n  let gameState = GAME_STORE.getState();\n  (0,react_dom.render)( /*#__PURE__*/react.createElement(GameView, {\n    state: gameState,\n    callbacks: callbacks\n  }), document.getElementById("ReactContainer"));\n} //----------------------------------------------callbacks------------------------------------------------------------------\n\n\nfunction onStartGameClicked() {\n  var gameState = GAME_STORE.getState();\n\n  if (gameState.screen != SCREENS.BEGIN_SCREEN) {\n    return;\n  }\n\n  SOUNDS.sound_click.play();\n  let newGameData = getNewGameData(gameState.gameLevel, gameState.maxLevel, 0);\n  GAME_STORE.dispatch(INITIATE_NEW_LEVEL_ACTION(newGameData));\n}\n\nfunction onCellClicked(index) {\n  var gameState = GAME_STORE.getState();\n\n  if (gameState.screen != SCREENS.GAME_SCREEN || gameState.game.gameStatus != GAME_STATUS.STATUS_RUNNING_REMEMBER) {\n    return;\n  }\n\n  SOUNDS.sound_click.play();\n  unsubscribeClickAnalyze = GAME_STORE.subscribe(analyzeCellClickResult);\n  let match = checkForMatch(index, gameState);\n\n  if (match) {\n    var timeFromLastGuess = gameState.game.time - gameState.game.lastGuessTimestamp;\n    var guessScore = Math.round(BASE_POINTS_PER_GUESS / (timeFromLastGuess + 1)); //console.log("BASE_POINTS_PER_GUESS: " + BASE_POINTS_PER_GUESS);\n\n    GAME_STORE.dispatch(CELL_GUESSED_ACTION(index, guessScore));\n  } else {\n    var currentErrors = gameState.game.errors + 1;\n    GAME_STORE.dispatch(CELL_ERROR_ACTION(index, currentErrors));\n  }\n}\n\nfunction showBeginScreen() {\n  let level = GAME_STORE.getState().gameLevel;\n  let maxLevel = GAME_STORE.getState().maxLevel;\n  GAME_STORE.dispatch(SHOW_BEGIN_SCREEN_ACTION(level, maxLevel));\n}\n\nfunction resetToBeginScreen() {\n  clearInterval(preRemHandle);\n  gameClock.reset();\n  showBeginScreen();\n}\n\nfunction showWinScreen() {\n  gameClock.reset();\n  GAME_STORE.dispatch(SHOW_WIN_SCREEN_ACTION());\n}\n\nfunction onGameButtonClicked() {\n  if (GAME_STORE.getState().game.cancelled) {\n    showBeginScreen();\n    return;\n  }\n\n  SOUNDS.sound_click.play();\n  var currentGameState = GAME_STORE.getState().game.gameStatus;\n\n  switch (currentGameState) {\n    case GAME_STATUS.STATUS_PRE_MEMORIZE:\n      gameClock.start();\n      GAME_STORE.dispatch(START_LEVEL_ACTION());\n      break;\n\n    case GAME_STATUS.STATUS_RUNNING_MEMORIZE:\n      gameClock.start();\n      activateRememberMode();\n      break;\n\n    case GAME_STATUS.STATUS_PRE_REMEMBER:\n      //clearInterval(preRemHandle);\n      //gameClock.pause();\n      //GAME_STORE.dispatch(END_GAME_CANCEL_ACTION());\n      break;\n\n    case GAME_STATUS.STATUS_RUNNING_REMEMBER:\n      //gameClock.pause();\n      //GAME_STORE.dispatch(END_GAME_CANCEL_ACTION());\n      break;\n\n    case GAME_STATUS.STATUS_ENDED_ERROR:\n      showBeginScreen();\n      break;\n\n    case GAME_STATUS.STATUS_ENDED_TIMEOUT:\n      showBeginScreen();\n      break;\n\n    case GAME_STATUS.STATUS_ENDED_LEVEL_UP:\n      let currentScore = GAME_STORE.getState().score;\n      let newGameLevel = GAME_STORE.getState().gameLevel;\n      let maxLevel = GAME_STORE.getState().maxLevel;\n      let newGameData = getNewGameData(newGameLevel, maxLevel, currentScore);\n      GAME_STORE.dispatch(INITIATE_NEW_LEVEL_ACTION(newGameData));\n      break;\n\n    case GAME_STATUS.STATUS_ENDED_LAST_LEVEL:\n      showWinScreen();\n      break;\n  }\n}\n\nfunction onLevelClicked(level) {\n  SOUNDS.sound_click.play();\n  GAME_STORE.dispatch(CHANGE_LEVEL_ACTION(level));\n}\n\nfunction onSelectLevelClicked(e) {\n  SOUNDS.sound_click.play();\n  e.stopPropagation();\n  let state = GAME_STORE.getState();\n\n  if (state.levelMenuOn) {\n    GAME_STORE.dispatch(HIDE_LEVEL_MENU_ACTION());\n    return;\n  }\n\n  GAME_STORE.dispatch(SHOW_LEVEL_MENU_ACTION());\n}\n\nfunction hideLevelMenu() {\n  let state = GAME_STORE.getState();\n\n  if (state.levelMenuOn) {\n    GAME_STORE.dispatch(HIDE_LEVEL_MENU_ACTION());\n  }\n} //---------------------------------------------end callbacks---------------------------------------------------------------------------\n\n\nfunction analyzeCellClickResult() {\n  unsubscribeClickAnalyze();\n  unsubscribeClickAnalyze = null;\n  let gameState = GAME_STORE.getState();\n\n  if (gameState.screen == SCREENS.GAME_SCREEN && gameState.game.gameStatus == GAME_STATUS.STATUS_RUNNING_REMEMBER) {\n    if (checkIfLast(gameState)) {\n      gameClock.pause();\n      let newLevel = gameState.gameLevel + 1;\n\n      if (newLevel >= GRID_LEVELS.length) {\n        GAME_STORE.dispatch(END_GAME_LAST_LEVEL_ACTION(0));\n        return;\n      } else {\n        window.localStorage.setItem("level", String(newLevel));\n        var maxLevel = gameState.maxLevel;\n\n        if (!maxLevel) {\n          maxLevel = 0;\n        }\n\n        if (newLevel > maxLevel) {\n          window.localStorage.setItem("maxLevel", String(newLevel));\n          maxLevel = newLevel;\n        }\n\n        GAME_STORE.dispatch(END_GAME_LEVEL_UP_ACTION(newLevel, maxLevel));\n      }\n    }\n\n    if (gameState.game.errors > MAX_ERRORS) {\n      gameClock.pause();\n      GAME_STORE.dispatch(END_GAME_ERROR_ACTION(gameState.game.errors, gameState.gameLevel));\n    }\n  }\n}\n\nfunction getNewGameData(level, maxLevel, score) {\n  let allCells = initCells(level);\n  return {\n    level: level,\n    maxLevel: maxLevel,\n    score: score,\n    time: 0,\n    lastGuessTimestamp: 0,\n    allCells: allCells,\n    gameStatus: GAME_STATUS.STATUS_PRE_MEMORIZE,\n    errors: 0,\n    levelData: GRID_LEVELS[level],\n    cancelled: false,\n    clickedIndex: null\n  };\n}\n\nfunction onTick(timeSec) {\n  var level = GAME_STORE.getState().gameLevel;\n  var timeMode = GAME_STORE.getState().game.gameStatus;\n  var timeLimit;\n\n  if (timeMode == GAME_STATUS.STATUS_RUNNING_MEMORIZE) {\n    timeLimit = GRID_LEVELS[level].timeM;\n\n    if (timeSec >= timeLimit) {\n      unsubscribePreRemCallback = GAME_STORE.subscribe(preRemCallback);\n      gameClock.reset();\n      GAME_STORE.dispatch(TIME_TICK_SECONDS_ACTION(timeSec));\n      return;\n    }\n  } else if (timeMode == GAME_STATUS.STATUS_RUNNING_REMEMBER) {\n    timeLimit = GRID_LEVELS[level].timeR;\n\n    if (timeSec >= timeLimit) {\n      gameClock.pause(); //stopping clock, game is over\n\n      GAME_STORE.dispatch(END_GAME_TIMEOUT_ACTION(timeSec));\n      return;\n    }\n  }\n\n  GAME_STORE.dispatch(TIME_TICK_SECONDS_ACTION(timeSec));\n}\n\nfunction preRemCallback() {\n  unsubscribePreRemCallback();\n  unsubscribePreRemCallback = null;\n  unsubscribeRemCallback = GAME_STORE.subscribe(preActivateRememberMode);\n  GAME_STORE.dispatch(SWITCH_PRE_REMEMBER_PHASE_ACTION());\n}\n\nfunction preActivateRememberMode() {\n  unsubscribeRemCallback();\n  unsubscribeRemCallback = null;\n  preRemHandle = setTimeout(activateRememberMode, PRE_REM_MODE_DURATION_SEC * 1000);\n}\n\nfunction activateRememberMode() {\n  GAME_STORE.dispatch(SWITCH_REMEMBER_PHASE_ACTION(0));\n  gameClock.start(); //restarting clock for the new remembering mode\n}\n\nfunction initCells(level) {\n  let width = GRID_LEVELS[level].w;\n  let height = GRID_LEVELS[level].h;\n  let numTargetCells = GRID_LEVELS[level].c;\n  let gridIndexes = [];\n  let chosenIndexes = [];\n\n  for (let i = 0; i < width * height; i++) {\n    gridIndexes.push(i);\n  }\n\n  for (let i = 0; i < numTargetCells; i++) {\n    let index = Math.floor(Math.random() * gridIndexes.length);\n    chosenIndexes[i] = gridIndexes[index];\n    gridIndexes.splice(index, 1);\n  }\n\n  let allCells = [];\n  let cellCounter = 0;\n\n  for (let n = 0; n < GRID_LEVELS[level].h; n++) {\n    allCells[n] = [];\n\n    for (let i = 0; i < GRID_LEVELS[level].w; i++) {\n      var cellTypeValue = "TYPE_NOT_DEFINED";\n\n      if (chosenIndexes.indexOf(cellCounter) != -1) {\n        cellTypeValue = CELL_TYPES.FULL;\n      } else {\n        cellTypeValue = CELL_TYPES.EMPTY;\n      }\n\n      let tempCell = {\n        cellState: CELL_STATES.CLOSED,\n        cellType: cellTypeValue,\n        cellIndex: cellCounter\n      };\n      allCells[n][i] = tempCell;\n      cellCounter++;\n    }\n  }\n\n  return allCells;\n}\n\nfunction checkForMatch(index, gameState) {\n  var cells = gameState.game.allCells;\n\n  for (var n = 0; n < cells.length; n++) {\n    for (let i = 0; i < cells[n].length; i++) {\n      if (index == cells[n][i].cellIndex && cells[n][i].cellType == CELL_TYPES.FULL && cells[n][i].cellState == CELL_STATES.CLOSED) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction checkIfLast(gameState) {\n  var cellsData = gameState.game.allCells;\n  var numUnopened = 0;\n\n  for (var n = 0; n < cellsData.length; n++) {\n    for (let i = 0; i < cellsData[n].length; i++) {\n      if (cellsData[n][i].cellType == CELL_TYPES.FULL && cellsData[n][i].cellState == CELL_STATES.CLOSED) {\n        numUnopened++;\n      }\n    }\n  }\n\n  if (numUnopened != 0) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction createSound(src) {\n  var sound = document.createElement("audio");\n  sound.src = src;\n  sound.setAttribute("preload", "auto");\n  sound.setAttribute("controls", "none");\n  sound.style.display = "none";\n  document.body.appendChild(sound);\n  return sound;\n}\n\nfunction clearAllSounds() {\n  Sound.removeAllSounds();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVQsQ0FBYTlGLENBQWIsRUFBZ0JrRixRQUFoQixJQUE0QmxMLGVBQTVCLElBQStDNk4sU0FBUyxDQUFDL0IsQ0FBRCxDQUFULENBQWE5RixDQUFiLEVBQWdCbUYsU0FBaEIsSUFBNkJoTCxrQkFBaEYsRUFDQTtBQUNJZ2MsUUFBQUEsV0FBVztBQUNkO0FBQ0o7QUFDSjs7QUFFRCxNQUFJQSxXQUFXLElBQUksQ0FBbkIsRUFDQTtBQUNJLFdBQU8sS0FBUDtBQUNIOztBQUVELFNBQU8sSUFBUDtBQUNIOztBQUVELFNBQVNoRCxXQUFULENBQXFCaUQsR0FBckIsRUFDQTtBQUNJLE1BQUlDLEtBQUssR0FBR3BNLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixPQUF2QixDQUFaO0FBQ0FtTSxFQUFBQSxLQUFLLENBQUNELEdBQU4sR0FBWUEsR0FBWjtBQUNBQyxFQUFBQSxLQUFLLENBQUNDLFlBQU4sQ0FBbUIsU0FBbkIsRUFBOEIsTUFBOUI7QUFDQUQsRUFBQUEsS0FBSyxDQUFDQyxZQUFOLENBQW1CLFVBQW5CLEVBQStCLE1BQS9CO0FBQ0FELEVBQUFBLEtBQUssQ0FBQ2xXLEtBQU4sQ0FBWW9XLE9BQVosR0FBc0IsTUFBdEI7QUFDQXRNLEVBQUFBLFFBQVEsQ0FBQzJJLElBQVQsQ0FBY3RHLFdBQWQsQ0FBMEIrSixLQUExQjtBQUVBLFNBQVFBLEtBQVI7QUFDSDs7QUFFRCxTQUFTRyxjQUFULEdBQ0E7QUFDSUMsRUFBQUEsS0FBSyxDQUFDQyxlQUFOO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZW1vcnlnYW1lLy4vc3JjL2pzL3N0YXRlL2NvbnN0YW50cy5qcz81NmZhIiwid2VicGFjazovL21lbW9yeWdhbWUvLi9zcmMvanMvY29tcG9uZW50cy9sZXZlbE1lbnUuanM/YzhiMyIsIndlYnBhY2s6Ly9tZW1vcnlnYW1lLy4vc3JjL2pzL3ZpZXcvYmVnaW5fc2NyZWVuLmpzP2I3MzEiLCJ3ZWJwYWNrOi8vbWVtb3J5Z2FtZS8uL3NyYy9qcy9jb21wb25lbnRzL2NlbGwuanM/NTcyNyIsIndlYnBhY2s6Ly9tZW1vcnlnYW1lLy4vc3JjL2pzL3ZpZXcvZ2FtZV9zY3JlZW4uanM/MTNlNSIsIndlYnBhY2s6Ly9tZW1vcnlnYW1lLy4vc3JjL2pzL3ZpZXcvd2luX3NjcmVlbi5qcz81MzI3Iiwid2VicGFjazovL21lbW9yeWdhbWUvLi9zcmMvanMvdmlldy9nYW1lX3ZpZXcuanM/NzQ2ZiIsIndlYnBhY2s6Ly9tZW1vcnlnYW1lLy4vbm9kZV9tb2R1bGVzL3JlZHV4L2VzL3JlZHV4LmpzPzAwZDgiLCJ3ZWJwYWNrOi8vbWVtb3J5Z2FtZS8uL3NyYy9qcy9zdGF0ZS9yZWR1Y2Vycy5qcz9lZmRlIiwid2VicGFjazovL21lbW9yeWdhbWUvLi9zcmMvanMvc3RhdGUvc3RvcmUuanM/M2VjNiIsIndlYnBhY2s6Ly9tZW1vcnlnYW1lLy4vc3JjL2pzL3V0aWxzL2Nsb2NrLmpzPzk1NDgiLCJ3ZWJwYWNrOi8vbWVtb3J5Z2FtZS8uL3NyYy9qcy9sb2FkZXJzL3Byb2dyZXNzX2Jhcl9ibG9ja190eXBlLmpzPzkwZGUiLCJ3ZWJwYWNrOi8vbWVtb3J5Z2FtZS8uL3NyYy9qcy9sb2FkZXJzL3ByZWxvYWRlcl9ibG9jay5qcz8yMTNmIiwid2VicGFjazovL21lbW9yeWdhbWUvLi9zcmMvanMvbG9hZGVycy9tdWx0aWxvYWRlci5qcz8wM2NiIiwid2VicGFjazovL21lbW9yeWdhbWUvLi9zcmMvanMvc3RhdGUvYWN0aW9ucy5qcz9iM2RjIiwid2VicGFjazovL21lbW9yeWdhbWUvLi9zcmMvc3R5bGVzL3ByZWxvYWRlci5jc3M/NWJlYyIsIndlYnBhY2s6Ly9tZW1vcnlnYW1lLy4vc3JjL3N0eWxlcy9zdHlsZXMuY3NzP2U0NWIiLCJ3ZWJwYWNrOi8vbWVtb3J5Z2FtZS8uL3NyYy9qcy9pbmRleC5qcz83YmE1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBBU1NFVFNfREFUQSA9IFtcclxuICAgIHsgbmFtZTogXCJ3aW5cIiwgcGF0aDogXCIuL2Fzc2V0cy93aW4yLnBuZ1wiIH0sXHJcbiAgICB7IG5hbWU6IFwic2hvd1wiLCBwYXRoOiBcIi4vYXNzZXRzL3VuY2hlY2sucG5nXCIgfSxcclxuICAgIHsgbmFtZTogXCJjaGVja1wiLCBwYXRoOiBcIi4vYXNzZXRzL2NoZWNrLnBuZ1wiIH0sXHJcbiAgICB7IG5hbWU6IFwidW5ndWVzc1wiLCBwYXRoOiBcIi4vYXNzZXRzL3VuZ3Vlc3MucG5nXCIgfSxcclxuICAgIHsgbmFtZTogXCJlcnJvclwiLCBwYXRoOiBcIi4vYXNzZXRzL3gyLnBuZ1wiIH0sXHJcbiAgICB7IG5hbWU6IFwic3BsYXNoXCIsIHBhdGg6IFwiLi9hc3NldHMvc3BsYXNoLnBuZ1wiIH0sXHJcbiAgICB7IG5hbWU6IFwiZXhpdFwiLCBwYXRoOiBcIi4vYXNzZXRzL2V4aXQucG5nXCIgfSxcclxuICAgIHsgbmFtZTogXCJzb3VuZF9jbGlja1wiLCBwYXRoOiBcIi4vYXNzZXRzL2NsaWNrLndhdlwiIH0sXHJcbl1cclxuXHJcbmV4cG9ydCB2YXIgSU1BR0VTX0RBVEEgPSB7fTtcclxuZXhwb3J0IHZhciBTT1VORFMgPXt9O1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBTQ1JFRU5TID0ge1xyXG4gICAgQkVHSU5fU0NSRUVOOiBcIkJFR0lOX1NDUkVFTlwiLFxyXG4gICAgR0FNRV9TQ1JFRU46IFwiR0FNRV9TQ1JFRU5cIixcclxuICAgIFdJTl9TQ1JFRU46IFwiV0lOX1NDUkVFTlwiXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBDRUxMX1RZUEVTID0ge1xyXG4gICAgRU1QVFk6IFwiRU1QVFlcIixcclxuICAgIEZVTEw6IFwiRlVMTFwiLFxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgQ0VMTF9TVEFURVMgPSB7XHJcbiAgICBPUEVORUQ6IFwiT1BFTkVEXCIsXHJcbiAgICBDTE9TRUQ6IFwiQ0xPU0VEXCIsXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBDRUxMX1ZJU1VBTF9TVEFURVMgPSB7XHJcbiAgICBDT1ZFUkVEOiBcIkNPVkVSRURcIixcclxuICAgIFNIT1c6IFwiU0hPV1wiLFxyXG4gICAgR1VFU1NFRDogXCJHVUVTU0VEXCIsXHJcbiAgICBVTkdVRVNTRUQ6IFwiVU5HVUVTU0VEXCIsXHJcbiAgICBFUlJPUjogXCJFUlJPUlwiXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBBQ1RJT05TID0ge1xyXG4gICAgU1RBUlRfTEVWRUw6IFwiU1RBUlRfTEVWRUxcIixcclxuICAgIFNXSVRDSF9QUkVfUkVNRU1CRVJfUEhBU0U6IFwiU1dJVENIX1BSRV9SRU1FTUJFUl9QSEFTRVwiLFxyXG4gICAgU1dJVENIX1JFTUVNQkVSX1BIQVNFOiBcIlNXSVRDSF9SRU1FTUJFUl9QSEFTRVwiLFxyXG5cclxuICAgIEhJREVfTEVWRUxfTUVOVTogXCJISURFX0xFVkVMX01FTlVcIixcclxuICAgIFNIT1dfTEVWRUxfTUVOVTogXCJTSE9XX0xFVkVMX01FTlVcIixcclxuICAgIENIQU5HRV9MRVZFTDogXCJDSEFOR0VfTEVWRUxcIixcclxuXHJcbiAgICBDRUxMX0dVRVNTRUQ6IFwiQ0VMTF9HVUVTU0VEXCIsXHJcbiAgICBDRUxMX0VSUk9SOiBcIkNFTExfRVJST1JcIixcclxuXHJcbiAgICBUSU1FX1RJQ0tfU0VDT05EUzogXCJUSU1FX1RJQ0tfU0VDT05EU1wiLFxyXG5cclxuICAgIFNIT1dfQkVHSU5fU0NSRUVOOiBcIlNIT1dfQkVHSU5fU0NSRUVOXCIsXHJcbiAgICBJTklUSUFURV9ORVdfTEVWRUw6IFwiSU5JVElBVEVfTkVXX0xFVkVMXCIsXHJcbiAgICBTSE9XX1dJTl9TQ1JFRU46IFwiU0hPV19XSU5fU0NSRUVOXCIsXHJcblxyXG4gICAgRU5EX0dBTUVfTEVWRUxfVVA6IFwiRU5EX0dBTUVfTEVWRUxfVVBcIixcclxuICAgIEVORF9HQU1FX0xBU1RfTEVWRUw6IFwiRU5EX0dBTUVfTEFTVF9MRVZFTFwiLFxyXG4gICAgRU5EX0dBTUVfVElNRU9VVDogXCJFTkRfR0FNRV9USU1FT1VUXCIsXHJcbiAgICBFTkRfR0FNRV9FUlJPUjogXCJFTkRfR0FNRV9FUlJPUlwiLFxyXG4gICAgRU5EX0dBTUVfQ0FOQ0VMOiBcIkVORF9HQU1FX0NBTkNFTFwiLFxyXG5cclxuICAgIFVQREFURV9MRVZFTDogXCJVUERBVEVfTEVWRUxcIixcclxuICAgIFVQREFURV9NQVhfTEVWRUw6IFwiVVBEQVRFX01BWF9MRVZFTFwiLFxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgR0FNRV9TVEFUVVMgPSB7XHJcbiAgICBTVEFUVVNfUFJFX01FTU9SSVpFOiBcIlNUQVRVU19QUkVfTUVNT1JJWkVcIixcclxuICAgIFNUQVRVU19SVU5OSU5HX01FTU9SSVpFOiBcIlNUQVRVU19SVU5OSU5HX01FTU9SSVpFXCIsXHJcbiAgICBTVEFUVVNfUFJFX1JFTUVNQkVSOiBcIlNUQVRVU19QUkVfUkVNRU1CRVJcIixcclxuICAgIFNUQVRVU19SVU5OSU5HX1JFTUVNQkVSOiBcIlNUQVRVU19SVU5OSU5HX1JFTUVNQkVSXCIsXHJcbiAgICBTVEFUVVNfRU5ERURfTEVWRUxfVVA6IFwiU1RBVFVTX0VOREVEX0xFVkVMX1VQXCIsXHJcbiAgICBTVEFUVVNfRU5ERURfVElNRU9VVDogXCJTVEFUVVNfRU5ERURfVElNRU9VVFwiLFxyXG4gICAgU1RBVFVTX0VOREVEX0VSUk9SOiBcIlNUQVRVU19FTkRFRF9FUlJPUlwiLFxyXG4gICAgU1RBVFVTX0VOREVEX0xBU1RfTEVWRUw6IFwiU1RBVFVTX0VOREVEX0xBU1RfTEVWRUxcIixcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEdSSURfTEVWRUxTID0gW1xyXG4gICAgeyB3OiA0LCBoOiA0LCBjOiAyLCB0aW1lTTogNSwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDQsIGg6IDQsIGM6IDMsIHRpbWVNOiA1LCB0aW1lUjogMTUgfSxcclxuICAgIHsgdzogNCwgaDogNCwgYzogNCwgdGltZU06IDUsIHRpbWVSOiAxNSB9LFxyXG4gICAgeyB3OiA0LCBoOiA0LCBjOiA1LCB0aW1lTTogNywgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDQsIGg6IDQsIGM6IDYsIHRpbWVNOiA3LCB0aW1lUjogMTUgfSxcclxuXHJcbiAgICB7IHc6IDUsIGg6IDUsIGM6IDQsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDUsIGg6IDUsIGM6IDUsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDUsIGg6IDUsIGM6IDYsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDUsIGg6IDUsIGM6IDcsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDUsIGg6IDUsIGM6IDgsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcblxyXG4gICAgeyB3OiA1LCBoOiA1LCBjOiA1LCB0aW1lTTogNywgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDUsIGg6IDUsIGM6IDYsIHRpbWVNOiA3LCB0aW1lUjogMTUgfSxcclxuICAgIHsgdzogNSwgaDogNSwgYzogNywgdGltZU06IDcsIHRpbWVSOiAxNSB9LFxyXG4gICAgeyB3OiA1LCBoOiA1LCBjOiA4LCB0aW1lTTogNywgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDUsIGg6IDUsIGM6IDksIHRpbWVNOiA3LCB0aW1lUjogMTUgfSxcclxuXHJcbiAgICB7IHc6IDYsIGg6IDYsIGM6IDQsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDYsIGg6IDYsIGM6IDUsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDYsIGg6IDYsIGM6IDYsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDYsIGg6IDYsIGM6IDcsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDYsIGg6IDYsIGM6IDgsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcblxyXG4gICAgeyB3OiA3LCBoOiA3LCBjOiA1LCB0aW1lTTogMTAsIHRpbWVSOiAxNSB9LFxyXG4gICAgeyB3OiA3LCBoOiA3LCBjOiA2LCB0aW1lTTogMTAsIHRpbWVSOiAxNSB9LFxyXG4gICAgeyB3OiA3LCBoOiA3LCBjOiA3LCB0aW1lTTogMTAsIHRpbWVSOiAxNSB9LFxyXG4gICAgeyB3OiA3LCBoOiA3LCBjOiA4LCB0aW1lTTogMTAsIHRpbWVSOiAxNSB9LFxyXG4gICAgeyB3OiA3LCBoOiA3LCBjOiA5LCB0aW1lTTogMTAsIHRpbWVSOiAxNSB9LFxyXG5cclxuICAgIHsgdzogNywgaDogNywgYzogNiwgdGltZU06IDgsIHRpbWVSOiAxNSB9LFxyXG4gICAgeyB3OiA3LCBoOiA3LCBjOiA3LCB0aW1lTTogOCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDcsIGg6IDcsIGM6IDgsIHRpbWVNOiA4LCB0aW1lUjogMTUgfSxcclxuICAgIHsgdzogNywgaDogNywgYzogOSwgdGltZU06IDgsIHRpbWVSOiAxNSB9LFxyXG4gICAgeyB3OiA3LCBoOiA3LCBjOiAxMCwgdGltZU06IDgsIHRpbWVSOiAxNSB9LFxyXG5cclxuICAgIHsgdzogNywgaDogNywgYzogNywgdGltZU06IDcsIHRpbWVSOiAxNSB9LFxyXG4gICAgeyB3OiA3LCBoOiA3LCBjOiA4LCB0aW1lTTogNywgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDcsIGg6IDcsIGM6IDksIHRpbWVNOiA3LCB0aW1lUjogMTUgfSxcclxuICAgIHsgdzogNywgaDogNywgYzogMTAsIHRpbWVNOiA3LCB0aW1lUjogMTUgfSxcclxuICAgIHsgdzogNywgaDogNywgYzogMTEsIHRpbWVNOiA3LCB0aW1lUjogMTUgfSxcclxuXHJcbiAgICB7IHc6IDgsIGg6IDgsIGM6IDUsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDgsIGg6IDgsIGM6IDYsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDgsIGg6IDgsIGM6IDcsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDgsIGg6IDgsIGM6IDgsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDgsIGg6IDgsIGM6IDksIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcblxyXG4gICAgeyB3OiA5LCBoOiA5LCBjOiA2LCB0aW1lTTogMTAsIHRpbWVSOiAxNSB9LFxyXG4gICAgeyB3OiA5LCBoOiA5LCBjOiA3LCB0aW1lTTogMTAsIHRpbWVSOiAxNSB9LFxyXG4gICAgeyB3OiA5LCBoOiA5LCBjOiA4LCB0aW1lTTogMTAsIHRpbWVSOiAxNSB9LFxyXG4gICAgeyB3OiA5LCBoOiA5LCBjOiA5LCB0aW1lTTogMTIsIHRpbWVSOiAxNSB9LFxyXG4gICAgeyB3OiA5LCBoOiA5LCBjOiAxMCwgdGltZU06IDEyLCB0aW1lUjogMTUgfSxcclxuXVxyXG5cclxuLypleHBvcnQgY29uc3QgR1JJRF9MRVZFTFMgPSBbXHJcbiAgICB7IHc6IDQsIGg6IDQsIGM6IDQsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbiAgICB7IHc6IDQsIGg6IDQsIGM6IDUsIHRpbWVNOiAxMCwgdGltZVI6IDE1IH0sXHJcbl0qL1xyXG5cclxuZXhwb3J0IGNvbnN0IEJBU0VfUE9JTlRTX1BFUl9HVUVTUyA9IDEwMDtcclxuXHJcbmV4cG9ydCBjb25zdCBQUkVfUkVNX01PREVfRFVSQVRJT05fU0VDID0gMC41O1xyXG5cclxuZXhwb3J0IGNvbnN0IE1BWF9FUlJPUlMgPSAwO1xyXG5cclxuZXhwb3J0IGNvbnN0IENDX1RIUkVTXzEgPSA3MDtcclxuZXhwb3J0IGNvbnN0IENDX1RIUkVTXzIgPSAzMDtcclxuXHJcbmV4cG9ydCBjb25zdCBDT0xPUl8xID0gXCJyZ2IoMTA4LCAyMDUsIDQwKVwiO1xyXG5leHBvcnQgY29uc3QgQ09MT1JfMiA9IFwicmdiKDI1NSwgMTk2LCAwKVwiO1xyXG5leHBvcnQgY29uc3QgQ09MT1JfMyA9IFwicmdiKDI1NSwgOCwgMClcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBMRVZFTF9HUk9VUF9TSVpFID0gNTtcclxuXHJcbmV4cG9ydCB2YXIgaW5pdGlhbEdhbWVTdGF0ZSA9IHtcclxuICAgIHNjcmVlbjogU0NSRUVOUy5CRUdJTl9TQ1JFRU4sXHJcbiAgICBsZXZlbE1lbnVPbjogZmFsc2UsXHJcbiAgICBnYW1lTGV2ZWw6IDAsXHJcbiAgICBtYXhMZXZlbDogMCxcclxuICAgIGxldmVsRGF0YTogbnVsbCxcclxuICAgIHNjb3JlOiAwLFxyXG4gICAgZ2FtZToge1xyXG4gICAgICAgIHRpbWU6IDAsXHJcbiAgICAgICAgbGFzdEd1ZXNzVGltZXN0YW1wOiAwLFxyXG4gICAgICAgIGFsbENlbGxzOiBudWxsLFxyXG4gICAgICAgIGdhbWVTdGF0dXM6IG51bGwsXHJcbiAgICAgICAgZXJyb3JzOiAwLFxyXG4gICAgICAgIGNhbmNlbGxlZDogZmFsc2UsXHJcbiAgICAgICAgY2xpY2tlZEluZGV4OiBudWxsLFxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVRFWFRTLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5leHBvcnQgY29uc3QgVEVYVFMgPSB7XHJcbiAgICBTdGFydDogXCJTdGFydFwiLFxyXG4gICAgU2tpcDogXCJTa2lwXCIsXHJcbiAgICBDYW5jZWw6IFwiQ2FuY2VsXCIsXHJcbiAgICBTdGFydGluZzogXCJTdGFydGluZy4uLlwiLFxyXG4gICAgU2VsZWN0X0xldmVsOiBcIlNlbGVjdCBMZXZlbDogXCIsXHJcbiAgICBXaGVuX3JlYWR5OiBcIlByZXNzIHN0YXJ0IGFuZCB0cnkgdG8gbWVtb3JpemUgdGhlIGNlbGxzLlwiLFxyXG4gICAgVHJ5X3RvX21lbW9yaXplOiBcIlRyeSB0byBtZW1vcml6ZSBncmVlbiBjZWxscy4gVGltZSBsZWZ0OiBcIixcclxuICAgIENsaWNrX29uX2dyZWVuX2NlbGxzOiBcIkNsaWNrIG9uIGdyZWVuIGNlbGxzIGxvY2F0aW9ucy4gVGltZSBsZWZ0OiBcIixcclxuICAgIFRpbWVfdXA6IFwiVGltZSB1cCFcIixcclxuICAgIFRpbWVfc3RvcHBlZDogXCJUaW1lIHN0b3BwZWQhXCIsXHJcbiAgICBDb250aW51ZTogXCJDb250aW51ZVwiLFxyXG59XHJcblxyXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IEdSSURfTEVWRUxTLCBMRVZFTF9HUk9VUF9TSVpFIH0gZnJvbSBcIi4uL3N0YXRlL2NvbnN0YW50c1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGV2ZWxNZW51IGV4dGVuZHMgQ29tcG9uZW50XHJcbntcclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKVxyXG4gICAge1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuXHJcbiAgICAgICAgdGhpcy5udW1MZXZlbHMgPSB0aGlzLnByb3BzLm51bUxldmVscztcclxuICAgICAgICB0aGlzLnNob3cgPSB0aGlzLnByb3BzLnNob3c7XHJcbiAgICAgICAgdGhpcy5tYXhMZXZlbCA9IHRoaXMucHJvcHMubWF4TGV2ZWw7XHJcblxyXG4gICAgICAgIHRoaXMuYnV0dG9uQ2xpY2tlZCA9IHRoaXMuYnV0dG9uQ2xpY2tlZC5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGJ1dHRvbkNsaWNrZWQoaW5kZXgpXHJcbiAgICB7XHJcbiAgICAgICAgdGhpcy5wcm9wcy5vbkxldmVsQ2xpY2tlZChpbmRleCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKClcclxuICAgIHtcclxuICAgICAgICB2YXIgbGV2ZWxCdXR0b25zID0gW107XHJcbiAgICAgICAgaWYgKCF0aGlzLnByb3BzLnNob3cpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5udW1MZXZlbHM7IGkrKylcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGxldCBsYWJlbCA9IFwiTGV2ZWwgXCIgKyAoaSArIDEpO1xyXG4gICAgICAgICAgICB2YXIgY2xpY2tIYW5kbGVyID0gbnVsbDtcclxuICAgICAgICAgICAgdmFyIHN0eWxlID0ge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IFwicmdiKDE3MCwgMTcwLCAxNzApXCIsXHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiKDExMiwgMTEyLCAxMTIpXCIsXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHZhciBjdXJyZW50TGV2ZWxHcm91cCA9IE1hdGguY2VpbCgodGhpcy5tYXhMZXZlbCArIDEpL0xFVkVMX0dST1VQX1NJWkUpO1xyXG4gICAgICAgICAgICB2YXIgbWF4VW5sb2NrZWRMZXZlbCA9IGN1cnJlbnRMZXZlbEdyb3VwKkxFVkVMX0dST1VQX1NJWkU7XHJcbiAgICAgICAgICAgIGlmIChpIDwgbWF4VW5sb2NrZWRMZXZlbClcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgY2xpY2tIYW5kbGVyID0gKCkgPT4gdGhpcy5idXR0b25DbGlja2VkKGkpO1xyXG4gICAgICAgICAgICAgICAgc3R5bGUgPSBudWxsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGxldCBidXR0b24gPSA8ZGl2IGtleT17aX0gY2xhc3NOYW1lPVwibWVudUJ1dHRvblwiIHN0eWxlPXtzdHlsZX0gb25DbGljaz17Y2xpY2tIYW5kbGVyfT57bGFiZWx9PC9kaXY+XHJcbiAgICAgICAgICAgIGxldmVsQnV0dG9ucy5wdXNoKGJ1dHRvbik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1lbnVCdXR0b25zQ29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgICAgICB7bGV2ZWxCdXR0b25zfVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBMZXZlbE1lbnUgZnJvbSBcIi4uL2NvbXBvbmVudHMvbGV2ZWxNZW51XCI7XHJcbmltcG9ydCB7IEdSSURfTEVWRUxTLCBJTUFHRVNfREFUQSwgVEVYVFMgfSBmcm9tIFwiLi4vc3RhdGUvY29uc3RhbnRzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCZWdpblNjcmVlbiBleHRlbmRzIENvbXBvbmVudFxyXG57XHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcylcclxuICAgIHtcclxuICAgICAgICBzdXBlcihwcm9wcyk7XHJcbiAgICAgICAgdGhpcy5vbkxldmVsQ2xpY2tlZCA9IHRoaXMub25MZXZlbENsaWNrZWQuYmluZCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkxldmVsQ2xpY2tlZChpbmRleClcclxuICAgIHtcclxuICAgICAgICB0aGlzLnByb3BzLm9uTGV2ZWxDbGlja2VkKGluZGV4KTtcclxuICAgIH1cclxuXHJcbiAgICByZW5kZXIoKVxyXG4gICAge1xyXG4gICAgICAgIHZhciBzdGFydEJ0blN0eWxlID0ge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxyXG4gICAgICAgICAgICBtYXJnaW5Ub3A6IFwiM3ZtaW5cIixcclxuICAgICAgICAgICAgbWFyZ2luTGVmdDogXCJhdXRvXCIsXHJcbiAgICAgICAgICAgIG1hcmdpblJpZ2h0OiBcImF1dG9cIixcclxuICAgICAgICAgICAgbGVmdDogMCxcclxuICAgICAgICAgICAgcmlnaHQ6IDAsXHJcbiAgICAgICAgICAgIGhlaWdodDogXCI2dm1pblwiLFxyXG4gICAgICAgICAgICBsaW5lSGVpZ2h0OiBcIjZ2bWluXCIsXHJcbiAgICAgICAgICAgIGZvbnRTaXplOiBcIjV2bWluXCIsXHJcbiAgICAgICAgICAgIHRvcDogXCI4MCVcIixcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBzZWxlY3RCdG5TdHlsZSA9IHt9XHJcblxyXG4gICAgICAgIHZhciBzaXplID0gKHdpbmRvdy5pbm5lcldpZHRoID4gd2luZG93LmlubmVySGVpZ2h0KSA/IHdpbmRvdy5pbm5lckhlaWdodCAqIDAuNiA6IHdpbmRvdy5pbm5lcldpZHRoICogMC42O1xyXG5cclxuICAgICAgICBpZiAod2luZG93LmlubmVySGVpZ2h0ID4gd2luZG93LmlubmVyV2lkdGggKiAxLjIpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzaXplID0gd2luZG93LmlubmVyV2lkdGggKiAwLjg7XHJcblxyXG4gICAgICAgICAgICBzdGFydEJ0blN0eWxlLmhlaWdodCA9IFwiMTJ2bWluXCI7XHJcbiAgICAgICAgICAgIHN0YXJ0QnRuU3R5bGUubGluZUhlaWdodCA9IFwiMTJ2bWluXCI7XHJcbiAgICAgICAgICAgIHN0YXJ0QnRuU3R5bGUuZm9udFNpemUgPSBcIjZ2bWluXCI7XHJcblxyXG4gICAgICAgICAgICBzZWxlY3RCdG5TdHlsZS5oZWlnaHQgPSBcIjEydm1pblwiO1xyXG4gICAgICAgICAgICBzZWxlY3RCdG5TdHlsZS5saW5lSGVpZ2h0ID0gXCIxMnZtaW5cIjtcclxuICAgICAgICAgICAgc2VsZWN0QnRuU3R5bGUuZm9udFNpemUgPSBcIjZ2bWluXCI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgc2VsZWN0TGV2ZWxMYWJlbCA9IFRFWFRTLlNlbGVjdF9MZXZlbCArICh0aGlzLnByb3BzLmxldmVsICsgMSk7XHJcblxyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiQlNfQmtnXCIgb25DbGljaz17dGhpcy5wcm9wcy5oaWRlTGV2ZWxNZW51fT5cclxuICAgICAgICAgICAgICAgIDxMZXZlbE1lbnUgb25MZXZlbENsaWNrZWQ9e3RoaXMub25MZXZlbENsaWNrZWR9IG51bUxldmVscz17R1JJRF9MRVZFTFMubGVuZ3RofSBzaG93PXt0aGlzLnByb3BzLmxldmVsTWVudU9ufVxyXG4gICAgICAgICAgICAgICAgICAgIGxldmVsPXt0aGlzLnByb3BzLmxldmVsfSBtYXhMZXZlbD17dGhpcy5wcm9wcy5tYXhMZXZlbH0gLz5cclxuICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPVwic3BsYXNoXCIgc3JjPXtJTUFHRVNfREFUQS5zcGxhc2h9PjwvaW1nPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZWxlY3RMZXZlbEJ1dHRvblwic3R5bGU9e3NlbGVjdEJ0blN0eWxlfSBvbkNsaWNrPXt0aGlzLnByb3BzLm9uU2VsZWN0TGV2ZWxDbGlja2VkfT57c2VsZWN0TGV2ZWxMYWJlbH08L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiR1NfR2FtZUJ1dHRvblwiIHN0eWxlPXtzdGFydEJ0blN0eWxlfSBvbkNsaWNrPXt0aGlzLnByb3BzLm9uU3RhcnRHYW1lQ2xpY2tlZH0+U3RhcnQ8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBDRUxMX1RZUEVTLCBDRUxMX1ZJU1VBTF9TVEFURVMsIElNQUdFU19EQVRBIH0gZnJvbSBcIi4uL3N0YXRlL2NvbnN0YW50c1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2VsbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG57XHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcylcclxuICAgIHtcclxuICAgICAgICBzdXBlcihwcm9wcyk7XHJcblxyXG4gICAgICAgIHRoaXMucHJvY2VlZENlbGxDbGljayA9IHRoaXMucHJvY2VlZENlbGxDbGljay5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb2NlZWRDZWxsQ2xpY2soZSlcclxuICAgIHtcclxuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5wcm9wcy5pbmRleCk7XHJcbiAgICAgICAgdGhpcy5wcm9wcy5wcm9jZWVkQ2xpY2sodGhpcy5wcm9wcy5pbmRleCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKClcclxuICAgIHtcclxuICAgICAgICB2YXIgc3R5bGVPYmogPSB7XHJcbiAgICAgICAgICAgIGFuaW1hdGlvbjogXCJcIixcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuaXNBbmltKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgc3R5bGVPYmouYW5pbWF0aW9uID0gXCJmYWRlSW4gMC41cyBmb3J3YXJkc1wiO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgcGljdHVyZSA9IG51bGw7XHJcbiAgICAgICAgc3dpdGNoICh0aGlzLnByb3BzLnZTdGF0ZSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGNhc2UgQ0VMTF9WSVNVQUxfU1RBVEVTLlNIT1c6XHJcbiAgICAgICAgICAgICAgICBwaWN0dXJlID0gPGltZyBzcmM9e0lNQUdFU19EQVRBLnNob3d9IGNsYXNzTmFtZT1cImNlbGxfSW1nXCIgc3R5bGU9e3N0eWxlT2JqfT48L2ltZz5cclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY2FzZSBDRUxMX1ZJU1VBTF9TVEFURVMuRVJST1I6XHJcbiAgICAgICAgICAgICAgICBwaWN0dXJlID0gPGltZyBzcmM9e0lNQUdFU19EQVRBLmVycm9yfSBjbGFzc05hbWU9XCJjZWxsX0ltZ1wiIHN0eWxlPXtzdHlsZU9ian0+PC9pbWc+XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIGNhc2UgQ0VMTF9WSVNVQUxfU1RBVEVTLkdVRVNTRUQ6XHJcbiAgICAgICAgICAgICAgICBwaWN0dXJlID0gPGltZyBzcmM9e0lNQUdFU19EQVRBLmNoZWNrfSBjbGFzc05hbWU9XCJjZWxsX0ltZ1wiIHN0eWxlPXtzdHlsZU9ian0+PC9pbWc+XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIGNhc2UgQ0VMTF9WSVNVQUxfU1RBVEVTLlVOR1VFU1NFRDpcclxuICAgICAgICAgICAgICAgIHBpY3R1cmUgPSA8aW1nIHNyYz17SU1BR0VTX0RBVEEudW5ndWVzc30gY2xhc3NOYW1lPVwiY2VsbF9JbWdcIiBzdHlsZT17c3R5bGVPYmp9PjwvaW1nPlxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXYga2V5PXt0aGlzLnByb3BzLmluZGV4fSBjbGFzc05hbWU9e3RoaXMucHJvcHMuY2VsbENsYXNzfSBvbkNsaWNrPXt0aGlzLnByb2NlZWRDZWxsQ2xpY2t9PlxyXG4gICAgICAgICAgICAgICAge3BpY3R1cmV9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIClcclxuICAgIH1cclxufSIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgQ0VMTF9TVEFURVMsIENFTExfVFlQRVMsIENFTExfVklTVUFMX1NUQVRFUywgR0FNRV9TVEFUVVMsIENDX1RIUkVTXzEsIENDX1RIUkVTXzIsIENPTE9SXzEsIENPTE9SXzIsIENPTE9SXzMsIEdSSURfTEVWRUxTLCBURVhUUywgSU1BR0VTX0RBVEEgfSBmcm9tIFwiLi4vc3RhdGUvY29uc3RhbnRzXCI7XHJcbmltcG9ydCBDZWxsIGZyb20gXCIuLi9jb21wb25lbnRzL2NlbGxcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVTY3JlZW4gZXh0ZW5kcyBDb21wb25lbnRcclxue1xyXG4gICAgY29uc3RydWN0b3IocHJvcHMpXHJcbiAgICB7XHJcbiAgICAgICAgc3VwZXIocHJvcHMpO1xyXG5cclxuICAgICAgICB0aGlzLnByb2NlZWRDbGljayA9IHRoaXMucHJvY2VlZENsaWNrLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5wcm9jZWVkQnV0dG9uQ2xpY2sgPSB0aGlzLnByb2NlZWRCdXR0b25DbGljay5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMucHJvY2VlZEJ1dHRvbkNsaWNrQmtnID0gdGhpcy5wcm9jZWVkQnV0dG9uQ2xpY2tCa2cuYmluZCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm9jZWVkQ2xpY2soaW5kZXgpXHJcbiAgICB7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuc3RhdGUuZ2FtZS5nYW1lU3RhdHVzICE9IEdBTUVfU1RBVFVTLlNUQVRVU19SVU5OSU5HX1JFTUVNQkVSKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIk5PVCBJTiBNT0RFIVwiKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvL2NvbnNvbGUubG9nKGluZGV4KTtcclxuICAgICAgICB0aGlzLnByb3BzLm9uQ2VsbENsaWNrZWQoaW5kZXgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb2NlZWRCdXR0b25DbGljayhlKVxyXG4gICAge1xyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgdGhpcy5wcm9wcy5vbkdhbWVCdXR0b25DbGlja2VkKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvY2VlZEJ1dHRvbkNsaWNrQmtnKGUpXHJcbiAgICB7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuc3RhdGUuZ2FtZS5nYW1lU3RhdHVzID09IEdBTUVfU1RBVFVTLlNUQVRVU19SVU5OSU5HX1JFTUVNQkVSICYmICF0aGlzLnByb3BzLnN0YXRlLmdhbWUuY2FuY2VsbGVkKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIHRoaXMucHJvcHMub25HYW1lQnV0dG9uQ2xpY2tlZCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldE1lc3NhZ2VTdHJpbmcoKVxyXG4gICAge1xyXG4gICAgICAgIHZhciBtZXNzYWdlU3RyaW5nID0gXCJcIjtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuc3RhdGUuZ2FtZS5nYW1lU3RhdHVzID09IEdBTUVfU1RBVFVTLlNUQVRVU19QUkVfTUVNT1JJWkUpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBtZXNzYWdlU3RyaW5nID0gVEVYVFMuV2hlbl9yZWFkeTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5wcm9wcy5zdGF0ZS5nYW1lLmdhbWVTdGF0dXMgPT0gR0FNRV9TVEFUVVMuU1RBVFVTX1JVTk5JTkdfTUVNT1JJWkUpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBtZXNzYWdlU3RyaW5nID0gVEVYVFMuVHJ5X3RvX21lbW9yaXplO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLnByb3BzLnN0YXRlLmdhbWUuZ2FtZVN0YXR1cyA9PSBHQU1FX1NUQVRVUy5TVEFUVVNfUFJFX1JFTUVNQkVSKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbWVzc2FnZVN0cmluZyA9IFRFWFRTLlN0YXJ0aW5nO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLnByb3BzLnN0YXRlLmdhbWUuZ2FtZVN0YXR1cyA9PSBHQU1FX1NUQVRVUy5TVEFUVVNfUlVOTklOR19SRU1FTUJFUilcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG1lc3NhZ2VTdHJpbmcgPSBURVhUUy5DbGlja19vbl9ncmVlbl9jZWxscztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5wcm9wcy5zdGF0ZS5nYW1lLmdhbWVTdGF0dXMgPT0gR0FNRV9TVEFUVVMuU1RBVFVTX0VOREVEX1RJTUVPVVQpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBtZXNzYWdlU3RyaW5nID0gVEVYVFMuVGltZV91cDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5wcm9wcy5zdGF0ZS5nYW1lLmdhbWVTdGF0dXMgPT0gR0FNRV9TVEFUVVMuU1RBVFVTX0VOREVEX0VSUk9SKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbWVzc2FnZVN0cmluZyA9IFRFWFRTLlRpbWVfc3RvcHBlZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5wcm9wcy5zdGF0ZS5nYW1lLmdhbWVTdGF0dXMgPT0gR0FNRV9TVEFUVVMuU1RBVFVTX0VOREVEX0xFVkVMX1VQKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbWVzc2FnZVN0cmluZyA9IFRFWFRTLlRpbWVfc3RvcHBlZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5wcm9wcy5zdGF0ZS5nYW1lLmdhbWVTdGF0dXMgPT0gR0FNRV9TVEFUVVMuU1RBVFVTX0VOREVEX0xBU1RfTEVWRUwpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBtZXNzYWdlU3RyaW5nID0gVEVYVFMuVGltZV9zdG9wcGVkO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIG1lc3NhZ2VTdHJpbmc7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q2xvY2soZ2FtZVN0YXRlKVxyXG4gICAge1xyXG4gICAgICAgIGlmIChnYW1lU3RhdGUuZ2FtZVN0YXR1cyA9PSBHQU1FX1NUQVRVUy5TVEFUVVNfUFJFX1JFTUVNQkVSKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiY2xvY2tDbGFzc1wiPi0tIDogLS0gOiAtLTwvZGl2PjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCB0aW1lT2JqID0gdGhpcy5nZXRUaW1lU3RyaW5nKCk7XHJcbiAgICAgICAgbGV0IHRpbWVTdHIgPSB0aW1lT2JqLnRpbWVTdHI7XHJcbiAgICAgICAgbGV0IHRpbWVTZWMgPSB0aW1lT2JqLnRpbWVTZWM7XHJcbiAgICAgICAgbGV0IHRpbWVMaW1pdCA9ICh0aGlzLnByb3BzLnN0YXRlLmdhbWUuZ2FtZVN0YXR1cyA9PSBHQU1FX1NUQVRVUy5TVEFUVVNfUFJFX01FTU9SSVpFIHx8XHJcbiAgICAgICAgICAgIHRoaXMucHJvcHMuc3RhdGUuZ2FtZS5nYW1lU3RhdHVzID09IEdBTUVfU1RBVFVTLlNUQVRVU19SVU5OSU5HX01FTU9SSVpFKSA/XHJcbiAgICAgICAgICAgIHRoaXMucHJvcHMuc3RhdGUubGV2ZWxEYXRhLnRpbWVNIDogdGhpcy5wcm9wcy5zdGF0ZS5sZXZlbERhdGEudGltZVI7XHJcblxyXG4gICAgICAgIGxldCBlbGFwc2VkVGltZVBlciA9ICh0aW1lU2VjIC8gdGltZUxpbWl0KSAqIDEwMDtcclxuXHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcIkVMQVBTRUQgJTogXCIgKyBlbGFwc2VkVGltZVBlciArIFwiIHRpbWUgbGltaXQ6IFwiICsgdGltZUxpbWl0ICsgXCIgZ2FtZSBzdGF0dXM6IFwiICsgdGhpcy5wcm9wcy5zdGF0ZS5nYW1lLmdhbWVTdGF0dXMpO1xyXG5cclxuICAgICAgICBsZXQgc3R5bGVPYmogPSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBcIndoaXRlXCIsXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChlbGFwc2VkVGltZVBlciA+IENDX1RIUkVTXzEpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzdHlsZU9iai5jb2xvciA9IENPTE9SXzE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGVsYXBzZWRUaW1lUGVyIDw9IENDX1RIUkVTXzEgJiYgZWxhcHNlZFRpbWVQZXIgPiBDQ19USFJFU18yKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgc3R5bGVPYmouY29sb3IgPSBDT0xPUl8yO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChlbGFwc2VkVGltZVBlciA8PSBDQ19USFJFU18yKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgc3R5bGVPYmouY29sb3IgPSBDT0xPUl8zO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIGNsb2NrRGlzcGxheSA9IDxkaXYgY2xhc3NOYW1lPVwiY2xvY2tDbGFzc1wiIHN0eWxlPXtzdHlsZU9ian0+e3RpbWVTdHJ9IHNlYy48L2Rpdj47XHJcblxyXG4gICAgICAgIHJldHVybiBjbG9ja0Rpc3BsYXk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0VGltZVN0cmluZygpXHJcbiAgICB7XHJcbiAgICAgICAgbGV0IHRpbWVTZWMgPSB0aGlzLnByb3BzLnN0YXRlLmdhbWUudGltZTtcclxuXHJcbiAgICAgICAgbGV0IG1pbnV0ZXNFbGFwc2VkID0gTWF0aC5mbG9vcih0aW1lU2VjIC8gNjApO1xyXG5cclxuICAgICAgICBsZXQgaG91cnMgPSBNYXRoLmZsb29yKHRpbWVTZWMgLyAzNjAwKTtcclxuICAgICAgICBsZXQgc2Vjb25kcyA9IHRpbWVTZWMgJSA2MDtcclxuICAgICAgICBsZXQgbWludXRlcyA9IG1pbnV0ZXNFbGFwc2VkICUgNjA7XHJcblxyXG4gICAgICAgIGxldCBob3Vyc1N0ciA9IChob3VycyA+PSAwICYmIGhvdXJzIDwgMTApID8gXCIwXCIgKyBob3VycyA6IGhvdXJzO1xyXG4gICAgICAgIGxldCBtaW51dGVzU3RyID0gKG1pbnV0ZXMgPj0gMCAmJiBtaW51dGVzIDwgMTApID8gXCIwXCIgKyBtaW51dGVzIDogbWludXRlcztcclxuICAgICAgICBsZXQgc2Vjb25kc1N0ciA9IChzZWNvbmRzID49IDAgJiYgc2Vjb25kcyA8IDEwKSA/IFwiMFwiICsgc2Vjb25kcyA6IHNlY29uZHM7XHJcblxyXG4gICAgICAgIHZhciBzZWNvbmRzTGVmdDtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuc3RhdGUuZ2FtZS5nYW1lU3RhdHVzID09IEdBTUVfU1RBVFVTLlNUQVRVU19QUkVfTUVNT1JJWkUgfHwgdGhpcy5wcm9wcy5zdGF0ZS5nYW1lLmdhbWVTdGF0dXMgPT0gR0FNRV9TVEFUVVMuU1RBVFVTX1JVTk5JTkdfTUVNT1JJWkUpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzZWNvbmRzTGVmdCA9IHRoaXMucHJvcHMuc3RhdGUubGV2ZWxEYXRhLnRpbWVNIC0gdGltZVNlYztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5wcm9wcy5zdGF0ZS5nYW1lLmdhbWVTdGF0dXMgPT0gR0FNRV9TVEFUVVMuU1RBVFVTX1JVTk5JTkdfUkVNRU1CRVIgfHwgdGhpcy5wcm9wcy5zdGF0ZS5nYW1lLmdhbWVTdGF0dXMgPT0gR0FNRV9TVEFUVVMuU1RBVFVTX0VOREVEX0VSUk9SIHx8XHJcbiAgICAgICAgICAgIHRoaXMucHJvcHMuc3RhdGUuZ2FtZS5nYW1lU3RhdHVzID09IEdBTUVfU1RBVFVTLlNUQVRVU19FTkRFRF9MRVZFTF9VUCB8fCB0aGlzLnByb3BzLnN0YXRlLmdhbWUuZ2FtZVN0YXR1cyA9PSBHQU1FX1NUQVRVUy5TVEFUVVNfRU5ERURfTEFTVF9MRVZFTClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHNlY29uZHNMZWZ0ID0gdGhpcy5wcm9wcy5zdGF0ZS5sZXZlbERhdGEudGltZVIgLSB0aW1lU2VjO1xyXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiUiB0aW1lU2VjOiBcIiArIHRpbWVTZWMgKyBcIiBzZWMgbGVmdDogXCIgKyBzZWNvbmRzTGVmdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMucHJvcHMuc3RhdGUuZ2FtZS5nYW1lU3RhdHVzID09IEdBTUVfU1RBVFVTLlNUQVRVU19FTkRFRF9USU1FT1VUIHx8IHRoaXMucHJvcHMuc3RhdGUuZ2FtZS5nYW1lU3RhdHVzID09IEdBTUVfU1RBVFVTLlNUQVRVU19QUkVfUkVNRU1CRVIpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzZWNvbmRzTGVmdCA9IDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgc2Vjb25kc0xlZnRTdHIgPSAoc2Vjb25kc0xlZnQgPj0gMCAmJiBzZWNvbmRzTGVmdCA8IDEwKSA/IFwiMFwiICsgc2Vjb25kc0xlZnQgOiBzZWNvbmRzTGVmdDtcclxuXHJcbiAgICAgICAgcmV0dXJuICh7XHJcbiAgICAgICAgICAgIHRpbWVTdHI6IGhvdXJzU3RyICsgXCI6XCIgKyBtaW51dGVzU3RyICsgXCI6XCIgKyBzZWNvbmRzTGVmdFN0cixcclxuICAgICAgICAgICAgdGltZVNlYzogc2Vjb25kc0xlZnRcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRCdXR0b25MYWJlbChnYW1lU3RhdGUpXHJcbiAgICB7XHJcbiAgICAgICAgdmFyIGdhbWVTdGF0dXMgPSBnYW1lU3RhdGUuZ2FtZVN0YXR1cztcclxuICAgICAgICB2YXIgaXNDYW5jZWxsZWQgPSBnYW1lU3RhdGUuY2FuY2VsbGVkO1xyXG5cclxuICAgICAgICB2YXIgYnV0dG9uTGFiZWwgPSBcIk5PVF9ERUZJTkVEXCI7XHJcblxyXG4gICAgICAgIGlmIChpc0NhbmNlbGxlZClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHJldHVybiBcIkNvbnRpbnVlXCI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzd2l0Y2ggKGdhbWVTdGF0dXMpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBjYXNlIEdBTUVfU1RBVFVTLlNUQVRVU19QUkVfTUVNT1JJWkU6XHJcbiAgICAgICAgICAgICAgICBidXR0b25MYWJlbCA9IFRFWFRTLlN0YXJ0O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBjYXNlIEdBTUVfU1RBVFVTLlNUQVRVU19SVU5OSU5HX01FTU9SSVpFOlxyXG4gICAgICAgICAgICAgICAgYnV0dG9uTGFiZWwgPSBURVhUUy5TdGFydDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY2FzZSBHQU1FX1NUQVRVUy5TVEFUVVNfUFJFX1JFTUVNQkVSOlxyXG4gICAgICAgICAgICAgICAgYnV0dG9uTGFiZWwgPSBURVhUUy5TdGFydDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY2FzZSBHQU1FX1NUQVRVUy5TVEFUVVNfUlVOTklOR19SRU1FTUJFUjpcclxuICAgICAgICAgICAgICAgIGJ1dHRvbkxhYmVsID0gVEVYVFMuU3RhcnQ7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIGNhc2UgR0FNRV9TVEFUVVMuU1RBVFVTX0VOREVEX0xFVkVMX1VQOlxyXG4gICAgICAgICAgICAgICAgYnV0dG9uTGFiZWwgPSBURVhUUy5Db250aW51ZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY2FzZSBHQU1FX1NUQVRVUy5TVEFUVVNfRU5ERURfVElNRU9VVDpcclxuICAgICAgICAgICAgICAgIGJ1dHRvbkxhYmVsID0gVEVYVFMuQ29udGludWU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIGNhc2UgR0FNRV9TVEFUVVMuU1RBVFVTX0VOREVEX0VSUk9SOlxyXG4gICAgICAgICAgICAgICAgYnV0dG9uTGFiZWwgPSBURVhUUy5Db250aW51ZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY2FzZSBHQU1FX1NUQVRVUy5TVEFUVVNfRU5ERURfTEFTVF9MRVZFTDpcclxuICAgICAgICAgICAgICAgIGJ1dHRvbkxhYmVsID0gVEVYVFMuQ29udGludWU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBidXR0b25MYWJlbDtcclxuICAgIH1cclxuXHJcbiAgICBnZXRMZXZlbCgpXHJcbiAgICB7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuc3RhdGUuZ2FtZS5nYW1lU3RhdHVzID09IEdBTUVfU1RBVFVTLlNUQVRVU19FTkRFRF9MRVZFTF9VUClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByb3BzLnN0YXRlLmdhbWVMZXZlbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5wcm9wcy5zdGF0ZS5nYW1lLmdhbWVTdGF0dXMgPT0gR0FNRV9TVEFUVVMuU1RBVFVTX0VOREVEX0xBU1RfTEVWRUwpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICByZXR1cm4gR1JJRF9MRVZFTFMubGVuZ3RoICsgMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMuc3RhdGUuZ2FtZUxldmVsICsgMTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q2VsbFN0eWxlKGdhbWVTdGF0dXMsIGNlbGxUeXBlLCBjZWxsU3RhdGUpXHJcbiAgICB7XHJcbiAgICAgICAgdmFyIGNsYXNzU3RyID0gXCJOT1RfREVGSU5FRFwiO1xyXG4gICAgICAgIHZhciB2aXN1YWxTdGF0ZTtcclxuXHJcbiAgICAgICAgaWYgKGdhbWVTdGF0dXMgPT0gR0FNRV9TVEFUVVMuU1RBVFVTX1BSRV9NRU1PUklaRSB8fCBnYW1lU3RhdHVzID09IEdBTUVfU1RBVFVTLlNUQVRVU19QUkVfUkVNRU1CRVIpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBjbGFzc1N0ciA9IFwiY2VsbCBjZWxsRW1wdHlcIjtcclxuICAgICAgICAgICAgdmlzdWFsU3RhdGUgPSBDRUxMX1ZJU1VBTF9TVEFURVMuQ09WRVJFRDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoZ2FtZVN0YXR1cyA9PSBHQU1FX1NUQVRVUy5TVEFUVVNfUlVOTklOR19NRU1PUklaRSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGlmIChjZWxsVHlwZSA9PSBDRUxMX1RZUEVTLkZVTEwpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGNsYXNzU3RyID0gXCJjZWxsIGNlbGxGdWxsXCI7XHJcbiAgICAgICAgICAgICAgICB2aXN1YWxTdGF0ZSA9IENFTExfVklTVUFMX1NUQVRFUy5TSE9XO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgY2xhc3NTdHIgPSBcImNlbGwgY2VsbEVtcHR5XCI7XHJcbiAgICAgICAgICAgICAgICB2aXN1YWxTdGF0ZSA9IENFTExfVklTVUFMX1NUQVRFUy5DT1ZFUkVEO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGdhbWVTdGF0dXMgPT0gR0FNRV9TVEFUVVMuU1RBVFVTX0VOREVEX0VSUk9SKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYgKGNlbGxUeXBlID09IENFTExfVFlQRVMuRU1QVFkpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGlmIChjZWxsU3RhdGUgPT0gQ0VMTF9TVEFURVMuT1BFTkVEKVxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzU3RyID0gXCJjZWxsIGNlbGxFcnJvclwiO1xyXG4gICAgICAgICAgICAgICAgICAgIHZpc3VhbFN0YXRlID0gQ0VMTF9WSVNVQUxfU1RBVEVTLkVSUk9SO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzU3RyID0gXCJjZWxsIGNlbGxFbXB0eVwiO1xyXG4gICAgICAgICAgICAgICAgICAgIHZpc3VhbFN0YXRlID0gQ0VMTF9WSVNVQUxfU1RBVEVTLkNPVkVSRUQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoY2VsbFR5cGUgPT0gQ0VMTF9UWVBFUy5GVUxMKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2VsbFN0YXRlID09IENFTExfU1RBVEVTLk9QRU5FRClcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBjbGFzc1N0ciA9IFwiY2VsbCBjZWxsRnVsbFwiO1xyXG4gICAgICAgICAgICAgICAgICAgIHZpc3VhbFN0YXRlID0gQ0VMTF9WSVNVQUxfU1RBVEVTLkdVRVNTRUQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NTdHIgPSBcImNlbGwgY2VsbEZ1bGxVbm9wZW5lZFwiO1xyXG4gICAgICAgICAgICAgICAgICAgIHZpc3VhbFN0YXRlID0gQ0VMTF9WSVNVQUxfU1RBVEVTLlVOR1VFU1NFRDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYgKGNlbGxTdGF0ZSA9PSBDRUxMX1NUQVRFUy5DTE9TRUQpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGxldCBjdXJzb3JTdHlsZSA9IChnYW1lU3RhdHVzID09IEdBTUVfU1RBVFVTLlNUQVRVU19SVU5OSU5HX1JFTUVNQkVSKSA/IFwiIGNlbGxDdXJzb3JcIiA6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICBjbGFzc1N0ciA9IFwiY2VsbCBjZWxsRW1wdHlcIiArIGN1cnNvclN0eWxlO1xyXG4gICAgICAgICAgICAgICAgdmlzdWFsU3RhdGUgPSBDRUxMX1ZJU1VBTF9TVEFURVMuQ09WRVJFRDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChjZWxsU3RhdGUgPT0gQ0VMTF9TVEFURVMuT1BFTkVEICYmIGNlbGxUeXBlID09IENFTExfVFlQRVMuRlVMTClcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgY2xhc3NTdHIgPSBcImNlbGwgY2VsbEZ1bGxcIjtcclxuICAgICAgICAgICAgICAgIHZpc3VhbFN0YXRlID0gQ0VMTF9WSVNVQUxfU1RBVEVTLkdVRVNTRUQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoY2VsbFN0YXRlID09IENFTExfU1RBVEVTLk9QRU5FRCAmJiBjZWxsVHlwZSA9PSBDRUxMX1RZUEVTLkVNUFRZKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBjbGFzc1N0ciA9IFwiY2VsbCBjZWxsRXJyb3JcIjtcclxuICAgICAgICAgICAgICAgIHZpc3VhbFN0YXRlID0gQ0VMTF9WSVNVQUxfU1RBVEVTLkVSUk9SO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBjbGFzczogY2xhc3NTdHIsXHJcbiAgICAgICAgICAgIHZpc3VhbDogdmlzdWFsU3RhdGUsXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldE1lc3NhZ2VQb3B1cChnYW1lU3RhdGUpXHJcbiAgICB7XHJcbiAgICAgICAgdmFyIGdhbWVTdGF0dXMgPSBnYW1lU3RhdGUuZ2FtZVN0YXR1cztcclxuXHJcbiAgICAgICAgaWYgKGdhbWVTdGF0ZS5jYW5jZWxsZWQpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICByZXR1cm4gKDxkaXYgY2xhc3NOYW1lPVwibWVzc2FnZVBvcHVwIGJrZ1JlZFwiPkdBTUUgQ0FOQ0VMTEVEITwvZGl2Pik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgc3R5bGVPYmogPSB7XHJcbiAgICAgICAgICAgIGFuaW1hdGlvbjogXCJmYWRlSW4gMC41cyBmb3J3YXJkc1wiLFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgc3dpdGNoIChnYW1lU3RhdHVzKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgY2FzZSBHQU1FX1NUQVRVUy5TVEFUVVNfUFJFX1JFTUVNQkVSOlxyXG4gICAgICAgICAgICAgICAgLy9yZXR1cm4gKDxkaXYgY2xhc3NOYW1lPVwibWVzc2FnZVBvcHVwTGV2ZWxVcFwiIHN0eWxlID0ge3N0eWxlT2JqfT5SRUFEWT88L2Rpdj4pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcblxyXG4gICAgICAgICAgICBjYXNlIEdBTUVfU1RBVFVTLlNUQVRVU19FTkRFRF9MRVZFTF9VUDpcclxuICAgICAgICAgICAgICAgIHJldHVybiAoPGRpdiBjbGFzc05hbWU9XCJtZXNzYWdlUG9wdXAgYmtnR3JlZW5cIiBzdHlsZT17c3R5bGVPYmp9PkxFVkVMIFVQITwvZGl2Pik7XHJcblxyXG4gICAgICAgICAgICBjYXNlIEdBTUVfU1RBVFVTLlNUQVRVU19FTkRFRF9MQVNUX0xFVkVMOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICg8ZGl2IGNsYXNzTmFtZT1cIm1lc3NhZ2VQb3B1cCBia2dHcmVlblwiIHN0eWxlPXtzdHlsZU9ian0+TEFTVCBMRVZFTCBET05FITwvZGl2Pik7XHJcblxyXG4gICAgICAgICAgICBjYXNlIEdBTUVfU1RBVFVTLlNUQVRVU19FTkRFRF9FUlJPUjpcclxuICAgICAgICAgICAgICAgIHJldHVybiAoPGRpdiBjbGFzc05hbWU9XCJtZXNzYWdlUG9wdXAgYmtnUmVkXCIgc3R5bGU9e3N0eWxlT2JqfT5FUlJPUiEgR0FNRSBPVkVSITwvZGl2Pik7XHJcblxyXG4gICAgICAgICAgICBjYXNlIEdBTUVfU1RBVFVTLlNUQVRVU19FTkRFRF9USU1FT1VUOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICg8ZGl2IGNsYXNzTmFtZT1cIm1lc3NhZ2VQb3B1cCBia2dSZWRcIiBzdHlsZT17c3R5bGVPYmp9PlRJTUUgVVAhPC9kaXY+KTtcclxuXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKClcclxuICAgIHtcclxuICAgICAgICBsZXQgc3RhdGUgPSB0aGlzLnByb3BzLnN0YXRlO1xyXG5cclxuICAgICAgICBsZXQgY2VsbHMgPSBbXTtcclxuICAgICAgICBsZXQgcm93TGVuZ3RoID0gc3RhdGUuZ2FtZS5hbGxDZWxscy5sZW5ndGg7XHJcbiAgICAgICAgbGV0IGNvbHVtbkhlaWdodCA9IHN0YXRlLmdhbWUuYWxsQ2VsbHNbMF0ubGVuZ3RoO1xyXG5cclxuICAgICAgICB2YXIgY2xpY2tlZEluZGV4ID0gc3RhdGUuZ2FtZS5jbGlja2VkSW5kZXg7XHJcbiAgICAgICAgdmFyIGNvdW50ZXIgPSAwO1xyXG4gICAgICAgIGZvciAobGV0IG4gPSAwOyBuIDwgY29sdW1uSGVpZ2h0OyBuKyspXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJvd0xlbmd0aDsgaSsrKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBsZXQgY2VsbERhdGEgPSB0aGlzLnByb3BzLnN0YXRlLmdhbWUuYWxsQ2VsbHNbbl1baV07XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIGNlbGxEYXRhT2JqID0gdGhpcy5nZXRDZWxsU3R5bGUoc3RhdGUuZ2FtZS5nYW1lU3RhdHVzLCBjZWxsRGF0YS5jZWxsVHlwZSwgY2VsbERhdGEuY2VsbFN0YXRlKTtcclxuICAgICAgICAgICAgICAgIHZhciBjbGFzc1N0ciA9IGNlbGxEYXRhT2JqLmNsYXNzO1xyXG4gICAgICAgICAgICAgICAgdmFyIHZpc3VhbFN0YXRlID0gY2VsbERhdGFPYmoudmlzdWFsO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBpc0FuaW0gPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGlmIChjZWxsRGF0YS5jZWxsSW5kZXggPT0gY2xpY2tlZEluZGV4KVxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGlzQW5pbSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgbGV0IHRlbXBDZWxsID0gPENlbGwga2V5PXtjZWxsRGF0YS5jZWxsSW5kZXh9IGluZGV4PXtjZWxsRGF0YS5jZWxsSW5kZXh9IGNlbGxUeXBlPXtjZWxsRGF0YS5jZWxsVHlwZX0gY2VsbFN0YXRlPXtjZWxsRGF0YS5jZWxsU3RhdGV9XHJcbiAgICAgICAgICAgICAgICAgICAgdlN0YXRlPXt2aXN1YWxTdGF0ZX0gcHJvY2VlZENsaWNrPXt0aGlzLnByb2NlZWRDbGlja30gY2VsbENsYXNzPXtjbGFzc1N0cn0gaXNBbmltPXtpc0FuaW19PmNvdW50ZXI8L0NlbGw+XHJcblxyXG4gICAgICAgICAgICAgICAgY2VsbHMucHVzaCh0ZW1wQ2VsbCk7XHJcbiAgICAgICAgICAgICAgICBjb3VudGVyKys7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBtZXNzYWdlU3RyaW5nID0gdGhpcy5nZXRNZXNzYWdlU3RyaW5nKCk7XHJcbiAgICAgICAgdmFyIGNsb2NrID0gdGhpcy5nZXRDbG9jayhzdGF0ZS5nYW1lKTtcclxuICAgICAgICB2YXIgbWVzc2FnZVBvcHVwID0gdGhpcy5nZXRNZXNzYWdlUG9wdXAoc3RhdGUuZ2FtZSk7XHJcblxyXG4gICAgICAgIHZhciBzdHlsZUJ1dHRvbiA9IHtcclxuICAgICAgICAgICAgbWFyZ2luVG9wOiBcIjN2bWluXCIsXHJcbiAgICAgICAgICAgIG1hcmdpbkxlZnQ6IFwiYXV0b1wiLFxyXG4gICAgICAgICAgICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXHJcbiAgICAgICAgICAgIGxlZnQ6IDAsXHJcbiAgICAgICAgICAgIHJpZ2h0OiAwLFxyXG4gICAgICAgICAgICB0b3A6IFwiNzUlXCIsXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgc2l6ZSA9ICh3aW5kb3cuaW5uZXJXaWR0aCA+IHdpbmRvdy5pbm5lckhlaWdodCkgPyB3aW5kb3cuaW5uZXJIZWlnaHQgKiAwLjYgOiB3aW5kb3cuaW5uZXJXaWR0aCAqIDAuNjtcclxuXHJcbiAgICAgICAgaWYgKHdpbmRvdy5pbm5lckhlaWdodCA+IHdpbmRvdy5pbm5lcldpZHRoICogMS4yKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgc2l6ZSA9IHdpbmRvdy5pbm5lcldpZHRoICogMC44O1xyXG5cclxuICAgICAgICAgICAgc3R5bGVCdXR0b24uaGVpZ2h0ID0gXCIxMnZtaW5cIjtcclxuICAgICAgICAgICAgc3R5bGVCdXR0b24ubGluZUhlaWdodCA9IFwiMTJ2bWluXCI7XHJcbiAgICAgICAgICAgIHN0eWxlQnV0dG9uLmZvbnRTaXplID0gXCI2dm1pblwiO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIGJ1dHRvbkxhYmVsID0gdGhpcy5nZXRCdXR0b25MYWJlbChzdGF0ZS5nYW1lKTtcclxuXHJcbiAgICAgICAgdmFyIGJ1dHRvbiA9IG51bGw7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuc3RhdGUuZ2FtZS5nYW1lU3RhdHVzID09IEdBTUVfU1RBVFVTLlNUQVRVU19QUkVfUkVNRU1CRVIgfHwgdGhpcy5wcm9wcy5zdGF0ZS5nYW1lLmdhbWVTdGF0dXMgPT0gR0FNRV9TVEFUVVMuU1RBVFVTX1JVTk5JTkdfUkVNRU1CRVIpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzdHlsZUJ1dHRvbi5iYWNrZ3JvdW5kQ29sb3IgPSBcInJnYig5NSwgOTUsIDk1KVwiO1xyXG4gICAgICAgICAgICBzdHlsZUJ1dHRvbi5jb2xvciA9IFwicmdiKDE0OCwgMTQ4LCAxNDgpXCI7XHJcbiAgICAgICAgICAgIGJ1dHRvbiA9IDxkaXYgY2xhc3NOYW1lPVwiR1NfR2FtZUJ1dHRvblwiICBzdHlsZT17c3R5bGVCdXR0b259PntidXR0b25MYWJlbH08L2Rpdj5cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgYnV0dG9uID0gPGRpdiBjbGFzc05hbWU9XCJHU19HYW1lQnV0dG9uXCIgb25DbGljaz17dGhpcy5wcm9jZWVkQnV0dG9uQ2xpY2t9IHN0eWxlPXtzdHlsZUJ1dHRvbn0+e2J1dHRvbkxhYmVsfTwvZGl2PlxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIHN0eWxlTGV2ZWwgPSB7XHJcbiAgICAgICAgICAgIHRleHRBbGlnbjogXCJyaWdodFwiLFxyXG4gICAgICAgICAgICBtYXJnaW5SaWdodDogXCIydndcIixcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHN0eWxlU2NvcmUgPSB7XHJcbiAgICAgICAgICAgIHRleHRBbGlnbjogXCJsZWZ0XCIsXHJcbiAgICAgICAgICAgIG1hcmdpbkxlZnQ6IFwiMnZ3XCIsXHJcbiAgICAgICAgfVxyXG5cclxuXHJcblxyXG4gICAgICAgIHZhciBjb250YWluZXJTdHlsZU9iaiA9IHtcclxuICAgICAgICAgICAgZ3JpZFRlbXBsYXRlQ29sdW1uczogXCJyZXBlYXQoXCIgKyByb3dMZW5ndGggKyBcIiwgMWZyKVwiLFxyXG4gICAgICAgICAgICB3aWR0aDogc2l6ZSArIFwicHhcIixcclxuICAgICAgICAgICAgaGVpZ2h0OiBzaXplICsgXCJweFwiLFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJndkNvbnRhaW5lclwiIG9uQ2xpY2s9e3RoaXMucHJvY2VlZEJ1dHRvbkNsaWNrQmtnfT5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGVyQ29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsZXZlbFNjb3JlQ29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGV2ZWxDbGFzc1wiIHN0eWxlPXtzdHlsZUxldmVsfT5MZXZlbDoge3RoaXMuZ2V0TGV2ZWwoKX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsZXZlbENsYXNzXCIgc3R5bGU9e3N0eWxlU2NvcmV9PlNjb3JlOiB7dGhpcy5wcm9wcy5zdGF0ZS5zY29yZX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1lc3NhZ2VDbGFzc1wiPnttZXNzYWdlU3RyaW5nfTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIHtjbG9ja31cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJndkNlbGxDb250YWluZXJcIiBzdHlsZT17Y29udGFpbmVyU3R5bGVPYmp9PlxyXG4gICAgICAgICAgICAgICAgICAgIHtjZWxsc31cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAge21lc3NhZ2VQb3B1cH1cclxuICAgICAgICAgICAgICAgIHtidXR0b259XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIClcclxuICAgIH1cclxufSIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHtJTUFHRVNfREFUQSB9IGZyb20gXCIuLi9zdGF0ZS9jb25zdGFudHNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdpblNjcmVlbiBleHRlbmRzIENvbXBvbmVudFxyXG57XHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcylcclxuICAgIHtcclxuICAgICAgICBzdXBlcihwcm9wcyk7XHJcblxyXG4gICAgICAgIHRoaXMucHJvY2VlZENsaWNrID0gdGhpcy5wcm9jZWVkQ2xpY2suYmluZCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm9jZWVkQ2xpY2soZSlcclxuICAgIHtcclxuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIHRoaXMucHJvcHMuc2hvd0JlZ2luU2NyZWVuKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKClcclxuICAgIHtcclxuICAgICAgICB2YXIgc3R5bGVPYmogPSB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXHJcbiAgICAgICAgICAgIG1hcmdpblRvcDogXCIzdm1pblwiLFxyXG4gICAgICAgICAgICBtYXJnaW5MZWZ0OiBcImF1dG9cIixcclxuICAgICAgICAgICAgbWFyZ2luUmlnaHQ6IFwiYXV0b1wiLFxyXG4gICAgICAgICAgICBsZWZ0OiAwLFxyXG4gICAgICAgICAgICByaWdodDogMCxcclxuICAgICAgICAgICAgdG9wOiBcIjc1JVwiLFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIHNpemUgPSAod2luZG93LmlubmVyV2lkdGggPiB3aW5kb3cuaW5uZXJIZWlnaHQpID8gd2luZG93LmlubmVySGVpZ2h0ICogMC42IDogd2luZG93LmlubmVyV2lkdGggKiAwLjY7XHJcblxyXG4gICAgICAgIGlmICh3aW5kb3cuaW5uZXJIZWlnaHQgPiB3aW5kb3cuaW5uZXJXaWR0aCAqIDEuMilcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHNpemUgPSB3aW5kb3cuaW5uZXJXaWR0aCAqIDAuODtcclxuXHJcbiAgICAgICAgICAgIHN0eWxlT2JqLmhlaWdodCA9IFwiMTJ2bWluXCI7XHJcbiAgICAgICAgICAgIHN0eWxlT2JqLmxpbmVIZWlnaHQgPSBcIjEydm1pblwiO1xyXG4gICAgICAgICAgICBzdHlsZU9iai5mb250U2l6ZSA9IFwiNnZtaW5cIjtcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICByZXR1cm4oXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lID0gXCJCU19Ca2dcIiBvbkNsaWNrID0ge3RoaXMucHJvY2VlZENsaWNrfT5cclxuICAgICAgICAgICAgICAgICAgPGltZyBjbGFzc05hbWUgPSBcInNwbGFzaFwiIHNyYyA9IHtJTUFHRVNfREFUQS53aW59PjwvaW1nPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWUgPSBcIkdTX0dhbWVCdXR0b25cIiBzdHlsZSA9IHtzdHlsZU9ian0gb25DbGljayA9IHt0aGlzLnByb2NlZWRDbGlja30+Q29udGludWU8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBTQ1JFRU5TLCBJTUFHRVNfREFUQSB9IGZyb20gXCIuLi9zdGF0ZS9jb25zdGFudHNcIjtcclxuaW1wb3J0IEJlZ2luU2NyZWVuIGZyb20gXCIuL2JlZ2luX3NjcmVlblwiO1xyXG5pbXBvcnQgR2FtZVNjcmVlbiBmcm9tIFwiLi9nYW1lX3NjcmVlblwiO1xyXG5pbXBvcnQgV2luU2NyZWVuIGZyb20gXCIuL3dpbl9zY3JlZW5cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVWaWV3IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKVxyXG4gICAge1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgIH1cclxuXHJcbiAgICByZW5kZXIoKVxyXG4gICAge1xyXG4gICAgICAgIGxldCBCZWdpblNjcmVlbkluc3RhbmNlID0gbnVsbDtcclxuICAgICAgICBsZXQgR2FtZVNjcmVlbkluc3RhbmNlID0gbnVsbDtcclxuICAgICAgICBsZXQgV2luU2NyZWVuSW5zdGFuY2UgPSBudWxsO1xyXG5cclxuICAgICAgICBzd2l0Y2ggKHRoaXMucHJvcHMuc3RhdGUuc2NyZWVuKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgY2FzZSBTQ1JFRU5TLkJFR0lOX1NDUkVFTjpcclxuICAgICAgICAgICAgICAgIEJlZ2luU2NyZWVuSW5zdGFuY2UgPSA8QmVnaW5TY3JlZW4gb25TdGFydEdhbWVDbGlja2VkPXt0aGlzLnByb3BzLmNhbGxiYWNrcy5vblN0YXJ0R2FtZUNsaWNrZWR9IG9uTGV2ZWxDbGlja2VkPXt0aGlzLnByb3BzLmNhbGxiYWNrcy5vbkxldmVsQ2xpY2tlZH1cclxuICAgICAgICAgICAgICAgICAgICBsZXZlbE1lbnVPbj17dGhpcy5wcm9wcy5zdGF0ZS5sZXZlbE1lbnVPbn0gbGV2ZWw9e3RoaXMucHJvcHMuc3RhdGUuZ2FtZUxldmVsfSBtYXhMZXZlbD17dGhpcy5wcm9wcy5zdGF0ZS5tYXhMZXZlbH1cclxuICAgICAgICAgICAgICAgICAgICBvblNlbGVjdExldmVsQ2xpY2tlZD17dGhpcy5wcm9wcy5jYWxsYmFja3Mub25TZWxlY3RMZXZlbENsaWNrZWR9IGhpZGVMZXZlbE1lbnU9e3RoaXMucHJvcHMuY2FsbGJhY2tzLmhpZGVMZXZlbE1lbnV9IC8+O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBjYXNlIFNDUkVFTlMuR0FNRV9TQ1JFRU46XHJcbiAgICAgICAgICAgICAgICBHYW1lU2NyZWVuSW5zdGFuY2UgPSA8R2FtZVNjcmVlbiBzdGF0ZT17dGhpcy5wcm9wcy5zdGF0ZX0gb25DZWxsQ2xpY2tlZD17dGhpcy5wcm9wcy5jYWxsYmFja3Mub25DZWxsQ2xpY2tlZH1cclxuICAgICAgICAgICAgICAgICAgICBvbkdhbWVCdXR0b25DbGlja2VkPXt0aGlzLnByb3BzLmNhbGxiYWNrcy5vbkdhbWVCdXR0b25DbGlja2VkfSAvPjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY2FzZSBTQ1JFRU5TLldJTl9TQ1JFRU46XHJcbiAgICAgICAgICAgICAgICBXaW5TY3JlZW5JbnN0YW5jZSA9IDxXaW5TY3JlZW4gc2hvd0JlZ2luU2NyZWVuPXt0aGlzLnByb3BzLmNhbGxiYWNrcy5yZXNldFRvQmVnaW5TY3JlZW59IC8+O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgQmVnaW5TY3JlZW5JbnN0YW5jZSA9IDxCZWdpblNjcmVlbiAvPjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBleGl0QnV0dG9uID0gbnVsbDtcclxuXHJcbiAgICAgICAgaWYgKEdhbWVTY3JlZW5JbnN0YW5jZSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGV4aXRCdXR0b24gPSA8aW1nIGNsYXNzTmFtZT1cImV4aXRCdXR0b25cIiBzcmM9e0lNQUdFU19EQVRBLmV4aXR9IG9uQ2xpY2sgPSB7dGhpcy5wcm9wcy5jYWxsYmFja3MucmVzZXRUb0JlZ2luU2NyZWVufT48L2ltZz47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZ1bGwgZ2FtZUJrZ1wiPlxyXG4gICAgICAgICAgICAgICAge0JlZ2luU2NyZWVuSW5zdGFuY2V9XHJcbiAgICAgICAgICAgICAgICB7R2FtZVNjcmVlbkluc3RhbmNlfVxyXG4gICAgICAgICAgICAgICAge1dpblNjcmVlbkluc3RhbmNlfVxyXG4gICAgICAgICAgICAgICAge2V4aXRCdXR0b259XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIClcclxuICAgIH1cclxufSIsImltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDInO1xuXG4vKipcbiAqIEFkYXB0ZWQgZnJvbSBSZWFjdDogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvbWFzdGVyL3BhY2thZ2VzL3NoYXJlZC9mb3JtYXRQcm9kRXJyb3JNZXNzYWdlLmpzXG4gKlxuICogRG8gbm90IHJlcXVpcmUgdGhpcyBtb2R1bGUgZGlyZWN0bHkhIFVzZSBub3JtYWwgdGhyb3cgZXJyb3IgY2FsbHMuIFRoZXNlIG1lc3NhZ2VzIHdpbGwgYmUgcmVwbGFjZWQgd2l0aCBlcnJvciBjb2Rlc1xuICogZHVyaW5nIGJ1aWxkLlxuICogQHBhcmFtIHtudW1iZXJ9IGNvZGVcbiAqL1xuZnVuY3Rpb24gZm9ybWF0UHJvZEVycm9yTWVzc2FnZShjb2RlKSB7XG4gIHJldHVybiBcIk1pbmlmaWVkIFJlZHV4IGVycm9yICNcIiArIGNvZGUgKyBcIjsgdmlzaXQgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvRXJyb3JzP2NvZGU9XCIgKyBjb2RlICsgXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgXCIgKyAndXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycy4gJztcbn1cblxuLy8gSW5saW5lZCB2ZXJzaW9uIG9mIHRoZSBgc3ltYm9sLW9ic2VydmFibGVgIHBvbHlmaWxsXG52YXIgJCRvYnNlcnZhYmxlID0gKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgU3ltYm9sLm9ic2VydmFibGUgfHwgJ0BAb2JzZXJ2YWJsZSc7XG59KSgpO1xuXG4vKipcbiAqIFRoZXNlIGFyZSBwcml2YXRlIGFjdGlvbiB0eXBlcyByZXNlcnZlZCBieSBSZWR1eC5cbiAqIEZvciBhbnkgdW5rbm93biBhY3Rpb25zLCB5b3UgbXVzdCByZXR1cm4gdGhlIGN1cnJlbnQgc3RhdGUuXG4gKiBJZiB0aGUgY3VycmVudCBzdGF0ZSBpcyB1bmRlZmluZWQsIHlvdSBtdXN0IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZS5cbiAqIERvIG5vdCByZWZlcmVuY2UgdGhlc2UgYWN0aW9uIHR5cGVzIGRpcmVjdGx5IGluIHlvdXIgY29kZS5cbiAqL1xudmFyIHJhbmRvbVN0cmluZyA9IGZ1bmN0aW9uIHJhbmRvbVN0cmluZygpIHtcbiAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZyg3KS5zcGxpdCgnJykuam9pbignLicpO1xufTtcblxudmFyIEFjdGlvblR5cGVzID0ge1xuICBJTklUOiBcIkBAcmVkdXgvSU5JVFwiICsgcmFuZG9tU3RyaW5nKCksXG4gIFJFUExBQ0U6IFwiQEByZWR1eC9SRVBMQUNFXCIgKyByYW5kb21TdHJpbmcoKSxcbiAgUFJPQkVfVU5LTk9XTl9BQ1RJT046IGZ1bmN0aW9uIFBST0JFX1VOS05PV05fQUNUSU9OKCkge1xuICAgIHJldHVybiBcIkBAcmVkdXgvUFJPQkVfVU5LTk9XTl9BQ1RJT05cIiArIHJhbmRvbVN0cmluZygpO1xuICB9XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7YW55fSBvYmogVGhlIG9iamVjdCB0byBpbnNwZWN0LlxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIGFyZ3VtZW50IGFwcGVhcnMgdG8gYmUgYSBwbGFpbiBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCBvYmogPT09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgdmFyIHByb3RvID0gb2JqO1xuXG4gIHdoaWxlIChPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pICE9PSBudWxsKSB7XG4gICAgcHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopID09PSBwcm90bztcbn1cblxuLy8gSW5saW5lZCAvIHNob3J0ZW5lZCB2ZXJzaW9uIG9mIGBraW5kT2ZgIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2pvbnNjaGxpbmtlcnQva2luZC1vZlxuZnVuY3Rpb24gbWluaUtpbmRPZih2YWwpIHtcbiAgaWYgKHZhbCA9PT0gdm9pZCAwKSByZXR1cm4gJ3VuZGVmaW5lZCc7XG4gIGlmICh2YWwgPT09IG51bGwpIHJldHVybiAnbnVsbCc7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbDtcblxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICdib29sZWFuJzpcbiAgICBjYXNlICdzdHJpbmcnOlxuICAgIGNhc2UgJ251bWJlcic6XG4gICAgY2FzZSAnc3ltYm9sJzpcbiAgICBjYXNlICdmdW5jdGlvbic6XG4gICAgICB7XG4gICAgICAgIHJldHVybiB0eXBlO1xuICAgICAgfVxuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkgcmV0dXJuICdhcnJheSc7XG4gIGlmIChpc0RhdGUodmFsKSkgcmV0dXJuICdkYXRlJztcbiAgaWYgKGlzRXJyb3IodmFsKSkgcmV0dXJuICdlcnJvcic7XG4gIHZhciBjb25zdHJ1Y3Rvck5hbWUgPSBjdG9yTmFtZSh2YWwpO1xuXG4gIHN3aXRjaCAoY29uc3RydWN0b3JOYW1lKSB7XG4gICAgY2FzZSAnU3ltYm9sJzpcbiAgICBjYXNlICdQcm9taXNlJzpcbiAgICBjYXNlICdXZWFrTWFwJzpcbiAgICBjYXNlICdXZWFrU2V0JzpcbiAgICBjYXNlICdNYXAnOlxuICAgIGNhc2UgJ1NldCc6XG4gICAgICByZXR1cm4gY29uc3RydWN0b3JOYW1lO1xuICB9IC8vIG90aGVyXG5cblxuICByZXR1cm4gdHlwZS5zbGljZSg4LCAtMSkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXHMvZywgJycpO1xufVxuXG5mdW5jdGlvbiBjdG9yTmFtZSh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwuY29uc3RydWN0b3IgPT09ICdmdW5jdGlvbicgPyB2YWwuY29uc3RydWN0b3IubmFtZSA6IG51bGw7XG59XG5cbmZ1bmN0aW9uIGlzRXJyb3IodmFsKSB7XG4gIHJldHVybiB2YWwgaW5zdGFuY2VvZiBFcnJvciB8fCB0eXBlb2YgdmFsLm1lc3NhZ2UgPT09ICdzdHJpbmcnICYmIHZhbC5jb25zdHJ1Y3RvciAmJiB0eXBlb2YgdmFsLmNvbnN0cnVjdG9yLnN0YWNrVHJhY2VMaW1pdCA9PT0gJ251bWJlcic7XG59XG5cbmZ1bmN0aW9uIGlzRGF0ZSh2YWwpIHtcbiAgaWYgKHZhbCBpbnN0YW5jZW9mIERhdGUpIHJldHVybiB0cnVlO1xuICByZXR1cm4gdHlwZW9mIHZhbC50b0RhdGVTdHJpbmcgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIHZhbC5nZXREYXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiB2YWwuc2V0RGF0ZSA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24ga2luZE9mKHZhbCkge1xuICB2YXIgdHlwZU9mVmFsID0gdHlwZW9mIHZhbDtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHR5cGVPZlZhbCA9IG1pbmlLaW5kT2YodmFsKTtcbiAgfVxuXG4gIHJldHVybiB0eXBlT2ZWYWw7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIFJlZHV4IHN0b3JlIHRoYXQgaG9sZHMgdGhlIHN0YXRlIHRyZWUuXG4gKiBUaGUgb25seSB3YXkgdG8gY2hhbmdlIHRoZSBkYXRhIGluIHRoZSBzdG9yZSBpcyB0byBjYWxsIGBkaXNwYXRjaCgpYCBvbiBpdC5cbiAqXG4gKiBUaGVyZSBzaG91bGQgb25seSBiZSBhIHNpbmdsZSBzdG9yZSBpbiB5b3VyIGFwcC4gVG8gc3BlY2lmeSBob3cgZGlmZmVyZW50XG4gKiBwYXJ0cyBvZiB0aGUgc3RhdGUgdHJlZSByZXNwb25kIHRvIGFjdGlvbnMsIHlvdSBtYXkgY29tYmluZSBzZXZlcmFsIHJlZHVjZXJzXG4gKiBpbnRvIGEgc2luZ2xlIHJlZHVjZXIgZnVuY3Rpb24gYnkgdXNpbmcgYGNvbWJpbmVSZWR1Y2Vyc2AuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVkdWNlciBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgbmV4dCBzdGF0ZSB0cmVlLCBnaXZlblxuICogdGhlIGN1cnJlbnQgc3RhdGUgdHJlZSBhbmQgdGhlIGFjdGlvbiB0byBoYW5kbGUuXG4gKlxuICogQHBhcmFtIHthbnl9IFtwcmVsb2FkZWRTdGF0ZV0gVGhlIGluaXRpYWwgc3RhdGUuIFlvdSBtYXkgb3B0aW9uYWxseSBzcGVjaWZ5IGl0XG4gKiB0byBoeWRyYXRlIHRoZSBzdGF0ZSBmcm9tIHRoZSBzZXJ2ZXIgaW4gdW5pdmVyc2FsIGFwcHMsIG9yIHRvIHJlc3RvcmUgYVxuICogcHJldmlvdXNseSBzZXJpYWxpemVkIHVzZXIgc2Vzc2lvbi5cbiAqIElmIHlvdSB1c2UgYGNvbWJpbmVSZWR1Y2Vyc2AgdG8gcHJvZHVjZSB0aGUgcm9vdCByZWR1Y2VyIGZ1bmN0aW9uLCB0aGlzIG11c3QgYmVcbiAqIGFuIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNoYXBlIGFzIGBjb21iaW5lUmVkdWNlcnNgIGtleXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2VuaGFuY2VyXSBUaGUgc3RvcmUgZW5oYW5jZXIuIFlvdSBtYXkgb3B0aW9uYWxseSBzcGVjaWZ5IGl0XG4gKiB0byBlbmhhbmNlIHRoZSBzdG9yZSB3aXRoIHRoaXJkLXBhcnR5IGNhcGFiaWxpdGllcyBzdWNoIGFzIG1pZGRsZXdhcmUsXG4gKiB0aW1lIHRyYXZlbCwgcGVyc2lzdGVuY2UsIGV0Yy4gVGhlIG9ubHkgc3RvcmUgZW5oYW5jZXIgdGhhdCBzaGlwcyB3aXRoIFJlZHV4XG4gKiBpcyBgYXBwbHlNaWRkbGV3YXJlKClgLlxuICpcbiAqIEByZXR1cm5zIHtTdG9yZX0gQSBSZWR1eCBzdG9yZSB0aGF0IGxldHMgeW91IHJlYWQgdGhlIHN0YXRlLCBkaXNwYXRjaCBhY3Rpb25zXG4gKiBhbmQgc3Vic2NyaWJlIHRvIGNoYW5nZXMuXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlU3RvcmUocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUsIGVuaGFuY2VyKSB7XG4gIHZhciBfcmVmMjtcblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgZW5oYW5jZXIgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGFyZ3VtZW50c1szXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDApIDogJ0l0IGxvb2tzIGxpa2UgeW91IGFyZSBwYXNzaW5nIHNldmVyYWwgc3RvcmUgZW5oYW5jZXJzIHRvICcgKyAnY3JlYXRlU3RvcmUoKS4gVGhpcyBpcyBub3Qgc3VwcG9ydGVkLiBJbnN0ZWFkLCBjb21wb3NlIHRoZW0gJyArICd0b2dldGhlciB0byBhIHNpbmdsZSBmdW5jdGlvbi4gU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL3R1dG9yaWFscy9mdW5kYW1lbnRhbHMvcGFydC00LXN0b3JlI2NyZWF0aW5nLWEtc3RvcmUtd2l0aC1lbmhhbmNlcnMgZm9yIGFuIGV4YW1wbGUuJyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBlbmhhbmNlciA9IHByZWxvYWRlZFN0YXRlO1xuICAgIHByZWxvYWRlZFN0YXRlID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBlbmhhbmNlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBpZiAodHlwZW9mIGVuaGFuY2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxKSA6IFwiRXhwZWN0ZWQgdGhlIGVuaGFuY2VyIHRvIGJlIGEgZnVuY3Rpb24uIEluc3RlYWQsIHJlY2VpdmVkOiAnXCIgKyBraW5kT2YoZW5oYW5jZXIpICsgXCInXCIpO1xuICAgIH1cblxuICAgIHJldHVybiBlbmhhbmNlcihjcmVhdGVTdG9yZSkocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiByZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMikgOiBcIkV4cGVjdGVkIHRoZSByb290IHJlZHVjZXIgdG8gYmUgYSBmdW5jdGlvbi4gSW5zdGVhZCwgcmVjZWl2ZWQ6ICdcIiArIGtpbmRPZihyZWR1Y2VyKSArIFwiJ1wiKTtcbiAgfVxuXG4gIHZhciBjdXJyZW50UmVkdWNlciA9IHJlZHVjZXI7XG4gIHZhciBjdXJyZW50U3RhdGUgPSBwcmVsb2FkZWRTdGF0ZTtcbiAgdmFyIGN1cnJlbnRMaXN0ZW5lcnMgPSBbXTtcbiAgdmFyIG5leHRMaXN0ZW5lcnMgPSBjdXJyZW50TGlzdGVuZXJzO1xuICB2YXIgaXNEaXNwYXRjaGluZyA9IGZhbHNlO1xuICAvKipcbiAgICogVGhpcyBtYWtlcyBhIHNoYWxsb3cgY29weSBvZiBjdXJyZW50TGlzdGVuZXJzIHNvIHdlIGNhbiB1c2VcbiAgICogbmV4dExpc3RlbmVycyBhcyBhIHRlbXBvcmFyeSBsaXN0IHdoaWxlIGRpc3BhdGNoaW5nLlxuICAgKlxuICAgKiBUaGlzIHByZXZlbnRzIGFueSBidWdzIGFyb3VuZCBjb25zdW1lcnMgY2FsbGluZ1xuICAgKiBzdWJzY3JpYmUvdW5zdWJzY3JpYmUgaW4gdGhlIG1pZGRsZSBvZiBhIGRpc3BhdGNoLlxuICAgKi9cblxuICBmdW5jdGlvbiBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCkge1xuICAgIGlmIChuZXh0TGlzdGVuZXJzID09PSBjdXJyZW50TGlzdGVuZXJzKSB7XG4gICAgICBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycy5zbGljZSgpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogUmVhZHMgdGhlIHN0YXRlIHRyZWUgbWFuYWdlZCBieSB0aGUgc3RvcmUuXG4gICAqXG4gICAqIEByZXR1cm5zIHthbnl9IFRoZSBjdXJyZW50IHN0YXRlIHRyZWUgb2YgeW91ciBhcHBsaWNhdGlvbi5cbiAgICovXG5cblxuICBmdW5jdGlvbiBnZXRTdGF0ZSgpIHtcbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMykgOiAnWW91IG1heSBub3QgY2FsbCBzdG9yZS5nZXRTdGF0ZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdUaGUgcmVkdWNlciBoYXMgYWxyZWFkeSByZWNlaXZlZCB0aGUgc3RhdGUgYXMgYW4gYXJndW1lbnQuICcgKyAnUGFzcyBpdCBkb3duIGZyb20gdGhlIHRvcCByZWR1Y2VyIGluc3RlYWQgb2YgcmVhZGluZyBpdCBmcm9tIHRoZSBzdG9yZS4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3VycmVudFN0YXRlO1xuICB9XG4gIC8qKlxuICAgKiBBZGRzIGEgY2hhbmdlIGxpc3RlbmVyLiBJdCB3aWxsIGJlIGNhbGxlZCBhbnkgdGltZSBhbiBhY3Rpb24gaXMgZGlzcGF0Y2hlZCxcbiAgICogYW5kIHNvbWUgcGFydCBvZiB0aGUgc3RhdGUgdHJlZSBtYXkgcG90ZW50aWFsbHkgaGF2ZSBjaGFuZ2VkLiBZb3UgbWF5IHRoZW5cbiAgICogY2FsbCBgZ2V0U3RhdGUoKWAgdG8gcmVhZCB0aGUgY3VycmVudCBzdGF0ZSB0cmVlIGluc2lkZSB0aGUgY2FsbGJhY2suXG4gICAqXG4gICAqIFlvdSBtYXkgY2FsbCBgZGlzcGF0Y2goKWAgZnJvbSBhIGNoYW5nZSBsaXN0ZW5lciwgd2l0aCB0aGUgZm9sbG93aW5nXG4gICAqIGNhdmVhdHM6XG4gICAqXG4gICAqIDEuIFRoZSBzdWJzY3JpcHRpb25zIGFyZSBzbmFwc2hvdHRlZCBqdXN0IGJlZm9yZSBldmVyeSBgZGlzcGF0Y2goKWAgY2FsbC5cbiAgICogSWYgeW91IHN1YnNjcmliZSBvciB1bnN1YnNjcmliZSB3aGlsZSB0aGUgbGlzdGVuZXJzIGFyZSBiZWluZyBpbnZva2VkLCB0aGlzXG4gICAqIHdpbGwgbm90IGhhdmUgYW55IGVmZmVjdCBvbiB0aGUgYGRpc3BhdGNoKClgIHRoYXQgaXMgY3VycmVudGx5IGluIHByb2dyZXNzLlxuICAgKiBIb3dldmVyLCB0aGUgbmV4dCBgZGlzcGF0Y2goKWAgY2FsbCwgd2hldGhlciBuZXN0ZWQgb3Igbm90LCB3aWxsIHVzZSBhIG1vcmVcbiAgICogcmVjZW50IHNuYXBzaG90IG9mIHRoZSBzdWJzY3JpcHRpb24gbGlzdC5cbiAgICpcbiAgICogMi4gVGhlIGxpc3RlbmVyIHNob3VsZCBub3QgZXhwZWN0IHRvIHNlZSBhbGwgc3RhdGUgY2hhbmdlcywgYXMgdGhlIHN0YXRlXG4gICAqIG1pZ2h0IGhhdmUgYmVlbiB1cGRhdGVkIG11bHRpcGxlIHRpbWVzIGR1cmluZyBhIG5lc3RlZCBgZGlzcGF0Y2goKWAgYmVmb3JlXG4gICAqIHRoZSBsaXN0ZW5lciBpcyBjYWxsZWQuIEl0IGlzLCBob3dldmVyLCBndWFyYW50ZWVkIHRoYXQgYWxsIHN1YnNjcmliZXJzXG4gICAqIHJlZ2lzdGVyZWQgYmVmb3JlIHRoZSBgZGlzcGF0Y2goKWAgc3RhcnRlZCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZSBsYXRlc3RcbiAgICogc3RhdGUgYnkgdGhlIHRpbWUgaXQgZXhpdHMuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyIEEgY2FsbGJhY2sgdG8gYmUgaW52b2tlZCBvbiBldmVyeSBkaXNwYXRjaC5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIHRvIHJlbW92ZSB0aGlzIGNoYW5nZSBsaXN0ZW5lci5cbiAgICovXG5cblxuICBmdW5jdGlvbiBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBpZiAodHlwZW9mIGxpc3RlbmVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSg0KSA6IFwiRXhwZWN0ZWQgdGhlIGxpc3RlbmVyIHRvIGJlIGEgZnVuY3Rpb24uIEluc3RlYWQsIHJlY2VpdmVkOiAnXCIgKyBraW5kT2YobGlzdGVuZXIpICsgXCInXCIpO1xuICAgIH1cblxuICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSg1KSA6ICdZb3UgbWF5IG5vdCBjYWxsIHN0b3JlLnN1YnNjcmliZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdJZiB5b3Ugd291bGQgbGlrZSB0byBiZSBub3RpZmllZCBhZnRlciB0aGUgc3RvcmUgaGFzIGJlZW4gdXBkYXRlZCwgc3Vic2NyaWJlIGZyb20gYSAnICsgJ2NvbXBvbmVudCBhbmQgaW52b2tlIHN0b3JlLmdldFN0YXRlKCkgaW4gdGhlIGNhbGxiYWNrIHRvIGFjY2VzcyB0aGUgbGF0ZXN0IHN0YXRlLiAnICsgJ1NlZSBodHRwczovL3JlZHV4LmpzLm9yZy9hcGkvc3RvcmUjc3Vic2NyaWJlbGlzdGVuZXIgZm9yIG1vcmUgZGV0YWlscy4nKTtcbiAgICB9XG5cbiAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCk7XG4gICAgbmV4dExpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICBpZiAoIWlzU3Vic2NyaWJlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDYpIDogJ1lvdSBtYXkgbm90IHVuc3Vic2NyaWJlIGZyb20gYSBzdG9yZSBsaXN0ZW5lciB3aGlsZSB0aGUgcmVkdWNlciBpcyBleGVjdXRpbmcuICcgKyAnU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL2FwaS9zdG9yZSNzdWJzY3JpYmVsaXN0ZW5lciBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgICAgfVxuXG4gICAgICBpc1N1YnNjcmliZWQgPSBmYWxzZTtcbiAgICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICAgIHZhciBpbmRleCA9IG5leHRMaXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcik7XG4gICAgICBuZXh0TGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICBjdXJyZW50TGlzdGVuZXJzID0gbnVsbDtcbiAgICB9O1xuICB9XG4gIC8qKlxuICAgKiBEaXNwYXRjaGVzIGFuIGFjdGlvbi4gSXQgaXMgdGhlIG9ubHkgd2F5IHRvIHRyaWdnZXIgYSBzdGF0ZSBjaGFuZ2UuXG4gICAqXG4gICAqIFRoZSBgcmVkdWNlcmAgZnVuY3Rpb24sIHVzZWQgdG8gY3JlYXRlIHRoZSBzdG9yZSwgd2lsbCBiZSBjYWxsZWQgd2l0aCB0aGVcbiAgICogY3VycmVudCBzdGF0ZSB0cmVlIGFuZCB0aGUgZ2l2ZW4gYGFjdGlvbmAuIEl0cyByZXR1cm4gdmFsdWUgd2lsbFxuICAgKiBiZSBjb25zaWRlcmVkIHRoZSAqKm5leHQqKiBzdGF0ZSBvZiB0aGUgdHJlZSwgYW5kIHRoZSBjaGFuZ2UgbGlzdGVuZXJzXG4gICAqIHdpbGwgYmUgbm90aWZpZWQuXG4gICAqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9ubHkgc3VwcG9ydHMgcGxhaW4gb2JqZWN0IGFjdGlvbnMuIElmIHlvdSB3YW50IHRvXG4gICAqIGRpc3BhdGNoIGEgUHJvbWlzZSwgYW4gT2JzZXJ2YWJsZSwgYSB0aHVuaywgb3Igc29tZXRoaW5nIGVsc2UsIHlvdSBuZWVkIHRvXG4gICAqIHdyYXAgeW91ciBzdG9yZSBjcmVhdGluZyBmdW5jdGlvbiBpbnRvIHRoZSBjb3JyZXNwb25kaW5nIG1pZGRsZXdhcmUuIEZvclxuICAgKiBleGFtcGxlLCBzZWUgdGhlIGRvY3VtZW50YXRpb24gZm9yIHRoZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UuIEV2ZW4gdGhlXG4gICAqIG1pZGRsZXdhcmUgd2lsbCBldmVudHVhbGx5IGRpc3BhdGNoIHBsYWluIG9iamVjdCBhY3Rpb25zIHVzaW5nIHRoaXMgbWV0aG9kLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gYWN0aW9uIEEgcGxhaW4gb2JqZWN0IHJlcHJlc2VudGluZyDigJx3aGF0IGNoYW5nZWTigJ0uIEl0IGlzXG4gICAqIGEgZ29vZCBpZGVhIHRvIGtlZXAgYWN0aW9ucyBzZXJpYWxpemFibGUgc28geW91IGNhbiByZWNvcmQgYW5kIHJlcGxheSB1c2VyXG4gICAqIHNlc3Npb25zLCBvciB1c2UgdGhlIHRpbWUgdHJhdmVsbGluZyBgcmVkdXgtZGV2dG9vbHNgLiBBbiBhY3Rpb24gbXVzdCBoYXZlXG4gICAqIGEgYHR5cGVgIHByb3BlcnR5IHdoaWNoIG1heSBub3QgYmUgYHVuZGVmaW5lZGAuIEl0IGlzIGEgZ29vZCBpZGVhIHRvIHVzZVxuICAgKiBzdHJpbmcgY29uc3RhbnRzIGZvciBhY3Rpb24gdHlwZXMuXG4gICAqXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IEZvciBjb252ZW5pZW5jZSwgdGhlIHNhbWUgYWN0aW9uIG9iamVjdCB5b3UgZGlzcGF0Y2hlZC5cbiAgICpcbiAgICogTm90ZSB0aGF0LCBpZiB5b3UgdXNlIGEgY3VzdG9tIG1pZGRsZXdhcmUsIGl0IG1heSB3cmFwIGBkaXNwYXRjaCgpYCB0b1xuICAgKiByZXR1cm4gc29tZXRoaW5nIGVsc2UgKGZvciBleGFtcGxlLCBhIFByb21pc2UgeW91IGNhbiBhd2FpdCkuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gZGlzcGF0Y2goYWN0aW9uKSB7XG4gICAgaWYgKCFpc1BsYWluT2JqZWN0KGFjdGlvbikpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDcpIDogXCJBY3Rpb25zIG11c3QgYmUgcGxhaW4gb2JqZWN0cy4gSW5zdGVhZCwgdGhlIGFjdHVhbCB0eXBlIHdhczogJ1wiICsga2luZE9mKGFjdGlvbikgKyBcIicuIFlvdSBtYXkgbmVlZCB0byBhZGQgbWlkZGxld2FyZSB0byB5b3VyIHN0b3JlIHNldHVwIHRvIGhhbmRsZSBkaXNwYXRjaGluZyBvdGhlciB2YWx1ZXMsIHN1Y2ggYXMgJ3JlZHV4LXRodW5rJyB0byBoYW5kbGUgZGlzcGF0Y2hpbmcgZnVuY3Rpb25zLiBTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvdHV0b3JpYWxzL2Z1bmRhbWVudGFscy9wYXJ0LTQtc3RvcmUjbWlkZGxld2FyZSBhbmQgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvdHV0b3JpYWxzL2Z1bmRhbWVudGFscy9wYXJ0LTYtYXN5bmMtbG9naWMjdXNpbmctdGhlLXJlZHV4LXRodW5rLW1pZGRsZXdhcmUgZm9yIGV4YW1wbGVzLlwiKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbi50eXBlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoOCkgOiAnQWN0aW9ucyBtYXkgbm90IGhhdmUgYW4gdW5kZWZpbmVkIFwidHlwZVwiIHByb3BlcnR5LiBZb3UgbWF5IGhhdmUgbWlzc3BlbGxlZCBhbiBhY3Rpb24gdHlwZSBzdHJpbmcgY29uc3RhbnQuJyk7XG4gICAgfVxuXG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDkpIDogJ1JlZHVjZXJzIG1heSBub3QgZGlzcGF0Y2ggYWN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgaXNEaXNwYXRjaGluZyA9IHRydWU7XG4gICAgICBjdXJyZW50U3RhdGUgPSBjdXJyZW50UmVkdWNlcihjdXJyZW50U3RhdGUsIGFjdGlvbik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgbGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycyA9IG5leHRMaXN0ZW5lcnM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGxpc3RlbmVyID0gbGlzdGVuZXJzW2ldO1xuICAgICAgbGlzdGVuZXIoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWN0aW9uO1xuICB9XG4gIC8qKlxuICAgKiBSZXBsYWNlcyB0aGUgcmVkdWNlciBjdXJyZW50bHkgdXNlZCBieSB0aGUgc3RvcmUgdG8gY2FsY3VsYXRlIHRoZSBzdGF0ZS5cbiAgICpcbiAgICogWW91IG1pZ2h0IG5lZWQgdGhpcyBpZiB5b3VyIGFwcCBpbXBsZW1lbnRzIGNvZGUgc3BsaXR0aW5nIGFuZCB5b3Ugd2FudCB0b1xuICAgKiBsb2FkIHNvbWUgb2YgdGhlIHJlZHVjZXJzIGR5bmFtaWNhbGx5LiBZb3UgbWlnaHQgYWxzbyBuZWVkIHRoaXMgaWYgeW91XG4gICAqIGltcGxlbWVudCBhIGhvdCByZWxvYWRpbmcgbWVjaGFuaXNtIGZvciBSZWR1eC5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbmV4dFJlZHVjZXIgVGhlIHJlZHVjZXIgZm9yIHRoZSBzdG9yZSB0byB1c2UgaW5zdGVhZC5cbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gcmVwbGFjZVJlZHVjZXIobmV4dFJlZHVjZXIpIHtcbiAgICBpZiAodHlwZW9mIG5leHRSZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxMCkgOiBcIkV4cGVjdGVkIHRoZSBuZXh0UmVkdWNlciB0byBiZSBhIGZ1bmN0aW9uLiBJbnN0ZWFkLCByZWNlaXZlZDogJ1wiICsga2luZE9mKG5leHRSZWR1Y2VyKSk7XG4gICAgfVxuXG4gICAgY3VycmVudFJlZHVjZXIgPSBuZXh0UmVkdWNlcjsgLy8gVGhpcyBhY3Rpb24gaGFzIGEgc2ltaWxpYXIgZWZmZWN0IHRvIEFjdGlvblR5cGVzLklOSVQuXG4gICAgLy8gQW55IHJlZHVjZXJzIHRoYXQgZXhpc3RlZCBpbiBib3RoIHRoZSBuZXcgYW5kIG9sZCByb290UmVkdWNlclxuICAgIC8vIHdpbGwgcmVjZWl2ZSB0aGUgcHJldmlvdXMgc3RhdGUuIFRoaXMgZWZmZWN0aXZlbHkgcG9wdWxhdGVzXG4gICAgLy8gdGhlIG5ldyBzdGF0ZSB0cmVlIHdpdGggYW55IHJlbGV2YW50IGRhdGEgZnJvbSB0aGUgb2xkIG9uZS5cblxuICAgIGRpc3BhdGNoKHtcbiAgICAgIHR5cGU6IEFjdGlvblR5cGVzLlJFUExBQ0VcbiAgICB9KTtcbiAgfVxuICAvKipcbiAgICogSW50ZXJvcGVyYWJpbGl0eSBwb2ludCBmb3Igb2JzZXJ2YWJsZS9yZWFjdGl2ZSBsaWJyYXJpZXMuXG4gICAqIEByZXR1cm5zIHtvYnNlcnZhYmxlfSBBIG1pbmltYWwgb2JzZXJ2YWJsZSBvZiBzdGF0ZSBjaGFuZ2VzLlxuICAgKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBvYnNlcnZhYmxlIHByb3Bvc2FsOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYnNlcnZhYmxlXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gb2JzZXJ2YWJsZSgpIHtcbiAgICB2YXIgX3JlZjtcblxuICAgIHZhciBvdXRlclN1YnNjcmliZSA9IHN1YnNjcmliZTtcbiAgICByZXR1cm4gX3JlZiA9IHtcbiAgICAgIC8qKlxuICAgICAgICogVGhlIG1pbmltYWwgb2JzZXJ2YWJsZSBzdWJzY3JpcHRpb24gbWV0aG9kLlxuICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9ic2VydmVyIEFueSBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCBhcyBhbiBvYnNlcnZlci5cbiAgICAgICAqIFRoZSBvYnNlcnZlciBvYmplY3Qgc2hvdWxkIGhhdmUgYSBgbmV4dGAgbWV0aG9kLlxuICAgICAgICogQHJldHVybnMge3N1YnNjcmlwdGlvbn0gQW4gb2JqZWN0IHdpdGggYW4gYHVuc3Vic2NyaWJlYCBtZXRob2QgdGhhdCBjYW5cbiAgICAgICAqIGJlIHVzZWQgdG8gdW5zdWJzY3JpYmUgdGhlIG9ic2VydmFibGUgZnJvbSB0aGUgc3RvcmUsIGFuZCBwcmV2ZW50IGZ1cnRoZXJcbiAgICAgICAqIGVtaXNzaW9uIG9mIHZhbHVlcyBmcm9tIHRoZSBvYnNlcnZhYmxlLlxuICAgICAgICovXG4gICAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShvYnNlcnZlcikge1xuICAgICAgICBpZiAodHlwZW9mIG9ic2VydmVyICE9PSAnb2JqZWN0JyB8fCBvYnNlcnZlciA9PT0gbnVsbCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDExKSA6IFwiRXhwZWN0ZWQgdGhlIG9ic2VydmVyIHRvIGJlIGFuIG9iamVjdC4gSW5zdGVhZCwgcmVjZWl2ZWQ6ICdcIiArIGtpbmRPZihvYnNlcnZlcikgKyBcIidcIik7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvYnNlcnZlU3RhdGUoKSB7XG4gICAgICAgICAgaWYgKG9ic2VydmVyLm5leHQpIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoZ2V0U3RhdGUoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgb2JzZXJ2ZVN0YXRlKCk7XG4gICAgICAgIHZhciB1bnN1YnNjcmliZSA9IG91dGVyU3Vic2NyaWJlKG9ic2VydmVTdGF0ZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdW5zdWJzY3JpYmU6IHVuc3Vic2NyaWJlXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSwgX3JlZlskJG9ic2VydmFibGVdID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSwgX3JlZjtcbiAgfSAvLyBXaGVuIGEgc3RvcmUgaXMgY3JlYXRlZCwgYW4gXCJJTklUXCIgYWN0aW9uIGlzIGRpc3BhdGNoZWQgc28gdGhhdCBldmVyeVxuICAvLyByZWR1Y2VyIHJldHVybnMgdGhlaXIgaW5pdGlhbCBzdGF0ZS4gVGhpcyBlZmZlY3RpdmVseSBwb3B1bGF0ZXNcbiAgLy8gdGhlIGluaXRpYWwgc3RhdGUgdHJlZS5cblxuXG4gIGRpc3BhdGNoKHtcbiAgICB0eXBlOiBBY3Rpb25UeXBlcy5JTklUXG4gIH0pO1xuICByZXR1cm4gX3JlZjIgPSB7XG4gICAgZGlzcGF0Y2g6IGRpc3BhdGNoLFxuICAgIHN1YnNjcmliZTogc3Vic2NyaWJlLFxuICAgIGdldFN0YXRlOiBnZXRTdGF0ZSxcbiAgICByZXBsYWNlUmVkdWNlcjogcmVwbGFjZVJlZHVjZXJcbiAgfSwgX3JlZjJbJCRvYnNlcnZhYmxlXSA9IG9ic2VydmFibGUsIF9yZWYyO1xufVxuXG4vKipcbiAqIFByaW50cyBhIHdhcm5pbmcgaW4gdGhlIGNvbnNvbGUgaWYgaXQgZXhpc3RzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXNzYWdlIFRoZSB3YXJuaW5nIG1lc3NhZ2UuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gd2FybmluZyhtZXNzYWdlKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY29uc29sZS5lcnJvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gIH1cbiAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG5cblxuICB0cnkge1xuICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgaWYgeW91IGVuYWJsZVxuICAgIC8vIFwiYnJlYWsgb24gYWxsIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIGNvbnNvbGUsXG4gICAgLy8gaXQgd291bGQgcGF1c2UgdGhlIGV4ZWN1dGlvbiBhdCB0aGlzIGxpbmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICB9IGNhdGNoIChlKSB7fSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWVtcHR5XG5cbn1cblxuZnVuY3Rpb24gZ2V0VW5leHBlY3RlZFN0YXRlU2hhcGVXYXJuaW5nTWVzc2FnZShpbnB1dFN0YXRlLCByZWR1Y2VycywgYWN0aW9uLCB1bmV4cGVjdGVkS2V5Q2FjaGUpIHtcbiAgdmFyIHJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMocmVkdWNlcnMpO1xuICB2YXIgYXJndW1lbnROYW1lID0gYWN0aW9uICYmIGFjdGlvbi50eXBlID09PSBBY3Rpb25UeXBlcy5JTklUID8gJ3ByZWxvYWRlZFN0YXRlIGFyZ3VtZW50IHBhc3NlZCB0byBjcmVhdGVTdG9yZScgOiAncHJldmlvdXMgc3RhdGUgcmVjZWl2ZWQgYnkgdGhlIHJlZHVjZXInO1xuXG4gIGlmIChyZWR1Y2VyS2V5cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gJ1N0b3JlIGRvZXMgbm90IGhhdmUgYSB2YWxpZCByZWR1Y2VyLiBNYWtlIHN1cmUgdGhlIGFyZ3VtZW50IHBhc3NlZCAnICsgJ3RvIGNvbWJpbmVSZWR1Y2VycyBpcyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSByZWR1Y2Vycy4nO1xuICB9XG5cbiAgaWYgKCFpc1BsYWluT2JqZWN0KGlucHV0U3RhdGUpKSB7XG4gICAgcmV0dXJuIFwiVGhlIFwiICsgYXJndW1lbnROYW1lICsgXCIgaGFzIHVuZXhwZWN0ZWQgdHlwZSBvZiBcXFwiXCIgKyBraW5kT2YoaW5wdXRTdGF0ZSkgKyBcIlxcXCIuIEV4cGVjdGVkIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgXCIgKyAoXCJrZXlzOiBcXFwiXCIgKyByZWR1Y2VyS2V5cy5qb2luKCdcIiwgXCInKSArIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHZhciB1bmV4cGVjdGVkS2V5cyA9IE9iamVjdC5rZXlzKGlucHV0U3RhdGUpLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuICFyZWR1Y2Vycy5oYXNPd25Qcm9wZXJ0eShrZXkpICYmICF1bmV4cGVjdGVkS2V5Q2FjaGVba2V5XTtcbiAgfSk7XG4gIHVuZXhwZWN0ZWRLZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHVuZXhwZWN0ZWRLZXlDYWNoZVtrZXldID0gdHJ1ZTtcbiAgfSk7XG4gIGlmIChhY3Rpb24gJiYgYWN0aW9uLnR5cGUgPT09IEFjdGlvblR5cGVzLlJFUExBQ0UpIHJldHVybjtcblxuICBpZiAodW5leHBlY3RlZEtleXMubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiBcIlVuZXhwZWN0ZWQgXCIgKyAodW5leHBlY3RlZEtleXMubGVuZ3RoID4gMSA/ICdrZXlzJyA6ICdrZXknKSArIFwiIFwiICsgKFwiXFxcIlwiICsgdW5leHBlY3RlZEtleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCIgZm91bmQgaW4gXCIgKyBhcmd1bWVudE5hbWUgKyBcIi4gXCIpICsgXCJFeHBlY3RlZCB0byBmaW5kIG9uZSBvZiB0aGUga25vd24gcmVkdWNlciBrZXlzIGluc3RlYWQ6IFwiICsgKFwiXFxcIlwiICsgcmVkdWNlcktleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCIuIFVuZXhwZWN0ZWQga2V5cyB3aWxsIGJlIGlnbm9yZWQuXCIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFzc2VydFJlZHVjZXJTaGFwZShyZWR1Y2Vycykge1xuICBPYmplY3Qua2V5cyhyZWR1Y2VycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHJlZHVjZXIgPSByZWR1Y2Vyc1trZXldO1xuICAgIHZhciBpbml0aWFsU3RhdGUgPSByZWR1Y2VyKHVuZGVmaW5lZCwge1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuSU5JVFxuICAgIH0pO1xuXG4gICAgaWYgKHR5cGVvZiBpbml0aWFsU3RhdGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxMikgOiBcIlRoZSBzbGljZSByZWR1Y2VyIGZvciBrZXkgXFxcIlwiICsga2V5ICsgXCJcXFwiIHJldHVybmVkIHVuZGVmaW5lZCBkdXJpbmcgaW5pdGlhbGl6YXRpb24uIFwiICsgXCJJZiB0aGUgc3RhdGUgcGFzc2VkIHRvIHRoZSByZWR1Y2VyIGlzIHVuZGVmaW5lZCwgeW91IG11c3QgXCIgKyBcImV4cGxpY2l0bHkgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLiBUaGUgaW5pdGlhbCBzdGF0ZSBtYXkgXCIgKyBcIm5vdCBiZSB1bmRlZmluZWQuIElmIHlvdSBkb24ndCB3YW50IHRvIHNldCBhIHZhbHVlIGZvciB0aGlzIHJlZHVjZXIsIFwiICsgXCJ5b3UgY2FuIHVzZSBudWxsIGluc3RlYWQgb2YgdW5kZWZpbmVkLlwiKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHJlZHVjZXIodW5kZWZpbmVkLCB7XG4gICAgICB0eXBlOiBBY3Rpb25UeXBlcy5QUk9CRV9VTktOT1dOX0FDVElPTigpXG4gICAgfSkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxMykgOiBcIlRoZSBzbGljZSByZWR1Y2VyIGZvciBrZXkgXFxcIlwiICsga2V5ICsgXCJcXFwiIHJldHVybmVkIHVuZGVmaW5lZCB3aGVuIHByb2JlZCB3aXRoIGEgcmFuZG9tIHR5cGUuIFwiICsgKFwiRG9uJ3QgdHJ5IHRvIGhhbmRsZSAnXCIgKyBBY3Rpb25UeXBlcy5JTklUICsgXCInIG9yIG90aGVyIGFjdGlvbnMgaW4gXFxcInJlZHV4LypcXFwiIFwiKSArIFwibmFtZXNwYWNlLiBUaGV5IGFyZSBjb25zaWRlcmVkIHByaXZhdGUuIEluc3RlYWQsIHlvdSBtdXN0IHJldHVybiB0aGUgXCIgKyBcImN1cnJlbnQgc3RhdGUgZm9yIGFueSB1bmtub3duIGFjdGlvbnMsIHVubGVzcyBpdCBpcyB1bmRlZmluZWQsIFwiICsgXCJpbiB3aGljaCBjYXNlIHlvdSBtdXN0IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZSwgcmVnYXJkbGVzcyBvZiB0aGUgXCIgKyBcImFjdGlvbiB0eXBlLiBUaGUgaW5pdGlhbCBzdGF0ZSBtYXkgbm90IGJlIHVuZGVmaW5lZCwgYnV0IGNhbiBiZSBudWxsLlwiKTtcbiAgICB9XG4gIH0pO1xufVxuLyoqXG4gKiBUdXJucyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBkaWZmZXJlbnQgcmVkdWNlciBmdW5jdGlvbnMsIGludG8gYSBzaW5nbGVcbiAqIHJlZHVjZXIgZnVuY3Rpb24uIEl0IHdpbGwgY2FsbCBldmVyeSBjaGlsZCByZWR1Y2VyLCBhbmQgZ2F0aGVyIHRoZWlyIHJlc3VsdHNcbiAqIGludG8gYSBzaW5nbGUgc3RhdGUgb2JqZWN0LCB3aG9zZSBrZXlzIGNvcnJlc3BvbmQgdG8gdGhlIGtleXMgb2YgdGhlIHBhc3NlZFxuICogcmVkdWNlciBmdW5jdGlvbnMuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHJlZHVjZXJzIEFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgY29ycmVzcG9uZCB0byBkaWZmZXJlbnRcbiAqIHJlZHVjZXIgZnVuY3Rpb25zIHRoYXQgbmVlZCB0byBiZSBjb21iaW5lZCBpbnRvIG9uZS4gT25lIGhhbmR5IHdheSB0byBvYnRhaW5cbiAqIGl0IGlzIHRvIHVzZSBFUzYgYGltcG9ydCAqIGFzIHJlZHVjZXJzYCBzeW50YXguIFRoZSByZWR1Y2VycyBtYXkgbmV2ZXIgcmV0dXJuXG4gKiB1bmRlZmluZWQgZm9yIGFueSBhY3Rpb24uIEluc3RlYWQsIHRoZXkgc2hvdWxkIHJldHVybiB0aGVpciBpbml0aWFsIHN0YXRlXG4gKiBpZiB0aGUgc3RhdGUgcGFzc2VkIHRvIHRoZW0gd2FzIHVuZGVmaW5lZCwgYW5kIHRoZSBjdXJyZW50IHN0YXRlIGZvciBhbnlcbiAqIHVucmVjb2duaXplZCBhY3Rpb24uXG4gKlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHJlZHVjZXIgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGV2ZXJ5IHJlZHVjZXIgaW5zaWRlIHRoZVxuICogcGFzc2VkIG9iamVjdCwgYW5kIGJ1aWxkcyBhIHN0YXRlIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNoYXBlLlxuICovXG5cblxuZnVuY3Rpb24gY29tYmluZVJlZHVjZXJzKHJlZHVjZXJzKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGZpbmFsUmVkdWNlcnMgPSB7fTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHJlZHVjZXJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IHJlZHVjZXJLZXlzW2ldO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICh0eXBlb2YgcmVkdWNlcnNba2V5XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgd2FybmluZyhcIk5vIHJlZHVjZXIgcHJvdmlkZWQgZm9yIGtleSBcXFwiXCIgKyBrZXkgKyBcIlxcXCJcIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByZWR1Y2Vyc1trZXldID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBmaW5hbFJlZHVjZXJzW2tleV0gPSByZWR1Y2Vyc1trZXldO1xuICAgIH1cbiAgfVxuXG4gIHZhciBmaW5hbFJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMoZmluYWxSZWR1Y2Vycyk7IC8vIFRoaXMgaXMgdXNlZCB0byBtYWtlIHN1cmUgd2UgZG9uJ3Qgd2FybiBhYm91dCB0aGUgc2FtZVxuICAvLyBrZXlzIG11bHRpcGxlIHRpbWVzLlxuXG4gIHZhciB1bmV4cGVjdGVkS2V5Q2FjaGU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB1bmV4cGVjdGVkS2V5Q2FjaGUgPSB7fTtcbiAgfVxuXG4gIHZhciBzaGFwZUFzc2VydGlvbkVycm9yO1xuXG4gIHRyeSB7XG4gICAgYXNzZXJ0UmVkdWNlclNoYXBlKGZpbmFsUmVkdWNlcnMpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgc2hhcGVBc3NlcnRpb25FcnJvciA9IGU7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gY29tYmluYXRpb24oc3RhdGUsIGFjdGlvbikge1xuICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBzdGF0ZSA9IHt9O1xuICAgIH1cblxuICAgIGlmIChzaGFwZUFzc2VydGlvbkVycm9yKSB7XG4gICAgICB0aHJvdyBzaGFwZUFzc2VydGlvbkVycm9yO1xuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB2YXIgd2FybmluZ01lc3NhZ2UgPSBnZXRVbmV4cGVjdGVkU3RhdGVTaGFwZVdhcm5pbmdNZXNzYWdlKHN0YXRlLCBmaW5hbFJlZHVjZXJzLCBhY3Rpb24sIHVuZXhwZWN0ZWRLZXlDYWNoZSk7XG5cbiAgICAgIGlmICh3YXJuaW5nTWVzc2FnZSkge1xuICAgICAgICB3YXJuaW5nKHdhcm5pbmdNZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgaGFzQ2hhbmdlZCA9IGZhbHNlO1xuICAgIHZhciBuZXh0U3RhdGUgPSB7fTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBmaW5hbFJlZHVjZXJLZXlzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9rZXkgPSBmaW5hbFJlZHVjZXJLZXlzW19pXTtcbiAgICAgIHZhciByZWR1Y2VyID0gZmluYWxSZWR1Y2Vyc1tfa2V5XTtcbiAgICAgIHZhciBwcmV2aW91c1N0YXRlRm9yS2V5ID0gc3RhdGVbX2tleV07XG4gICAgICB2YXIgbmV4dFN0YXRlRm9yS2V5ID0gcmVkdWNlcihwcmV2aW91c1N0YXRlRm9yS2V5LCBhY3Rpb24pO1xuXG4gICAgICBpZiAodHlwZW9mIG5leHRTdGF0ZUZvcktleSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdmFyIGFjdGlvblR5cGUgPSBhY3Rpb24gJiYgYWN0aW9uLnR5cGU7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDE0KSA6IFwiV2hlbiBjYWxsZWQgd2l0aCBhbiBhY3Rpb24gb2YgdHlwZSBcIiArIChhY3Rpb25UeXBlID8gXCJcXFwiXCIgKyBTdHJpbmcoYWN0aW9uVHlwZSkgKyBcIlxcXCJcIiA6ICcodW5rbm93biB0eXBlKScpICsgXCIsIHRoZSBzbGljZSByZWR1Y2VyIGZvciBrZXkgXFxcIlwiICsgX2tleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQuIFwiICsgXCJUbyBpZ25vcmUgYW4gYWN0aW9uLCB5b3UgbXVzdCBleHBsaWNpdGx5IHJldHVybiB0aGUgcHJldmlvdXMgc3RhdGUuIFwiICsgXCJJZiB5b3Ugd2FudCB0aGlzIHJlZHVjZXIgdG8gaG9sZCBubyB2YWx1ZSwgeW91IGNhbiByZXR1cm4gbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC5cIik7XG4gICAgICB9XG5cbiAgICAgIG5leHRTdGF0ZVtfa2V5XSA9IG5leHRTdGF0ZUZvcktleTtcbiAgICAgIGhhc0NoYW5nZWQgPSBoYXNDaGFuZ2VkIHx8IG5leHRTdGF0ZUZvcktleSAhPT0gcHJldmlvdXNTdGF0ZUZvcktleTtcbiAgICB9XG5cbiAgICBoYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZCB8fCBmaW5hbFJlZHVjZXJLZXlzLmxlbmd0aCAhPT0gT2JqZWN0LmtleXMoc3RhdGUpLmxlbmd0aDtcbiAgICByZXR1cm4gaGFzQ2hhbmdlZCA/IG5leHRTdGF0ZSA6IHN0YXRlO1xuICB9O1xufVxuXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9yLCBkaXNwYXRjaCkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkaXNwYXRjaChhY3Rpb25DcmVhdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9O1xufVxuLyoqXG4gKiBUdXJucyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBhY3Rpb24gY3JlYXRvcnMsIGludG8gYW4gb2JqZWN0IHdpdGggdGhlXG4gKiBzYW1lIGtleXMsIGJ1dCB3aXRoIGV2ZXJ5IGZ1bmN0aW9uIHdyYXBwZWQgaW50byBhIGBkaXNwYXRjaGAgY2FsbCBzbyB0aGV5XG4gKiBtYXkgYmUgaW52b2tlZCBkaXJlY3RseS4gVGhpcyBpcyBqdXN0IGEgY29udmVuaWVuY2UgbWV0aG9kLCBhcyB5b3UgY2FuIGNhbGxcbiAqIGBzdG9yZS5kaXNwYXRjaChNeUFjdGlvbkNyZWF0b3JzLmRvU29tZXRoaW5nKCkpYCB5b3Vyc2VsZiBqdXN0IGZpbmUuXG4gKlxuICogRm9yIGNvbnZlbmllbmNlLCB5b3UgY2FuIGFsc28gcGFzcyBhbiBhY3Rpb24gY3JlYXRvciBhcyB0aGUgZmlyc3QgYXJndW1lbnQsXG4gKiBhbmQgZ2V0IGEgZGlzcGF0Y2ggd3JhcHBlZCBmdW5jdGlvbiBpbiByZXR1cm4uXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R9IGFjdGlvbkNyZWF0b3JzIEFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgYXJlIGFjdGlvblxuICogY3JlYXRvciBmdW5jdGlvbnMuIE9uZSBoYW5keSB3YXkgdG8gb2J0YWluIGl0IGlzIHRvIHVzZSBFUzYgYGltcG9ydCAqIGFzYFxuICogc3ludGF4LiBZb3UgbWF5IGFsc28gcGFzcyBhIHNpbmdsZSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBkaXNwYXRjaCBUaGUgYGRpc3BhdGNoYCBmdW5jdGlvbiBhdmFpbGFibGUgb24geW91ciBSZWR1eFxuICogc3RvcmUuXG4gKlxuICogQHJldHVybnMge0Z1bmN0aW9ufE9iamVjdH0gVGhlIG9iamVjdCBtaW1pY2tpbmcgdGhlIG9yaWdpbmFsIG9iamVjdCwgYnV0IHdpdGhcbiAqIGV2ZXJ5IGFjdGlvbiBjcmVhdG9yIHdyYXBwZWQgaW50byB0aGUgYGRpc3BhdGNoYCBjYWxsLiBJZiB5b3UgcGFzc2VkIGFcbiAqIGZ1bmN0aW9uIGFzIGBhY3Rpb25DcmVhdG9yc2AsIHRoZSByZXR1cm4gdmFsdWUgd2lsbCBhbHNvIGJlIGEgc2luZ2xlXG4gKiBmdW5jdGlvbi5cbiAqL1xuXG5cbmZ1bmN0aW9uIGJpbmRBY3Rpb25DcmVhdG9ycyhhY3Rpb25DcmVhdG9ycywgZGlzcGF0Y2gpIHtcbiAgaWYgKHR5cGVvZiBhY3Rpb25DcmVhdG9ycyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9ycywgZGlzcGF0Y2gpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBhY3Rpb25DcmVhdG9ycyAhPT0gJ29iamVjdCcgfHwgYWN0aW9uQ3JlYXRvcnMgPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxNikgOiBcImJpbmRBY3Rpb25DcmVhdG9ycyBleHBlY3RlZCBhbiBvYmplY3Qgb3IgYSBmdW5jdGlvbiwgYnV0IGluc3RlYWQgcmVjZWl2ZWQ6ICdcIiArIGtpbmRPZihhY3Rpb25DcmVhdG9ycykgKyBcIicuIFwiICsgXCJEaWQgeW91IHdyaXRlIFxcXCJpbXBvcnQgQWN0aW9uQ3JlYXRvcnMgZnJvbVxcXCIgaW5zdGVhZCBvZiBcXFwiaW1wb3J0ICogYXMgQWN0aW9uQ3JlYXRvcnMgZnJvbVxcXCI/XCIpO1xuICB9XG5cbiAgdmFyIGJvdW5kQWN0aW9uQ3JlYXRvcnMgPSB7fTtcblxuICBmb3IgKHZhciBrZXkgaW4gYWN0aW9uQ3JlYXRvcnMpIHtcbiAgICB2YXIgYWN0aW9uQ3JlYXRvciA9IGFjdGlvbkNyZWF0b3JzW2tleV07XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbkNyZWF0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGJvdW5kQWN0aW9uQ3JlYXRvcnNba2V5XSA9IGJpbmRBY3Rpb25DcmVhdG9yKGFjdGlvbkNyZWF0b3IsIGRpc3BhdGNoKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYm91bmRBY3Rpb25DcmVhdG9ycztcbn1cblxuLyoqXG4gKiBDb21wb3NlcyBzaW5nbGUtYXJndW1lbnQgZnVuY3Rpb25zIGZyb20gcmlnaHQgdG8gbGVmdC4gVGhlIHJpZ2h0bW9zdFxuICogZnVuY3Rpb24gY2FuIHRha2UgbXVsdGlwbGUgYXJndW1lbnRzIGFzIGl0IHByb3ZpZGVzIHRoZSBzaWduYXR1cmUgZm9yXG4gKiB0aGUgcmVzdWx0aW5nIGNvbXBvc2l0ZSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0gey4uLkZ1bmN0aW9ufSBmdW5jcyBUaGUgZnVuY3Rpb25zIHRvIGNvbXBvc2UuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgZnVuY3Rpb24gb2J0YWluZWQgYnkgY29tcG9zaW5nIHRoZSBhcmd1bWVudCBmdW5jdGlvbnNcbiAqIGZyb20gcmlnaHQgdG8gbGVmdC4gRm9yIGV4YW1wbGUsIGNvbXBvc2UoZiwgZywgaCkgaXMgaWRlbnRpY2FsIHRvIGRvaW5nXG4gKiAoLi4uYXJncykgPT4gZihnKGgoLi4uYXJncykpKS5cbiAqL1xuZnVuY3Rpb24gY29tcG9zZSgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGZ1bmNzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGZ1bmNzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgICByZXR1cm4gYXJnO1xuICAgIH07XG4gIH1cblxuICBpZiAoZnVuY3MubGVuZ3RoID09PSAxKSB7XG4gICAgcmV0dXJuIGZ1bmNzWzBdO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmNzLnJlZHVjZShmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gYShiLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKSk7XG4gICAgfTtcbiAgfSk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHN0b3JlIGVuaGFuY2VyIHRoYXQgYXBwbGllcyBtaWRkbGV3YXJlIHRvIHRoZSBkaXNwYXRjaCBtZXRob2RcbiAqIG9mIHRoZSBSZWR1eCBzdG9yZS4gVGhpcyBpcyBoYW5keSBmb3IgYSB2YXJpZXR5IG9mIHRhc2tzLCBzdWNoIGFzIGV4cHJlc3NpbmdcbiAqIGFzeW5jaHJvbm91cyBhY3Rpb25zIGluIGEgY29uY2lzZSBtYW5uZXIsIG9yIGxvZ2dpbmcgZXZlcnkgYWN0aW9uIHBheWxvYWQuXG4gKlxuICogU2VlIGByZWR1eC10aHVua2AgcGFja2FnZSBhcyBhbiBleGFtcGxlIG9mIHRoZSBSZWR1eCBtaWRkbGV3YXJlLlxuICpcbiAqIEJlY2F1c2UgbWlkZGxld2FyZSBpcyBwb3RlbnRpYWxseSBhc3luY2hyb25vdXMsIHRoaXMgc2hvdWxkIGJlIHRoZSBmaXJzdFxuICogc3RvcmUgZW5oYW5jZXIgaW4gdGhlIGNvbXBvc2l0aW9uIGNoYWluLlxuICpcbiAqIE5vdGUgdGhhdCBlYWNoIG1pZGRsZXdhcmUgd2lsbCBiZSBnaXZlbiB0aGUgYGRpc3BhdGNoYCBhbmQgYGdldFN0YXRlYCBmdW5jdGlvbnNcbiAqIGFzIG5hbWVkIGFyZ3VtZW50cy5cbiAqXG4gKiBAcGFyYW0gey4uLkZ1bmN0aW9ufSBtaWRkbGV3YXJlcyBUaGUgbWlkZGxld2FyZSBjaGFpbiB0byBiZSBhcHBsaWVkLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHN0b3JlIGVuaGFuY2VyIGFwcGx5aW5nIHRoZSBtaWRkbGV3YXJlLlxuICovXG5cbmZ1bmN0aW9uIGFwcGx5TWlkZGxld2FyZSgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIG1pZGRsZXdhcmVzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIG1pZGRsZXdhcmVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChjcmVhdGVTdG9yZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZS5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG5cbiAgICAgIHZhciBfZGlzcGF0Y2ggPSBmdW5jdGlvbiBkaXNwYXRjaCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMTUpIDogJ0Rpc3BhdGNoaW5nIHdoaWxlIGNvbnN0cnVjdGluZyB5b3VyIG1pZGRsZXdhcmUgaXMgbm90IGFsbG93ZWQuICcgKyAnT3RoZXIgbWlkZGxld2FyZSB3b3VsZCBub3QgYmUgYXBwbGllZCB0byB0aGlzIGRpc3BhdGNoLicpO1xuICAgICAgfTtcblxuICAgICAgdmFyIG1pZGRsZXdhcmVBUEkgPSB7XG4gICAgICAgIGdldFN0YXRlOiBzdG9yZS5nZXRTdGF0ZSxcbiAgICAgICAgZGlzcGF0Y2g6IGZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICAgICAgICAgIHJldHVybiBfZGlzcGF0Y2guYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIGNoYWluID0gbWlkZGxld2FyZXMubWFwKGZ1bmN0aW9uIChtaWRkbGV3YXJlKSB7XG4gICAgICAgIHJldHVybiBtaWRkbGV3YXJlKG1pZGRsZXdhcmVBUEkpO1xuICAgICAgfSk7XG4gICAgICBfZGlzcGF0Y2ggPSBjb21wb3NlLmFwcGx5KHZvaWQgMCwgY2hhaW4pKHN0b3JlLmRpc3BhdGNoKTtcbiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHN0b3JlKSwge30sIHtcbiAgICAgICAgZGlzcGF0Y2g6IF9kaXNwYXRjaFxuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcbn1cblxuLypcbiAqIFRoaXMgaXMgYSBkdW1teSBmdW5jdGlvbiB0byBjaGVjayBpZiB0aGUgZnVuY3Rpb24gbmFtZSBoYXMgYmVlbiBhbHRlcmVkIGJ5IG1pbmlmaWNhdGlvbi5cbiAqIElmIHRoZSBmdW5jdGlvbiBoYXMgYmVlbiBtaW5pZmllZCBhbmQgTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJywgd2FybiB0aGUgdXNlci5cbiAqL1xuXG5mdW5jdGlvbiBpc0NydXNoZWQoKSB7fVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgaXNDcnVzaGVkLm5hbWUgPT09ICdzdHJpbmcnICYmIGlzQ3J1c2hlZC5uYW1lICE9PSAnaXNDcnVzaGVkJykge1xuICB3YXJuaW5nKCdZb3UgYXJlIGN1cnJlbnRseSB1c2luZyBtaW5pZmllZCBjb2RlIG91dHNpZGUgb2YgTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiLiAnICsgJ1RoaXMgbWVhbnMgdGhhdCB5b3UgYXJlIHJ1bm5pbmcgYSBzbG93ZXIgZGV2ZWxvcG1lbnQgYnVpbGQgb2YgUmVkdXguICcgKyAnWW91IGNhbiB1c2UgbG9vc2UtZW52aWZ5IChodHRwczovL2dpdGh1Yi5jb20vemVydG9zaC9sb29zZS1lbnZpZnkpIGZvciBicm93c2VyaWZ5ICcgKyAnb3Igc2V0dGluZyBtb2RlIHRvIHByb2R1Y3Rpb24gaW4gd2VicGFjayAoaHR0cHM6Ly93ZWJwYWNrLmpzLm9yZy9jb25jZXB0cy9tb2RlLykgJyArICd0byBlbnN1cmUgeW91IGhhdmUgdGhlIGNvcnJlY3QgY29kZSBmb3IgeW91ciBwcm9kdWN0aW9uIGJ1aWxkLicpO1xufVxuXG5leHBvcnQgeyBBY3Rpb25UeXBlcyBhcyBfX0RPX05PVF9VU0VfX0FjdGlvblR5cGVzLCBhcHBseU1pZGRsZXdhcmUsIGJpbmRBY3Rpb25DcmVhdG9ycywgY29tYmluZVJlZHVjZXJzLCBjb21wb3NlLCBjcmVhdGVTdG9yZSB9O1xuIiwiaW1wb3J0IHsgQUNUSU9OUywgU0NSRUVOUywgaW5pdGlhbEdhbWVTdGF0ZSwgR0FNRV9TVEFUVVMsIENFTExfVFlQRVMsIENFTExfU1RBVEVTLCBNQVhfRVJST1JTIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XHJcblxyXG5leHBvcnQgY29uc3QgY2hhbmdlR2FtZVN0YXRlID0gKHN0YXRlID0ge30sIGFjdGlvbikgPT5cclxue1xyXG4gICAgc3dpdGNoIChhY3Rpb24udHlwZSlcclxuICAgIHtcclxuICAgICAgICBjYXNlIEFDVElPTlMuSU5JVElBVEVfTkVXX0xFVkVMOlxyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgc2NyZWVuOiBTQ1JFRU5TLkdBTUVfU0NSRUVOLFxyXG4gICAgICAgICAgICAgICAgZ2FtZUxldmVsOiBhY3Rpb24uZ2FtZURhdGEubGV2ZWwsXHJcbiAgICAgICAgICAgICAgICBtYXhMZXZlbDogYWN0aW9uLmdhbWVEYXRhLm1heExldmVsLFxyXG4gICAgICAgICAgICAgICAgc2NvcmU6IGFjdGlvbi5nYW1lRGF0YS5zY29yZSxcclxuICAgICAgICAgICAgICAgIGxldmVsRGF0YTogYWN0aW9uLmdhbWVEYXRhLmxldmVsRGF0YSxcclxuICAgICAgICAgICAgICAgIGdhbWU6IHtcclxuICAgICAgICAgICAgICAgICAgICB0aW1lOiBhY3Rpb24uZ2FtZURhdGEudGltZSxcclxuICAgICAgICAgICAgICAgICAgICBsYXN0R3Vlc3NUaW1lc3RhbXA6IGFjdGlvbi5nYW1lRGF0YS5sYXN0R3Vlc3NUaW1lc3RhbXAsXHJcbiAgICAgICAgICAgICAgICAgICAgYWxsQ2VsbHM6IGFjdGlvbi5nYW1lRGF0YS5hbGxDZWxscyxcclxuICAgICAgICAgICAgICAgICAgICBnYW1lU3RhdHVzOiBhY3Rpb24uZ2FtZURhdGEuZ2FtZVN0YXR1cyxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvcnM6IGFjdGlvbi5nYW1lRGF0YS5lcnJvcnMsXHJcbiAgICAgICAgICAgICAgICAgICAgY2FuY2VsbGVkOiBhY3Rpb24uZ2FtZURhdGEuY2FuY2VsbGVkLFxyXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrZWRJbmRleDogYWN0aW9uLmdhbWVEYXRhLmNsaWNrZWRJbmRleCxcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgY2FzZSBBQ1RJT05TLlNIT1dfQkVHSU5fU0NSRUVOOlxyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgLi4uaW5pdGlhbEdhbWVTdGF0ZSxcclxuICAgICAgICAgICAgICAgIGdhbWVMZXZlbDogYWN0aW9uLmxldmVsLFxyXG4gICAgICAgICAgICAgICAgbWF4TGV2ZWw6IGFjdGlvbi5tYXhMZXZlbCxcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICBjYXNlIEFDVElPTlMuU1RBUlRfTEVWRUw6XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAuLi5zdGF0ZSxcclxuICAgICAgICAgICAgICAgIGdhbWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAuLi5zdGF0ZS5nYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgIGdhbWVTdGF0dXM6IEdBTUVfU1RBVFVTLlNUQVRVU19SVU5OSU5HX01FTU9SSVpFXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgY2FzZSBBQ1RJT05TLlNXSVRDSF9QUkVfUkVNRU1CRVJfUEhBU0U6XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAuLi5zdGF0ZSxcclxuICAgICAgICAgICAgICAgIGdhbWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAuLi5zdGF0ZS5nYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgIGdhbWVTdGF0dXM6IEdBTUVfU1RBVFVTLlNUQVRVU19QUkVfUkVNRU1CRVIsXHJcbiAgICAgICAgICAgICAgICAgICAgdGltZTogYWN0aW9uLnRpbWUsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgY2FzZSBBQ1RJT05TLlNXSVRDSF9SRU1FTUJFUl9QSEFTRTpcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIC4uLnN0YXRlLFxyXG4gICAgICAgICAgICAgICAgZ2FtZToge1xyXG4gICAgICAgICAgICAgICAgICAgIC4uLnN0YXRlLmdhbWUsXHJcbiAgICAgICAgICAgICAgICAgICAgZ2FtZVN0YXR1czogR0FNRV9TVEFUVVMuU1RBVFVTX1JVTk5JTkdfUkVNRU1CRVIsXHJcbiAgICAgICAgICAgICAgICAgICAgdGltZTogYWN0aW9uLnRpbWUsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgY2FzZSBBQ1RJT05TLlRJTUVfVElDS19TRUNPTkRTOlxyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgLi4uc3RhdGUsXHJcbiAgICAgICAgICAgICAgICBnYW1lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgLi4uc3RhdGUuZ2FtZSxcclxuICAgICAgICAgICAgICAgICAgICB0aW1lOiBhY3Rpb24udGltZVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICBjYXNlIEFDVElPTlMuQ0VMTF9HVUVTU0VEOlxyXG4gICAgICAgICAgICB2YXIgbmV3Q2VsbHMgPSBbXTtcclxuICAgICAgICAgICAgdmFyIGNlbGxEYXRhID0gc3RhdGUuZ2FtZS5hbGxDZWxscztcclxuICAgICAgICAgICAgZm9yICh2YXIgbiA9IDA7IG4gPCBjZWxsRGF0YS5sZW5ndGg7IG4rKylcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmV3Q2VsbHNbbl0gPSBbXTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2VsbERhdGFbbl0ubGVuZ3RoOyBpKyspXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3Q2VsbHNbbl1baV0gPSBjZWxsRGF0YVtuXVtpXTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFjdGlvbi5pbmRleCA9PSBjZWxsRGF0YVtuXVtpXS5jZWxsSW5kZXggJiYgY2VsbERhdGFbbl1baV0uY2VsbFR5cGUgPT0gQ0VMTF9UWVBFUy5GVUxMICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxEYXRhW25dW2ldLmNlbGxTdGF0ZSA9PSBDRUxMX1NUQVRFUy5DTE9TRUQpXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdDZWxsc1tuXVtpXS5jZWxsU3RhdGUgPSBDRUxMX1NUQVRFUy5PUEVORUQ7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgLi4uc3RhdGUsXHJcbiAgICAgICAgICAgICAgICBzY29yZTogc3RhdGUuc2NvcmUgKyBhY3Rpb24uZ3Vlc3NTY29yZSxcclxuICAgICAgICAgICAgICAgIGdhbWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAuLi5zdGF0ZS5nYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgIGFsbENlbGxzOiBuZXdDZWxscyxcclxuICAgICAgICAgICAgICAgICAgICBjbGlja2VkSW5kZXg6IGFjdGlvbi5pbmRleCxcclxuICAgICAgICAgICAgICAgICAgICBsYXN0R3Vlc3NUaW1lc3RhbXA6IHN0YXRlLmdhbWUudGltZSxcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgY2FzZSBBQ1RJT05TLkVORF9HQU1FX0xFVkVMX1VQOlxyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgLi4uc3RhdGUsXHJcbiAgICAgICAgICAgICAgICBnYW1lTGV2ZWw6IGFjdGlvbi5sZXZlbCxcclxuICAgICAgICAgICAgICAgIG1heExldmVsOiBhY3Rpb24ubWF4TGV2ZWwsXHJcbiAgICAgICAgICAgICAgICBnYW1lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgLi4uc3RhdGUuZ2FtZSxcclxuICAgICAgICAgICAgICAgICAgICBnYW1lU3RhdHVzOiBHQU1FX1NUQVRVUy5TVEFUVVNfRU5ERURfTEVWRUxfVVAsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgY2FzZSBBQ1RJT05TLkNFTExfRVJST1I6XHJcbiAgICAgICAgICAgIHZhciBuZXdDZWxscyA9IFtdO1xyXG4gICAgICAgICAgICB2YXIgY2VsbHNEYXRhID0gc3RhdGUuZ2FtZS5hbGxDZWxscztcclxuICAgICAgICAgICAgZm9yICh2YXIgbiA9IDA7IG4gPCBjZWxsc0RhdGEubGVuZ3RoOyBuKyspXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG5ld0NlbGxzW25dID0gW107XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNlbGxzRGF0YVtuXS5sZW5ndGg7IGkrKylcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBuZXdDZWxsc1tuXVtpXSA9IGNlbGxzRGF0YVtuXVtpXTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFjdGlvbi5pbmRleCA9PSBjZWxsc0RhdGFbbl1baV0uY2VsbEluZGV4ICYmIGNlbGxzRGF0YVtuXVtpXS5jZWxsVHlwZSA9PSBDRUxMX1RZUEVTLkVNUFRZICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxzRGF0YVtuXVtpXS5jZWxsU3RhdGUgPT0gQ0VMTF9TVEFURVMuQ0xPU0VEKVxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2VsbHNbbl1baV0uY2VsbFN0YXRlID0gQ0VMTF9TVEFURVMuT1BFTkVEO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIC4uLnN0YXRlLFxyXG4gICAgICAgICAgICAgICAgZ2FtZToge1xyXG4gICAgICAgICAgICAgICAgICAgIC4uLnN0YXRlLmdhbWUsXHJcbiAgICAgICAgICAgICAgICAgICAgYWxsQ2VsbHM6IG5ld0NlbGxzLFxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yczogYWN0aW9uLmVycm9ycyxcclxuICAgICAgICAgICAgICAgICAgICBjbGlja2VkSW5kZXg6IGFjdGlvbi5pbmRleCxcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuXHJcblxyXG4gICAgICAgIGNhc2UgQUNUSU9OUy5FTkRfR0FNRV9FUlJPUjpcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIC4uLnN0YXRlLFxyXG4gICAgICAgICAgICAgICAgZ2FtZUxldmVsOiBhY3Rpb24ubGV2ZWwsXHJcbiAgICAgICAgICAgICAgICBnYW1lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgLi4uc3RhdGUuZ2FtZSxcclxuICAgICAgICAgICAgICAgICAgICBnYW1lU3RhdHVzOiBHQU1FX1NUQVRVUy5TVEFUVVNfRU5ERURfRVJST1IsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgY2FzZSBBQ1RJT05TLkVORF9HQU1FX1RJTUVPVVQ6XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAuLi5zdGF0ZSxcclxuICAgICAgICAgICAgICAgIGdhbWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAuLi5zdGF0ZS5nYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgIGdhbWVTdGF0dXM6IEdBTUVfU1RBVFVTLlNUQVRVU19FTkRFRF9USU1FT1VULFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIGNhc2UgQUNUSU9OUy5FTkRfR0FNRV9DQU5DRUw6XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAuLi5zdGF0ZSxcclxuICAgICAgICAgICAgICAgIGdhbWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAuLi5zdGF0ZS5nYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgIGNhbmNlbGxlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICBjYXNlIEFDVElPTlMuU0hPV19MRVZFTF9NRU5VOlxyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgLi4uc3RhdGUsXHJcbiAgICAgICAgICAgICAgICBsZXZlbE1lbnVPbjogdHJ1ZSxcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICBjYXNlIEFDVElPTlMuSElERV9MRVZFTF9NRU5VOlxyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgLi4uc3RhdGUsXHJcbiAgICAgICAgICAgICAgICBsZXZlbE1lbnVPbjogZmFsc2UsXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgY2FzZSBBQ1RJT05TLkNIQU5HRV9MRVZFTDpcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIC4uLnN0YXRlLFxyXG4gICAgICAgICAgICAgICAgZ2FtZUxldmVsOiBhY3Rpb24ubGV2ZWwsXHJcbiAgICAgICAgICAgICAgICBsZXZlbE1lbnVPbjogZmFsc2UsXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgY2FzZSBBQ1RJT05TLlNIT1dfV0lOX1NDUkVFTjpcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIC4uLnN0YXRlLFxyXG4gICAgICAgICAgICAgICAgc2NyZWVuOiBTQ1JFRU5TLldJTl9TQ1JFRU4sXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgY2FzZSBBQ1RJT05TLkVORF9HQU1FX0xBU1RfTEVWRUw6XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAuLi5zdGF0ZSxcclxuICAgICAgICAgICAgICAgIGdhbWVMZXZlbDogYWN0aW9uLmxldmVsLFxyXG4gICAgICAgICAgICAgICAgZ2FtZToge1xyXG4gICAgICAgICAgICAgICAgICAgIC4uLnN0YXRlLmdhbWUsXHJcbiAgICAgICAgICAgICAgICAgICAgZ2FtZVN0YXR1czogR0FNRV9TVEFUVVMuU1RBVFVTX0VOREVEX0xBU1RfTEVWRUwsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgY2FzZSBBQ1RJT05TLlVQREFURV9NQVhfTEVWRUw6XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAuLi5zdGF0ZSxcclxuICAgICAgICAgICAgICAgIG1heExldmVsOiBhY3Rpb24ubWF4TGV2ZWwsXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgY2FzZSBBQ1RJT05TLlVQREFURV9MRVZFTDpcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIC4uLnN0YXRlLFxyXG4gICAgICAgICAgICAgICAgZ2FtZUxldmVsOiBhY3Rpb24ubGV2ZWwsXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IGNyZWF0ZVN0b3JlLCBjb21iaW5lUmVkdWNlcnMgfSBmcm9tIFwicmVkdXhcIjtcclxuaW1wb3J0IHsgaW5pdGlhbEdhbWVTdGF0ZSB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xyXG5pbXBvcnQgeyBjaGFuZ2VTY3JlZW4sIGNoYW5nZUdhbWVTdGF0ZSB9IGZyb20gXCIuL3JlZHVjZXJzXCI7XHJcblxyXG5leHBvcnQgY29uc3QgR0FNRV9TVE9SRSA9IGNyZWF0ZVN0b3JlKGNoYW5nZUdhbWVTdGF0ZSwgaW5pdGlhbEdhbWVTdGF0ZSk7IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2xvY2sgXHJcbntcclxuICAgIGNvbnN0cnVjdG9yKG1pbGxpc2Vjb25kcylcclxuICAgIHtcclxuICAgICAgICB0aGlzLmludGVydmFsID0gbWlsbGlzZWNvbmRzO1xyXG4gICAgICAgIHRoaXMuY2FsbGJhY2tzID0gW107XHJcbiAgICAgICAgdGhpcy5oYW5kbGU7XHJcbiAgICAgICAgdGhpcy5jdXJyZW50VGltZU1TO1xyXG4gICAgICAgIHRoaXMub25JbnRlcnZhbCA9IHRoaXMub25JbnRlcnZhbC5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZENhbGxiYWNrcyhjYWxsYmFja3NBcnIpXHJcbiAgICB7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGNhbGxiYWNrc0Fyci5sZW5ndGg7IGkrKylcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLnB1c2goY2FsbGJhY2tzQXJyW2ldKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlQ2FsbGJhY2tzKClcclxuICAgIHtcclxuICAgICAgICB0aGlzLmNhbGxiYWNrcyA9IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXJ0KClcclxuICAgIHtcclxuICAgICAgICB0aGlzLnJlc2V0KCk7XHJcbiAgICAgICAgdGhpcy5oYW5kbGUgPSBzZXRJbnRlcnZhbCh0aGlzLm9uSW50ZXJ2YWwsIHRoaXMuaW50ZXJ2YWwpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc2V0KClcclxuICAgIHtcclxuICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaGFuZGxlKTtcclxuICAgICAgICB0aGlzLmhhbmRsZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5jdXJyZW50VGltZU1TID0gMDtcclxuICAgIH1cclxuXHJcbiAgICBwYXVzZSgpXHJcbiAgICB7XHJcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmhhbmRsZSk7XHJcbiAgICAgICAgdGhpcy5oYW5kbGUgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc3VtZSgpXHJcbiAgICB7XHJcbiAgICAgICAgdGhpcy5oYW5kbGUgPSBzZXRJbnRlcnZhbCh0aGlzLm9uSW50ZXJ2YWwsIHRoaXMuaW50ZXJ2YWwpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uSW50ZXJ2YWwoKVxyXG4gICAge1xyXG4gICAgICAgIHRoaXMuY3VycmVudFRpbWVNUyArPSB0aGlzLmludGVydmFsO1xyXG5cclxuICAgICAgICB2YXIgdGltZVN0cmluZyA9IHRoaXMuZ2V0Q3VycmVudFRpbWVTdHJpbmcoKTtcclxuICAgICAgICB0aGlzLnByaW50VGltZVN0cih0aW1lU3RyaW5nKTtcclxuXHJcbiAgICAgICAgaWYodGhpcy5jYWxsYmFja3MubGVuZ3RoID4gMClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCB0aGlzLmNhbGxiYWNrcy5sZW5ndGg7IGkrKylcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jYWxsYmFja3NbaV0odGhpcy5nZXRDdXJyZW50VGltZVNlYygpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBnZXRDdXJyZW50VGltZVNlYygpXHJcbiAgICB7XHJcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodGhpcy5jdXJyZW50VGltZU1TLzEwMDApO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEN1cnJlbnRUaW1lU3RyaW5nKClcclxuICAgIHtcclxuICAgICAgICB2YXIgdGltZU9iaiA9IHRoaXMuZ2V0VGltZU9iaigpO1xyXG4gICAgICAgIHZhciB0aW1lU3RyID0gdGhpcy50aW1lVG9TdHIodGltZU9iai5ob3VycywgdGltZU9iai5taW51dGVzLCB0aW1lT2JqLnNlY29uZHMpO1xyXG4gICAgICAgIHJldHVybih0aW1lU3RyKVxyXG4gICAgfVxyXG5cclxuICAgIGdldFRpbWVPYmooKVxyXG4gICAge1xyXG4gICAgICAgIGxldCBzZWNvbmRzRWxhcHNlZCA9IE1hdGgucm91bmQodGhpcy5jdXJyZW50VGltZU1TLzEwMDApO1xyXG5cclxuICAgICAgICBsZXQgbWludXRlc0VsYXBzZWQgPSBNYXRoLmZsb29yKHNlY29uZHNFbGFwc2VkLzYwKTtcclxuICAgICAgICBsZXQgaG91cnMgPSBNYXRoLmZsb29yKHNlY29uZHNFbGFwc2VkLzM2MDApO1xyXG4gICAgICAgIGxldCBzZWNvbmRzID0gc2Vjb25kc0VsYXBzZWQgJSA2MDtcclxuICAgICAgICBsZXQgbWludXRlcyA9IG1pbnV0ZXNFbGFwc2VkICUgNjA7XHJcblxyXG4gICAgICAgIHJldHVybiAoe2hvdXJzOiBob3VycywgbWludXRlczogbWludXRlcywgc2Vjb25kczogc2Vjb25kc30pO1xyXG4gICAgfVxyXG5cclxuICAgIHRpbWVUb1N0cihob3VycywgbWludXRlcywgc2Vjb25kcylcclxuICAgIHtcclxuICAgICAgICBsZXQgaG91cnNTdHIgPSAoaG91cnMgPj0gMCAmJiBob3VycyA8IDEwKSA/IFwiMFwiICsgaG91cnMgOiBob3VycztcclxuICAgICAgICBsZXQgIG1pbnV0ZXNTdHIgPSAobWludXRlcyA+PSAwICYmIG1pbnV0ZXMgPCAxMCkgPyBcIjBcIiArIG1pbnV0ZXMgOiBtaW51dGVzO1xyXG4gICAgICAgIGxldCAgc2Vjb25kc1N0ciA9IChzZWNvbmRzID49IDAgJiYgc2Vjb25kcyA8IDEwKSA/IFwiMFwiICsgc2Vjb25kcyA6IHNlY29uZHM7XHJcblxyXG4gICAgICAgIHJldHVybiBob3Vyc1N0ciArIFwiOlwiICsgbWludXRlc1N0ciArIFwiOlwiICsgc2Vjb25kc1N0cjtcclxuICAgIH1cclxuXHJcbiAgICBwcmludFRpbWVTdHIodGltZVN0cilcclxuICAgIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRpbWVTdHIpO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGZ1bmN0aW9uIFByb2dyZXNzQmFyQmxvY2tUeXBlKF9wYXJlbnRDb250YWluZXIsIGluaXRpYWxTaXplKVxyXG57XHJcbiAgICB0aGlzLnBhcmVudENvbnRhaW5lciA9IF9wYXJlbnRDb250YWluZXI7XHJcblxyXG4gICAgdGhpcy5yZXNpemUgPSB0aGlzLnJlc2l6ZS5iaW5kKHRoaXMpXHJcblxyXG4gICAgdGhpcy5jdXJyZW50UHJvZ3Jlc3NQZXJjZW50ID0gMDtcclxuICAgIHRoaXMuQUNUSVZFID0gZmFsc2U7XHJcblxyXG4gICAgdGhpcy5jb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgdGhpcy5jb250YWluZXIuY2xhc3NOYW1lID0gXCJwcm9ncmVzc0JhckJUX0NDU1NcIjtcclxuXHJcbiAgICB0aGlzLnVwZGF0ZVByb2dyZXNzQmFyID0gdGhpcy51cGRhdGVQcm9ncmVzc0Jhci5iaW5kKHRoaXMpO1xyXG5cclxuICAgIHRoaXMuYmxvY2tJbml0QXJyYXkgPSBuZXcgQXJyYXkoKTtcclxuICAgIHRoaXMuYmxvY2tJbml0QXJyYXlbMF0gPSBuZXcgQXJyYXkoKTtcclxuXHJcbiAgICB0aGlzLmJsb2NrSW5pdEFycmF5WzBdWzBdID0gIFwiKi0tKioqLS0qLS0qKi0tKi0qKi0qXCI7XHJcbiAgICB0aGlzLmJsb2NrSW5pdEFycmF5WzBdWzFdID0gIFwiLSotKi0qLS0qLS0qLSotKi0tKioqXCI7XHJcbiAgICB0aGlzLmJsb2NrSW5pdEFycmF5WzBdWzJdID0gIFwiLSotKi0tLS0qKi0qLSotLSotKi0qXCI7XHJcbiAgICB0aGlzLmJsb2NrSW5pdEFycmF5WzBdWzNdID0gIFwiKi0tKi0qLS0qLS0qKi0tKi0qLSotXCI7XHJcbiAgICB0aGlzLmJsb2NrSW5pdEFycmF5WzBdWzRdID0gIFwiKi0qLS0qLS0qLS0qLSotLS0tLSoqXCI7XHJcbiAgICB0aGlzLmJsb2NrSW5pdEFycmF5WzBdWzVdID0gIFwiKi0qLSoqKi0qLS0qLSotLSoqLS0qXCI7XHJcbiAgICB0aGlzLmJsb2NrSW5pdEFycmF5WzBdWzZdID0gIFwiKi0qLS0qLSotLSotKi0qLS0qLS0qXCI7XHJcbiAgICB0aGlzLmJsb2NrSW5pdEFycmF5WzBdWzddID0gIFwiKi0qLSotLSoqKi0tKi0qLS0qLS0tXCI7XHJcbiAgICB0aGlzLmJsb2NrSW5pdEFycmF5WzBdWzhdID0gIFwiKi0qLSotLSoqKi0tKi0qKiotKioqXCI7XHJcbiAgICB0aGlzLmJsb2NrSW5pdEFycmF5WzBdWzldID0gIFwiKi0qLSotLSoqLS0qLS0qKiotLSotXCI7XHJcbiAgICB0aGlzLmJsb2NrSW5pdEFycmF5WzBdWzEwXSA9IFwiKi0qLSotLS0qLS0qKi0tLSotLSoqXCI7XHJcbiAgICB0aGlzLmJsb2NrSW5pdEFycmF5WzBdWzExXSA9IFwiKi0tLSotLS0qLS0qKi0qKi0tLSotXCI7XHJcblxyXG4gICAgdGhpcy5jb29yZGluYXRlc0FycmF5ID0gbmV3IEFycmF5KCk7XHJcbiAgICB0aGlzLmJsb2NrQXJyYXkgPSBuZXcgQXJyYXkoKTtcclxuXHJcbiAgICB0aGlzLmhvcml6b250YWxCbG9ja3NDb3VudCA9IDA7XHJcbiAgICB0aGlzLnZlcnRpY2FsQmxvY2tzQ291bnQgPSAwO1xyXG5cclxuICAgIHRoaXMudG9nZ2xlVmlzaWJpbGl0eShmYWxzZSk7XHJcblxyXG4gICAgdGhpcy5zZXREaW1lbnNpb25zKGluaXRpYWxTaXplKTtcclxuICAgIHRoaXMuY3JlYXRlQmxvY2tzKCk7XHJcblxyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgdGhpcy5yZXNpemUuYmluZCh0aGlzKSk7XHJcbn1cclxuXHJcblByb2dyZXNzQmFyQmxvY2tUeXBlLnByb3RvdHlwZS5zZXRaSW5kZXggPSBmdW5jdGlvbih2YWx1ZSlcclxue1xyXG4gICAgdGhpcy5jb250YWluZXIuc3R5bGUuekluZGV4ID0gdmFsdWU7XHJcbn1cclxuXHJcblByb2dyZXNzQmFyQmxvY2tUeXBlLnByb3RvdHlwZS5yZXNpemUgPSBmdW5jdGlvbiAoZSlcclxue1xyXG4gICAgdGhpcy5zZXREaW1lbnNpb25zKCk7XHJcbiAgICB0aGlzLnJlc2l6ZVJlYWwoKTtcclxufVxyXG5cclxuUHJvZ3Jlc3NCYXJCbG9ja1R5cGUucHJvdG90eXBlLnNldERpbWVuc2lvbnMgPSBmdW5jdGlvbiAoaW5pdGlhbFNpemUpXHJcbntcclxuICAgIHZhciBzaXplID0gdGhpcy5wYXJlbnRDb250YWluZXIuY2xpZW50V2lkdGggKiBQcm9ncmVzc0JhckJsb2NrVHlwZS5TSVpFX0NPRUY7XHJcbiAgICB2YXIgZ2FwID0gTWF0aC5yb3VuZCh0aGlzLnBhcmVudENvbnRhaW5lci5jbGllbnRXaWR0aCAqIFByb2dyZXNzQmFyQmxvY2tUeXBlLkdBUF9DT0VGKTtcclxuXHJcbiAgICBpZihpbml0aWFsU2l6ZSlcclxuICAgIHtcclxuICAgICAgICBzaXplID0gaW5pdGlhbFNpemUud2lkdGgqIFByb2dyZXNzQmFyQmxvY2tUeXBlLlNJWkVfQ09FRjtcclxuICAgICAgICBnYXAgPSBNYXRoLnJvdW5kKGluaXRpYWxTaXplLndpZHRoICogUHJvZ3Jlc3NCYXJCbG9ja1R5cGUuR0FQX0NPRUYpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKHNpemUgPiB3aW5kb3cuaW5uZXJIZWlnaHQqMC4wNSlcclxuICAgIHtcclxuICAgICAgICBzaXplID0gd2luZG93LmlubmVySGVpZ2h0KjAuMDU7XHJcbiAgICAgICAgZ2FwID0gIHdpbmRvdy5pbm5lckhlaWdodCowLjAxO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuYmxvY2tXaWR0aCA9IHNpemU7XHJcbiAgICB0aGlzLmJsb2NrSGVpZ2h0ID0gdGhpcy5ibG9ja1dpZHRoO1xyXG4gICAgdGhpcy5nYXAgPSBnYXA7XHJcblxyXG4gICAgdGhpcy5jb250YWluZXIuc3R5bGUud2lkdGggPSB0aGlzLmJsb2NrSW5pdEFycmF5WzBdWzBdLmxlbmd0aCoodGhpcy5ibG9ja1dpZHRoICsgdGhpcy5nYXApICsgXCJweFwiXHJcbiAgICB0aGlzLmNvbnRhaW5lci5zdHlsZS5oZWlnaHQgPSB0aGlzLmJsb2NrSW5pdEFycmF5WzBdLmxlbmd0aCoodGhpcy5ibG9ja1dpZHRoICsgdGhpcy5nYXApICsgXCJweFwiO1xyXG5cclxuICAgIHRoaXMuZ2V0QmxvY2tDb29yZGluYXRlcygpO1xyXG59XHJcblxyXG5Qcm9ncmVzc0JhckJsb2NrVHlwZS5wcm90b3R5cGUucmVzaXplUmVhbCA9IGZ1bmN0aW9uICgpXHJcbntcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ibG9ja0FycmF5Lmxlbmd0aDsgaSsrKVxyXG4gICAge1xyXG4gICAgICAgIHRoaXMuYmxvY2tBcnJheVtpXS5yZXNpemUodGhpcy5ibG9ja1dpZHRoLCB0aGlzLmJsb2NrSGVpZ2h0KTtcclxuICAgICAgICB0aGlzLmJsb2NrQXJyYXlbaV0uc2V0UG9zWFkodGhpcy5jb29yZGluYXRlc0FycmF5W2ldLmxlZnQsIHRoaXMuY29vcmRpbmF0ZXNBcnJheVtpXS50b3ApO1xyXG4gICAgfVxyXG59XHJcblxyXG5Qcm9ncmVzc0JhckJsb2NrVHlwZS5wcm90b3R5cGUuZ2V0QmxvY2tDb29yZGluYXRlcyA9IGZ1bmN0aW9uICgpXHJcbntcclxuICAgIHRoaXMuaG9yaXpvbnRhbEJsb2Nrc0NvdW50ID0gdGhpcy5ibG9ja0luaXRBcnJheVswXVswXS5sZW5ndGg7XHJcbiAgICB0aGlzLnZlcnRpY2FsQmxvY2tzQ291bnQgPSB0aGlzLmJsb2NrSW5pdEFycmF5WzBdLmxlbmd0aDtcclxuXHJcbiAgICB0aGlzLmNvb3JkaW5hdGVzQXJyYXkgPSBuZXcgQXJyYXkoKTtcclxuICAgIGZvciAodmFyIHJvdyA9IHRoaXMuYmxvY2tJbml0QXJyYXlbMF0ubGVuZ3RoIC0gMTsgcm93ID49IDA7IHJvdy0tKVxyXG4gICAge1xyXG4gICAgICAgIGZvciAodmFyIGNvbHVtbiA9IDA7IGNvbHVtbiA8IHRoaXMuYmxvY2tJbml0QXJyYXlbMF1bMF0ubGVuZ3RoOyBjb2x1bW4rKylcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmJsb2NrSW5pdEFycmF5WzBdW3Jvd10uY2hhckF0KGNvbHVtbikgPT09IFwiKlwiKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB2YXIgY29vcmRYID0gY29sdW1uICogKHRoaXMuYmxvY2tXaWR0aCArIHRoaXMuZ2FwKTtcclxuICAgICAgICAgICAgICAgIHZhciBjb29yZFkgPSByb3cgKiAodGhpcy5ibG9ja0hlaWdodCArIHRoaXMuZ2FwKTtcclxuICAgICAgICAgICAgICAgIHZhciBjb29yZHNYWSA9IHsgbGVmdDogY29vcmRYLCB0b3A6IGNvb3JkWSB9O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb29yZGluYXRlc0FycmF5LnB1c2goY29vcmRzWFkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5Qcm9ncmVzc0JhckJsb2NrVHlwZS5wcm90b3R5cGUuY3JlYXRlQmxvY2tzID0gZnVuY3Rpb24gKClcclxue1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmNvb3JkaW5hdGVzQXJyYXkubGVuZ3RoOyBpKyspXHJcbiAgICB7XHJcbiAgICAgICAgdmFyIHRlbXBCbG9jayA9IG5ldyBQcm9ncmVzc0JhckJsb2NrKHRoaXMuY29vcmRpbmF0ZXNBcnJheVtpXS5sZWZ0LCB0aGlzLmNvb3JkaW5hdGVzQXJyYXlbaV0udG9wLCB0aGlzLmJsb2NrV2lkdGgsIHRoaXMuYmxvY2tIZWlnaHQsIHRoaXMuY29udGFpbmVyKTtcclxuICAgICAgICB0aGlzLmJsb2NrQXJyYXkucHVzaCh0ZW1wQmxvY2spO1xyXG4gICAgfVxyXG59XHJcblxyXG5Qcm9ncmVzc0JhckJsb2NrVHlwZS5wcm90b3R5cGUuYWRkVG9Db250YWluZXIgPSBmdW5jdGlvbiAoKVxyXG57XHJcbiAgICBpZiAoIXRoaXMuY29udGFpbmVyLnBhcmVudE5vZGUpXHJcbiAgICB7XHJcbiAgICAgICAgdGhpcy5wYXJlbnRDb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5jb250YWluZXIpO1xyXG4gICAgfVxyXG59XHJcblxyXG5Qcm9ncmVzc0JhckJsb2NrVHlwZS5wcm90b3R5cGUucmVtb3ZlRnJvbUNvbnRhaW5lciA9IGZ1bmN0aW9uICgpXHJcbntcclxuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIHRoaXMucmVzaXplKTtcclxuICAgIGlmICh0aGlzLmNvbnRhaW5lci5wYXJlbnROb2RlKVxyXG4gICAge1xyXG4gICAgICAgIHRoaXMucGFyZW50Q29udGFpbmVyLnJlbW92ZUNoaWxkKHRoaXMuY29udGFpbmVyKTtcclxuICAgIH1cclxufVxyXG5cclxuUHJvZ3Jlc3NCYXJCbG9ja1R5cGUucHJvdG90eXBlLnVwZGF0ZVByb2dyZXNzQmFyID0gZnVuY3Rpb24gKF9wcm9ncmVzcylcclxue1xyXG4gICAgdGhpcy5jdXJyZW50UHJvZ3Jlc3NQZXJjZW50ID0gX3Byb2dyZXNzO1xyXG4gICAgdmFyIGFjdGl2ZUJsb2Nrc0NvdW50ID0gTWF0aC5mbG9vcih0aGlzLmJsb2NrQXJyYXkubGVuZ3RoICogKHRoaXMuY3VycmVudFByb2dyZXNzUGVyY2VudCAvIDEwMCkpO1xyXG5cclxuICAgIHRoaXMudXBkYXRlQWN0aXZlQmxvY2tzQ291bnQoYWN0aXZlQmxvY2tzQ291bnQpO1xyXG59XHJcblxyXG5Qcm9ncmVzc0JhckJsb2NrVHlwZS5wcm90b3R5cGUudXBkYXRlQWN0aXZlQmxvY2tzQ291bnQgPSBmdW5jdGlvbiAoX2FjdGl2ZUJsb2Nrc0NvdW50KVxyXG57XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuYmxvY2tBcnJheS5sZW5ndGg7IGkrKylcclxuICAgIHtcclxuICAgICAgICBpZiAoaSA8IF9hY3RpdmVCbG9ja3NDb3VudClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRoaXMuYmxvY2tBcnJheVtpXS5zZXRBY3RpdmUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5ibG9ja0FycmF5W2ldLnNldEluYWN0aXZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5Qcm9ncmVzc0JhckJsb2NrVHlwZS5wcm90b3R5cGUuc2V0WFlQb3MgPSBmdW5jdGlvbiAoX2xlZnQsIF90b3ApXHJcbntcclxuICAgIHRoaXMuY29udGFpbmVyLnN0eWxlLmxlZnQgPSBfbGVmdCArIFwicHhcIjtcclxuICAgIHRoaXMuY29udGFpbmVyLnN0eWxlLnRvcCA9IF90b3AgKyBcInB4XCI7XHJcbn1cclxuXHJcblByb2dyZXNzQmFyQmxvY2tUeXBlLnByb3RvdHlwZS50b2dnbGVWaXNpYmlsaXR5ID0gZnVuY3Rpb24gKF92aXNpYmxlKVxyXG57XHJcbiAgICBpZiAoX3Zpc2libGUpXHJcbiAgICB7XHJcbiAgICAgICAgdGhpcy5hZGRUb0NvbnRhaW5lcigpO1xyXG4gICAgICAgIHRoaXMuQUNUSVZFID0gdHJ1ZTtcclxuICAgIH1cclxuICAgIGVsc2VcclxuICAgIHtcclxuICAgICAgICB0aGlzLnJlbW92ZUZyb21Db250YWluZXIoKTtcclxuICAgICAgICB0aGlzLkFDVElWRSA9IGZhbHNlO1xyXG4gICAgfVxyXG59XHJcblxyXG5Qcm9ncmVzc0JhckJsb2NrVHlwZS5wcm90b3R5cGUuZ2V0V2lkdGggPSBmdW5jdGlvbiAoKVxyXG57XHJcbiAgICByZXR1cm4gdGhpcy5ob3Jpem9udGFsQmxvY2tzQ291bnQgKiAodGhpcy5ibG9ja1dpZHRoICsgdGhpcy5nYXApO1xyXG59XHJcblxyXG5Qcm9ncmVzc0JhckJsb2NrVHlwZS5wcm90b3R5cGUuZ2V0SGVpZ2h0ID0gZnVuY3Rpb24gKClcclxue1xyXG4gICAgcmV0dXJuIHRoaXMudmVydGljYWxCbG9ja3NDb3VudCAqICh0aGlzLmJsb2NrSGVpZ2h0ICsgdGhpcy5nYXApO1xyXG59XHJcblxyXG5Qcm9ncmVzc0JhckJsb2NrVHlwZS5TSVpFX0NPRUYgPSAwLjAzNTtcclxuUHJvZ3Jlc3NCYXJCbG9ja1R5cGUuR0FQX0NPRUYgPSAwO1xyXG5cclxuZnVuY3Rpb24gUHJvZ3Jlc3NCYXJCbG9jayhfbGVmdCwgX3RvcCwgX3dpZHRoLCBfaGVpZ2h0LCBfcGFyZW50Q29udGFpbmVyKSB7XHJcbiAgICB0aGlzLnBhcmVudENvbnRhaW5lciA9IF9wYXJlbnRDb250YWluZXI7XHJcblxyXG4gICAgdGhpcy5ibG9jayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICB0aGlzLmJsb2NrLmNsYXNzTmFtZSA9IFwicHJvZ3Jlc3NCYXJCVF9CbG9ja19JbmFjdGl2ZV9DQ1NTXCI7XHJcblxyXG4gICAgdGhpcy5zZXRQb3NYWShfbGVmdCwgX3RvcCk7XHJcbiAgICB0aGlzLnJlc2l6ZShfd2lkdGgsIF9oZWlnaHQpO1xyXG5cclxuICAgIHRoaXMuYWRkVG9Db250YWluZXIoKTtcclxufVxyXG5cclxuUHJvZ3Jlc3NCYXJCbG9jay5wcm90b3R5cGUuc2V0QWN0aXZlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdGhpcy5ibG9jay5jbGFzc05hbWUgPSBcInByb2dyZXNzQmFyQlRfQmxvY2tfQWN0aXZlX0NDU1NcIjtcclxufVxyXG5cclxuUHJvZ3Jlc3NCYXJCbG9jay5wcm90b3R5cGUuc2V0SW5hY3RpdmUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB0aGlzLmJsb2NrLmNsYXNzTmFtZSA9IFwicHJvZ3Jlc3NCYXJCVF9CbG9ja19JbmFjdGl2ZV9DQ1NTXCI7XHJcbn1cclxuXHJcblByb2dyZXNzQmFyQmxvY2sucHJvdG90eXBlLmFkZFRvQ29udGFpbmVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdGhpcy5wYXJlbnRDb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5ibG9jayk7XHJcbn1cclxuXHJcblByb2dyZXNzQmFyQmxvY2sucHJvdG90eXBlLnNldFBvc1hZID0gZnVuY3Rpb24gKF9sZWZ0LCBfdG9wKSB7XHJcbiAgICB0aGlzLmJsb2NrLnN0eWxlLmxlZnQgPSBfbGVmdCArIFwicHhcIjtcclxuICAgIHRoaXMuYmxvY2suc3R5bGUudG9wID0gX3RvcCArIFwicHhcIjtcclxufVxyXG5cclxuUHJvZ3Jlc3NCYXJCbG9jay5wcm90b3R5cGUucmVzaXplID0gZnVuY3Rpb24gKF93aWR0aCwgX2hlaWdodCkge1xyXG4gICAgdGhpcy5ibG9jay5zdHlsZS53aWR0aCA9IF93aWR0aCArIFwicHhcIjtcclxuICAgIHRoaXMuYmxvY2suc3R5bGUuaGVpZ2h0ID0gX2hlaWdodCArIFwicHhcIjtcclxufVxyXG4iLCJpbXBvcnQge1Byb2dyZXNzQmFyQmxvY2tUeXBlfSBmcm9tIFwiLi9wcm9ncmVzc19iYXJfYmxvY2tfdHlwZVwiO1xyXG5cclxuZnVuY3Rpb24gUHJvZ3Jlc3NCYXIocGFyZW50Q29udGFpbmVyKVxyXG57XHJcbiAgICB0aGlzLnBhcmVudENvbnRhaW5lciA9IHBhcmVudENvbnRhaW5lcjtcclxuICAgIHRoaXMuY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIHRoaXMucGFyZW50Q29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuY29udGFpbmVyKTtcclxuXHJcbiAgICB0aGlzLm91dGVyRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIHRoaXMub3V0ZXJEaXYuY2xhc3NOYW1lID0gXCJwcmVsb2FkZXJPdXRlclwiO1xyXG5cclxuICAgIHRoaXMuaW5uZXJEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgdGhpcy5pbm5lckRpdi5jbGFzc05hbWUgPSBcInByZWxvYWRlcklubmVyXCI7XHJcblxyXG4gICAgdGhpcy5vdXRlckRpdi5hcHBlbmRDaGlsZCh0aGlzLmlubmVyRGl2KTtcclxuXHJcbiAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLm91dGVyRGl2KTtcclxufVxyXG5cclxuUHJvZ3Jlc3NCYXIucHJvdG90eXBlLnVwZGF0ZVByb2dyZXNzQmFyID0gZnVuY3Rpb24gKHByb2dyZXNzKVxyXG57XHJcbiAgICB0aGlzLmlubmVyRGl2LnN0eWxlLndpZHRoID0gcHJvZ3Jlc3MgKyBcIiVcIjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIFByZWxvYWRlckJsb2NrKHBhcmVudENvbnRhaW5lciwgaW5pdGlhbFNpemUsIG9uQ2xpY2tlZENhbGxiYWNrKVxyXG57XHJcbiAgICB0aGlzLnBhcmVudENvbnRhaW5lciA9IHBhcmVudENvbnRhaW5lcjtcclxuICAgIGlmIChvbkNsaWNrZWRDYWxsYmFjaylcclxuICAgIHtcclxuICAgICAgICB0aGlzLm9uQ2xpY2tlZENhbGxiYWNrID0gb25DbGlja2VkQ2FsbGJhY2s7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5yZW1vdmVQcmVsb2FkZXIgPSB0aGlzLnJlbW92ZVByZWxvYWRlci5iaW5kKHRoaXMpO1xyXG5cclxuICAgIHRoaXMucmVtb3ZlUHJlbG9hZGVyQW5kQ2xlYXJBbGwgPSB0aGlzLnJlbW92ZVByZWxvYWRlckFuZENsZWFyQWxsLmJpbmQodGhpcyk7XHJcblxyXG4gICAgdGhpcy51cGRhdGVQcmVsb2FkZXIgPSB0aGlzLnVwZGF0ZVByZWxvYWRlci5iaW5kKHRoaXMpO1xyXG5cclxuICAgIHRoaXMuY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIHRoaXMuY29udGFpbmVyLmNsYXNzTmFtZSA9IFwicHJlbG9hZGVyQmxvY2tCa2dcIjtcclxuXHJcbiAgICB0aGlzLnByb2dyZXNzQmFyQmxvY2sgPSBuZXcgUHJvZ3Jlc3NCYXJCbG9ja1R5cGUodGhpcy5jb250YWluZXIsIGluaXRpYWxTaXplKTtcclxuICAgIHRoaXMucHJvZ3Jlc3NCYXJCbG9jay5hZGRUb0NvbnRhaW5lcigpO1xyXG5cclxuICAgIHRoaXMuY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLm9uQ2xpY2tlZC5iaW5kKHRoaXMpKTtcclxuXHJcbiAgICB0aGlzLmxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIHRoaXMubGFiZWwuY2xhc3NOYW1lID0gXCJwcmVsb2FkZXJCbG9ja0xhYmVsXCI7XHJcblxyXG4gICAgdGhpcy5jb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5sYWJlbCk7XHJcblxyXG4gICAgdGhpcy5wcm9ncmVzc0JhciA9IG5ldyBQcm9ncmVzc0Jhcih0aGlzLmNvbnRhaW5lcik7XHJcblxyXG4gICAgdGhpcy51cGRhdGVQcmVsb2FkZXIoMCk7XHJcbn1cclxuXHJcblByZWxvYWRlckJsb2NrLnByb3RvdHlwZS5zZXRaSW5kZXggPSBmdW5jdGlvbiAoekluZGV4KVxyXG57XHJcbiAgICB0aGlzLmNvbnRhaW5lci5zdHlsZS56SW5kZXggPSB6SW5kZXg7XHJcbn1cclxuXHJcblByZWxvYWRlckJsb2NrLnByb3RvdHlwZS51cGRhdGVQcmVsb2FkZXIgPSBmdW5jdGlvbiAocHJvZ3Jlc3MpXHJcbntcclxuICAgIHZhciBwcm9ncmVzUm91bmRlZCA9IE1hdGgucm91bmQocHJvZ3Jlc3MpO1xyXG4gICAgdGhpcy5sYWJlbC5pbm5lclRleHQgPSBwcm9ncmVzUm91bmRlZCArIFwiJVwiO1xyXG4gICAgdGhpcy5wcm9ncmVzc0Jhci51cGRhdGVQcm9ncmVzc0Jhcihwcm9ncmVzcyk7XHJcbiAgICB0aGlzLnByb2dyZXNzQmFyQmxvY2sudXBkYXRlUHJvZ3Jlc3NCYXIocHJvZ3Jlc3MpO1xyXG59XHJcblxyXG5QcmVsb2FkZXJCbG9jay5wcm90b3R5cGUub25DbGlja2VkID0gZnVuY3Rpb24gKGUpXHJcbntcclxuICAgIGlmICh0aGlzLm9uQ2xpY2tlZENhbGxiYWNrKVxyXG4gICAge1xyXG4gICAgICAgIHRoaXMub25DbGlja2VkQ2FsbGJhY2soKTtcclxuICAgIH1cclxufVxyXG5cclxuUHJlbG9hZGVyQmxvY2sucHJvdG90eXBlLmFkZFRvQ29udGFpbmVyID0gZnVuY3Rpb24gKClcclxue1xyXG4gICAgaWYgKCF0aGlzLmNvbnRhaW5lci5wYXJlbnROb2RlKVxyXG4gICAge1xyXG4gICAgICAgIHRoaXMucGFyZW50Q29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuY29udGFpbmVyKTtcclxuICAgIH1cclxufVxyXG5cclxuUHJlbG9hZGVyQmxvY2sucHJvdG90eXBlLnJlbW92ZUZyb21Db250YWluZXIgPSBmdW5jdGlvbiAoKVxyXG57XHJcbiAgICB0aGlzLnBhcmVudENvbnRhaW5lci5yZW1vdmVDaGlsZCh0aGlzLmNvbnRhaW5lcik7XHJcbn1cclxuXHJcblByZWxvYWRlckJsb2NrLnByb3RvdHlwZS5yZXNldFByZWxvYWRlciA9IGZ1bmN0aW9uICgpXHJcbntcclxuICAgIHRoaXMubGFiZWwuaW5uZXJUZXh0ID0gMCArIFwiJVwiO1xyXG4gICAgdGhpcy5wcm9ncmVzc0Jhci51cGRhdGVQcm9ncmVzc0JhcigwKTtcclxuXHJcbn1cclxuXHJcblByZWxvYWRlckJsb2NrLnByb3RvdHlwZS5yZW1vdmVQcmVsb2FkZXIgPSBmdW5jdGlvbiAoKVxyXG57XHJcbiAgICB0aGlzLmNvbnRhaW5lci5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5vbkNsaWNrZWQpO1xyXG4gICAgdGhpcy5jb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCB0aGlzLnJlbW92ZVByZWxvYWRlckFuZENsZWFyQWxsKTtcclxuICAgIHRoaXMuY29udGFpbmVyLnN0eWxlLmFuaW1hdGlvbiA9IFwicHJlbG9hZGVyRmFkZU91dCAwLjVzIGZvcndhcmRzXCI7XHJcbn1cclxuXHJcblByZWxvYWRlckJsb2NrLnByb3RvdHlwZS5yZW1vdmVQcmVsb2FkZXJBbmRDbGVhckFsbCA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgdGhpcy5jb250YWluZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCB0aGlzLnJlbW92ZVByZWxvYWRlckFuZENsZWFyQWxsKTtcclxuICAgIHRoaXMucmVtb3ZlRnJvbUNvbnRhaW5lcigpO1xyXG59XHJcbiIsImV4cG9ydCBmdW5jdGlvbiBNdWx0aUxvYWRlcihvbkxvYWRlZENhbGxiYWNrLCBvblByb2dyZXNzQ2FsbGJhY2spICAgIFxyXG57IFxyXG4gICAgaWYob25Mb2FkZWRDYWxsYmFjaylcclxuICAgIHtcclxuICAgICAgICB0aGlzLm9uTG9hZGVkQ2FsbGJhY2sgPSBvbkxvYWRlZENhbGxiYWNrO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKG9uUHJvZ3Jlc3NDYWxsYmFjaylcclxuICAgIHtcclxuICAgICAgICB0aGlzLm9uUHJvZ3Jlc3NDYWxsYmFjayA9IG9uUHJvZ3Jlc3NDYWxsYmFjaztcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmxvYWRlclByb2dyZXNzID0gdGhpcy5sb2FkZXJQcm9ncmVzcy5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5wcm9jZWVkTG9hZGVkUmVzb3VyY2UgPSB0aGlzLnByb2NlZWRMb2FkZWRSZXNvdXJjZS5iaW5kKHRoaXMpO1xyXG5cclxuICAgIHRoaXMucmVzb3VyY2VzTG9hZGVkID0gMDtcclxuICAgIHRoaXMubG9hZGVycyA9IFtdO1xyXG4gICAgdGhpcy5yZXNwb25zZUFycmF5ID0gW107XHJcbn1cclxuXHJcbk11bHRpTG9hZGVyLnByb3RvdHlwZS5zZXRDYWxsYmFja3MgPSBmdW5jdGlvbihvbkxvYWRlZENhbGxiYWNrLCBvblByb2dyZXNzQ2FsbGJhY2spXHJcbntcclxuICAgIGlmKG9uTG9hZGVkQ2FsbGJhY2spXHJcbiAgICB7XHJcbiAgICAgICAgdGhpcy5vbkxvYWRlZENhbGxiYWNrID0gb25Mb2FkZWRDYWxsYmFjaztcclxuICAgIH1cclxuXHJcbiAgICBpZihvblByb2dyZXNzQ2FsbGJhY2spXHJcbiAgICB7XHJcbiAgICAgICAgdGhpcy5vblByb2dyZXNzQ2FsbGJhY2sgPSBvblByb2dyZXNzQ2FsbGJhY2s7XHJcbiAgICB9XHJcbn1cclxuXHJcbk11bHRpTG9hZGVyLnByb3RvdHlwZS5zZXREYXRhID0gZnVuY3Rpb24oZGF0YSlcclxue1xyXG4gICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgIHRoaXMucmVzb3VyY2VzTG9hZGVkID0gMDtcclxufVxyXG5cclxuTXVsdGlMb2FkZXIucHJvdG90eXBlLnN0YXJ0TG9hZGluZyA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgdGhpcy5sb2FkZXJzID0gW107XHJcbiAgICB0aGlzLnJlc3BvbnNlQXJyYXkgPSBbXTtcclxuXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuZGF0YS5sZW5ndGg7IGkrKylcclxuICAgIHtcclxuICAgICAgICB2YXIgeG1sSHR0cCA9IHRoaXMuZ2V0WG1sSHR0cFJlcXVlc3QoKTtcclxuXHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcIlRZUEU6IFwiICsgdHlwZW9mIHRoaXMuZGF0YVtpXSk7XHJcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmRhdGFbaV0gPT09IFwic3RyaW5nXCIpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB4bWxIdHRwLnBhdGggPSB0aGlzLmRhdGFbaV07XHJcbiAgICAgICAgICAgIHhtbEh0dHAubmFtZSA9IHRoaXMuZGF0YVtpXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5kYXRhW2ldLnBhdGgpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB4bWxIdHRwLnBhdGggPSB0aGlzLmRhdGFbaV0ucGF0aDtcclxuICAgICAgICAgICAgeG1sSHR0cC5uYW1lID0gdGhpcy5kYXRhW2ldLm5hbWU7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuZGF0YVtpXS5jdXN0b21EYXRhKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB4bWxIdHRwLmN1c3RvbURhdGEgPSB0aGlzLmRhdGFbaV0uY3VzdG9tRGF0YTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHhtbEh0dHAuaW5kZXggPSB0aGlzLmxvYWRlcnMubGVuZ3RoO1xyXG4gICAgICAgIHhtbEh0dHAuY3VycmVudFByb2dyZXNzID0gMDtcclxuXHJcbiAgICAgICAgeG1sSHR0cC5vcGVuKCdHRVQnLCB4bWxIdHRwLnBhdGgsIHRydWUpO1xyXG4gICAgICAgIHZhciByZXNwb25zZVR5cGUgPSBcImFycmF5YnVmZmVyXCI7XHJcbiAgICAgICAgdmFyIGV4dGVuc2lvbiA9IHhtbEh0dHAucGF0aC5zdWJzdHIoeG1sSHR0cC5wYXRoLmxlbmd0aCAtIDMsIDMpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHN3aXRjaChleHRlbnNpb24pXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBjYXNlIFwidHh0XCI6XHJcbiAgICAgICAgICAgICAgICByZXNwb25zZVR5cGUgPSBcInRleHRcIjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY2FzZSBcInNvblwiOlxyXG4gICAgICAgICAgICAgICAgcmVzcG9uc2VUeXBlID0gXCJ0ZXh0XCI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIGNhc2UgXCJjc3ZcIjpcclxuICAgICAgICAgICAgICAgIHJlc3BvbnNlVHlwZSA9IFwidGV4dFwiO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB4bWxIdHRwLnJlc3BvbnNlVHlwZSA9IHJlc3BvbnNlVHlwZTtcclxuXHJcbiAgICAgICAgeG1sSHR0cC5hZGRFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIiwgdGhpcy5sb2FkZXJQcm9ncmVzcyk7XHJcbiAgICAgICAgeG1sSHR0cC5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCB0aGlzLnByb2NlZWRMb2FkZWRSZXNvdXJjZSk7XHJcblxyXG4gICAgICAgIHRoaXMubG9hZGVycy5wdXNoKHhtbEh0dHApO1xyXG4gICAgfVxyXG5cclxuICAgIGZvciAodmFyIGwgPSAwOyBsIDwgdGhpcy5sb2FkZXJzLmxlbmd0aDsgbCsrKVxyXG4gICAge1xyXG4gICAgICAgIHRoaXMubG9hZGVyc1tsXS5zZW5kKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbk11bHRpTG9hZGVyLnByb3RvdHlwZS5sb2FkZXJQcm9ncmVzcyA9IGZ1bmN0aW9uKGUpXHJcbntcclxuICAgIGlmICghZS5sZW5ndGhDb21wdXRhYmxlKVxyXG4gICAge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBlLmN1cnJlbnRUYXJnZXQuY3VycmVudFByb2dyZXNzID0gZS5sb2FkZWQgLyBlLnRvdGFsO1xyXG4gICAgdmFyIGxvYWRpbmdQcm9ncmVzcyA9IDA7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubG9hZGVycy5sZW5ndGg7IGkrKylcclxuICAgIHtcclxuICAgICAgICBsb2FkaW5nUHJvZ3Jlc3MgKz0gdGhpcy5sb2FkZXJzW2ldLmN1cnJlbnRQcm9ncmVzcyAqIDEwMDtcclxuICAgIH1cclxuICAgIGxvYWRpbmdQcm9ncmVzcyAvPSB0aGlzLmxvYWRlcnMubGVuZ3RoO1xyXG5cclxuICAgIGlmICh0aGlzLm9uUHJvZ3Jlc3NDYWxsYmFjaylcclxuICAgIHtcclxuICAgICAgICB0aGlzLm9uUHJvZ3Jlc3NDYWxsYmFjayhsb2FkaW5nUHJvZ3Jlc3MpO1xyXG4gICAgfVxyXG59XHJcblxyXG5NdWx0aUxvYWRlci5wcm90b3R5cGUucHJvY2VlZExvYWRlZFJlc291cmNlID0gZnVuY3Rpb24oZSlcclxue1xyXG4gICAgdmFyIGJsb2IgPSBuZXcgQmxvYihbZS5jdXJyZW50VGFyZ2V0LnJlc3BvbnNlXSk7XHJcbiAgICB2YXIgYmxvYkxpbmsgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcclxuXHJcbiAgICB2YXIgcmVzcG9uc2VPYmogPSB7XHJcbiAgICAgICAgb2JqZWN0VVJMOiBibG9iTGluayxcclxuICAgICAgICBvYmplY3RCbG9iOiBibG9iLFxyXG4gICAgICAgIGRhdGE6IGUuY3VycmVudFRhcmdldC5yZXNwb25zZSxcclxuICAgICAgICBuYW1lOiBlLmN1cnJlbnRUYXJnZXQubmFtZSxcclxuICAgICAgICBwYXRoOiBlLmN1cnJlbnRUYXJnZXQucGF0aCxcclxuICAgICAgICBjdXN0b21EYXRhOiBlLmN1cnJlbnRUYXJnZXQuY3VzdG9tRGF0YSxcclxuICAgIH07XHJcblxyXG4gICAgdGhpcy5yZXNwb25zZUFycmF5LnB1c2gocmVzcG9uc2VPYmopO1xyXG5cclxuICAgIHRoaXMucmVzb3VyY2VzTG9hZGVkKys7XHJcbiAgICBpZiAodGhpcy5yZXNvdXJjZXNMb2FkZWQgPj0gdGhpcy5sb2FkZXJzLmxlbmd0aClcclxuICAgIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubG9hZGVycy5sZW5ndGg7IGkrKylcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZGVyc1tpXS5yZW1vdmVFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIiwgdGhpcy5sb2FkZXJQcm9ncmVzcyk7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZGVyc1tpXS5yZW1vdmVFdmVudExpc3RlbmVyKFwibG9hZFwiLCB0aGlzLnByb2NlZWRMb2FkZWRSZXNvdXJjZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubG9hZGVycyA9IG51bGw7XHJcblxyXG4gICAgICAgIHRoaXMub25Mb2FkZWRDYWxsYmFjayh0aGlzLnJlc3BvbnNlQXJyYXkpO1xyXG4gICAgfVxyXG59XHJcblxyXG5NdWx0aUxvYWRlci5wcm90b3R5cGUuZ2V0WG1sSHR0cFJlcXVlc3QgPSBmdW5jdGlvbiAoKSBcclxue1xyXG4gICAgdmFyIHhtbEh0dHA7XHJcblxyXG4gICAgaWYgKHdpbmRvdy5YTUxIdHRwUmVxdWVzdClcclxuICAgIHtcclxuICAgICAgICB4bWxIdHRwID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICB9XHJcbiAgICBlbHNlXHJcbiAgICB7XHJcbiAgICAgICAgeG1sSHR0cCA9IG5ldyBBY3RpdmVYT2JqZWN0KFwiTWljcm9zb2Z0LlhNTEhUVFBcIik7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuICh4bWxIdHRwKTtcclxufVxyXG5cclxuTXVsdGlMb2FkZXIucHJvdG90eXBlLmdldFJlc291cmNlID0gZnVuY3Rpb24ocmVzb3VyY2VOYW1lKVxyXG57XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucmVzcG9uc2VBcnJheS5sZW5ndGg7IGkrKylcclxuICAgIHtcclxuICAgICAgICBpZiAodGhpcy5yZXNwb25zZUFycmF5W2ldLm5hbWUgPT0gcmVzb3VyY2VOYW1lKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVzcG9uc2VBcnJheVtpXTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBBQ1RJT05TIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XHJcblxyXG5leHBvcnQgY29uc3QgQ0VMTF9HVUVTU0VEX0FDVElPTiA9IChpbmRleCwgZ3Vlc3NTY29yZSkgPT5cclxue1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHR5cGU6IEFDVElPTlMuQ0VMTF9HVUVTU0VELFxyXG4gICAgICAgICAgICBpbmRleDogaW5kZXgsXHJcbiAgICAgICAgICAgIGd1ZXNzU2NvcmU6IGd1ZXNzU2NvcmUsXHJcbiAgICAgICAgfVxyXG4gICAgKVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgQ0VMTF9FUlJPUl9BQ1RJT04gPSAoaW5kZXgsIGVycm9ycykgPT5cclxue1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHR5cGU6IEFDVElPTlMuQ0VMTF9FUlJPUixcclxuICAgICAgICAgICAgaW5kZXg6IGluZGV4LFxyXG4gICAgICAgICAgICBlcnJvcnM6IGVycm9yc1xyXG4gICAgICAgIH1cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IElOSVRJQVRFX05FV19MRVZFTF9BQ1RJT04gPSAoZ2FtZURhdGEpID0+XHJcbntcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0eXBlOiBBQ1RJT05TLklOSVRJQVRFX05FV19MRVZFTCxcclxuICAgICAgICAgICAgZ2FtZURhdGE6IGdhbWVEYXRhLFxyXG4gICAgICAgIH1cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFNUQVJUX0xFVkVMX0FDVElPTiA9ICgpID0+XHJcbntcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0eXBlOiBBQ1RJT05TLlNUQVJUX0xFVkVMLFxyXG4gICAgICAgIH1cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFNXSVRDSF9QUkVfUkVNRU1CRVJfUEhBU0VfQUNUSU9OID0gKGdhbWVEYXRhKSA9PlxyXG57XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdHlwZTogQUNUSU9OUy5TV0lUQ0hfUFJFX1JFTUVNQkVSX1BIQVNFLFxyXG4gICAgICAgICAgICBnYW1lRGF0YTogZ2FtZURhdGEsXHJcbiAgICAgICAgfVxyXG4gICAgKVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgU1dJVENIX1JFTUVNQkVSX1BIQVNFX0FDVElPTiA9ICh0aW1lU2VjKSA9PlxyXG57XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdHlwZTogQUNUSU9OUy5TV0lUQ0hfUkVNRU1CRVJfUEhBU0UsXHJcbiAgICAgICAgICAgIHRpbWU6IHRpbWVTZWMsXHJcbiAgICAgICAgfVxyXG4gICAgKVxyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLWVuZCBnYW1lIGNhc2VzLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuZXhwb3J0IGNvbnN0IEVORF9HQU1FX0xFVkVMX1VQX0FDVElPTiA9IChuZXdMZXZlbCwgbWF4TGV2ZWwpID0+XHJcbntcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0eXBlOiBBQ1RJT05TLkVORF9HQU1FX0xFVkVMX1VQLFxyXG4gICAgICAgICAgICBsZXZlbDogbmV3TGV2ZWwsXHJcbiAgICAgICAgICAgIG1heExldmVsOiBtYXhMZXZlbCxcclxuICAgICAgICB9XHJcbiAgICApXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBFTkRfR0FNRV9FUlJPUl9BQ1RJT04gPSAoY3VycmVudEVycm9ycywgbGV2ZWwpID0+XHJcbntcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0eXBlOiBBQ1RJT05TLkVORF9HQU1FX0VSUk9SLFxyXG4gICAgICAgICAgICBjdXJyZW50RXJyb3JzOiBjdXJyZW50RXJyb3JzLFxyXG4gICAgICAgICAgICBsZXZlbDogbGV2ZWwsXHJcbiAgICAgICAgfVxyXG4gICAgKVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgRU5EX0dBTUVfVElNRU9VVF9BQ1RJT04gPSAodGltZVNlYykgPT5cclxue1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHR5cGU6IEFDVElPTlMuRU5EX0dBTUVfVElNRU9VVCxcclxuICAgICAgICAgICAgdGltZTogdGltZVNlYyxcclxuICAgICAgICB9XHJcbiAgICApXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBFTkRfR0FNRV9DQU5DRUxfQUNUSU9OID0gKCkgPT5cclxue1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHR5cGU6IEFDVElPTlMuRU5EX0dBTUVfQ0FOQ0VMLFxyXG4gICAgICAgIH1cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEVORF9HQU1FX0xBU1RfTEVWRUxfQUNUSU9OID0gKGxldmVsKSA9PlxyXG57XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdHlwZTogQUNUSU9OUy5FTkRfR0FNRV9MQVNUX0xFVkVMLFxyXG4gICAgICAgICAgICBsZXZlbDogbGV2ZWwsXHJcbiAgICAgICAgfVxyXG4gICAgKVxyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tZW5kIGVuZCBnYW1lIGNhc2VzLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5leHBvcnQgY29uc3QgU0hPV19CRUdJTl9TQ1JFRU5fQUNUSU9OID0gKGxldmVsLCBtYXhMZXZlbCkgPT5cclxue1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHR5cGU6IEFDVElPTlMuU0hPV19CRUdJTl9TQ1JFRU4sXHJcbiAgICAgICAgICAgIGxldmVsOiBsZXZlbCxcclxuICAgICAgICAgICAgbWF4TGV2ZWw6IG1heExldmVsLFxyXG4gICAgICAgIH1cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFNIT1dfV0lOX1NDUkVFTl9BQ1RJT04gPSAoKSA9PlxyXG57XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdHlwZTogQUNUSU9OUy5TSE9XX1dJTl9TQ1JFRU4sXHJcbiAgICAgICAgfVxyXG4gICAgKVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgVElNRV9USUNLX1NFQ09ORFNfQUNUSU9OID0gKHRpbWVTdHJpbmcpID0+XHJcbntcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0eXBlOiBBQ1RJT05TLlRJTUVfVElDS19TRUNPTkRTLFxyXG4gICAgICAgICAgICB0aW1lOiB0aW1lU3RyaW5nXHJcbiAgICAgICAgfVxyXG4gICAgKVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgQ0hBTkdFX0xFVkVMX0FDVElPTiA9IChsZXZlbCkgPT5cclxue1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHR5cGU6IEFDVElPTlMuQ0hBTkdFX0xFVkVMLFxyXG4gICAgICAgICAgICBsZXZlbDogbGV2ZWwsXHJcbiAgICAgICAgfVxyXG4gICAgKVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgU0hPV19MRVZFTF9NRU5VX0FDVElPTiA9ICgpID0+XHJcbntcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0eXBlOiBBQ1RJT05TLlNIT1dfTEVWRUxfTUVOVSxcclxuICAgICAgICB9XHJcbiAgICApXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBISURFX0xFVkVMX01FTlVfQUNUSU9OID0gKCkgPT5cclxue1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHR5cGU6IEFDVElPTlMuSElERV9MRVZFTF9NRU5VLFxyXG4gICAgICAgIH1cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFVQREFURV9MRVZFTF9BQ1RJT04gPSAobGV2ZWwpID0+XHJcbntcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0eXBlOiBBQ1RJT05TLlVQREFURV9MRVZFTCxcclxuICAgICAgICAgICAgbGV2ZWw6IGxldmVsLFxyXG4gICAgICAgIH1cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFVQREFURV9NQVhfTEVWRUxfQUNUSU9OID0gKG1heExldmVsKSA9PlxyXG57XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdHlwZTogQUNUSU9OUy5VUERBVEVfTUFYX0xFVkVMLFxyXG4gICAgICAgICAgICBtYXhMZXZlbDogbWF4TGV2ZWwsXHJcbiAgICAgICAgfVxyXG4gICAgKVxyXG59XHJcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9wcmVsb2FkZXIuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9wcmVsb2FkZXIuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlcy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyByZW5kZXIgfSBmcm9tIFwicmVhY3QtZG9tXCI7XHJcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IEdhbWVWaWV3IGZyb20gXCIuL3ZpZXcvZ2FtZV92aWV3XCI7XHJcbmltcG9ydCB7IEdBTUVfU1RPUkUgfSBmcm9tIFwiLi9zdGF0ZS9zdG9yZVwiO1xyXG5pbXBvcnQgQ2xvY2sgZnJvbSBcIi4vdXRpbHMvY2xvY2tcIjtcclxuaW1wb3J0IHsgUHJlbG9hZGVyQmxvY2sgfSBmcm9tIFwiLi9sb2FkZXJzL3ByZWxvYWRlcl9ibG9ja1wiO1xyXG5pbXBvcnQgeyBNdWx0aUxvYWRlciB9IGZyb20gXCIuL2xvYWRlcnMvbXVsdGlsb2FkZXJcIjtcclxuaW1wb3J0XHJcbntcclxuICAgIE1BWF9FUlJPUlMsIFNDUkVFTlMsIEdBTUVfU1RBVFVTLCBHUklEX0xFVkVMUywgQ0VMTF9UWVBFUywgQ0VMTF9TVEFURVMsIFBSRV9SRU1fTU9ERV9EVVJBVElPTl9TRUMsIEJBU0VfUE9JTlRTX1BFUl9HVUVTUywgTEVWRUxfR1JPVVBfU0laRSxcclxuICAgIEFTU0VUU19EQVRBLCBJTUFHRVNfREFUQSwgU09VTkRTXHJcbn0gZnJvbSBcIi4vc3RhdGUvY29uc3RhbnRzXCI7XHJcblxyXG5pbXBvcnRcclxue1xyXG4gICAgQ0VMTF9HVUVTU0VEX0FDVElPTiwgQ0VMTF9FUlJPUl9BQ1RJT04sIElOSVRJQVRFX05FV19MRVZFTF9BQ1RJT04sIFNUQVJUX0xFVkVMX0FDVElPTiwgRU5EX0dBTUVfTEVWRUxfVVBfQUNUSU9OLFxyXG4gICAgRU5EX0dBTUVfRVJST1JfQUNUSU9OLCBTSE9XX0JFR0lOX1NDUkVFTl9BQ1RJT04sIFNIT1dfV0lOX1NDUkVFTl9BQ1RJT04sIFRJTUVfVElDS19TRUNPTkRTX0FDVElPTiwgRU5EX0dBTUVfQ0FOQ0VMX0FDVElPTiwgU1dJVENIX1BSRV9SRU1FTUJFUl9QSEFTRV9BQ1RJT04sXHJcbiAgICBTV0lUQ0hfUkVNRU1CRVJfUEhBU0VfQUNUSU9OLCBFTkRfR0FNRV9USU1FT1VUX0FDVElPTiwgQ0hBTkdFX0xFVkVMX0FDVElPTiwgU0hPV19MRVZFTF9NRU5VX0FDVElPTiwgSElERV9MRVZFTF9NRU5VX0FDVElPTixcclxuICAgIEVORF9HQU1FX0xBU1RfTEVWRUxfQUNUSU9OLCBVUERBVEVfTEVWRUxfQUNUSU9OLCBVUERBVEVfTUFYX0xFVkVMX0FDVElPTlxyXG59IGZyb20gXCIuL3N0YXRlL2FjdGlvbnNcIjtcclxuXHJcbmltcG9ydCBcIi4uL3N0eWxlcy9wcmVsb2FkZXIuY3NzXCI7XHJcbmltcG9ydCBcIi4uL3N0eWxlcy9zdHlsZXMuY3NzXCI7XHJcblxyXG5cclxudmFyIHN0YXJ0SGFuZGxlO1xyXG52YXIgcHJlUmVtSGFuZGxlO1xyXG52YXIgZ2FtZUNsb2NrO1xyXG5cclxudmFyIHVuc3Vic2NyaWJlQ2xpY2tBbmFseXplO1xyXG52YXIgdW5zdWJzY3JpYmVQcmVSZW1DYWxsYmFjaztcclxudmFyIHVuc3Vic2NyaWJlUmVtQ2FsbGJhY2s7XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tYXNzZXRzIGxvYWRpbmctLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxudmFyIGluaXRpYWxTaXplID0geyB3aWR0aDogd2luZG93LmlubmVyV2lkdGgsIGhlaWdodDogd2luZG93LmlubmVySGVpZ2h0IH07XHJcbnZhciBwcmVsb2FkZXIgPSBuZXcgUHJlbG9hZGVyQmxvY2soZG9jdW1lbnQuYm9keSwgaW5pdGlhbFNpemUpO1xyXG5wcmVsb2FkZXIuc2V0WkluZGV4KDEwMSk7XHJcbnByZWxvYWRlci5hZGRUb0NvbnRhaW5lcigpO1xyXG5cclxudmFyIG11bHRpbG9hZGVyID0gbmV3IE11bHRpTG9hZGVyKG9uQXNzZXRzTG9hZGVkLCBvbkFzc2V0c1Byb2dyZXNzKTtcclxubXVsdGlsb2FkZXIuc2V0RGF0YShBU1NFVFNfREFUQSk7XHJcbm11bHRpbG9hZGVyLnN0YXJ0TG9hZGluZygpO1xyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbmZ1bmN0aW9uIG9uQXNzZXRzUHJvZ3Jlc3MocHJvZ3Jlc3MpXHJcbntcclxuICAgIHByZWxvYWRlci51cGRhdGVQcmVsb2FkZXIocHJvZ3Jlc3MpXHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9uQXNzZXRzTG9hZGVkKHJlc291cmNlcylcclxue1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXNvdXJjZXMubGVuZ3RoOyBpKyspXHJcbiAgICB7XHJcbiAgICAgICAgaWYgKHJlc291cmNlc1tpXS5uYW1lLmluY2x1ZGVzKFwic291bmRcIikpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBsZXQgdGVtcFNvdW5kID0gY3JlYXRlU291bmQocmVzb3VyY2VzW2ldLm9iamVjdFVSTCk7XHJcbiAgICAgICAgICAgIHRlbXBTb3VuZC52b2x1bWUgPSAwLjc7XHJcbiAgICAgICAgICAgIFNPVU5EU1tyZXNvdXJjZXNbaV0ubmFtZV0gPSB0ZW1wU291bmQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIElNQUdFU19EQVRBW3Jlc291cmNlc1tpXS5uYW1lXSA9IHJlc291cmNlc1tpXS5vYmplY3RVUkw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNldHVwKCk7XHJcbiAgICBpbml0aWFsUmVuZGVyKCk7XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbmZ1bmN0aW9uIHNldHVwKClcclxue1xyXG4gICAgZ2FtZUNsb2NrID0gbmV3IENsb2NrKDEwMDApO1xyXG4gICAgZ2FtZUNsb2NrLmFkZENhbGxiYWNrcyhbb25UaWNrXSk7XHJcblxyXG4gICAgd2luZG93Lm9ucmVzaXplID0gcmVuZGVyQXBwO1xyXG5cclxuICAgIHVwZGF0ZUxldmVsQW5kTWF4TGV2ZWwoKTtcclxuXHJcbiAgICBHQU1FX1NUT1JFLnN1YnNjcmliZShyZW5kZXJBcHApO1xyXG59XHJcblxyXG5mdW5jdGlvbiB1cGRhdGVMZXZlbEFuZE1heExldmVsKClcclxue1xyXG4gICAgdmFyIG1heExldmVsID0gcmV0cmlldmVNYXhMZXZlbCgpO1xyXG5cclxuICAgIEdBTUVfU1RPUkUuZGlzcGF0Y2goVVBEQVRFX01BWF9MRVZFTF9BQ1RJT04obWF4TGV2ZWwpKTtcclxuXHJcbiAgICB2YXIgbGV2ZWwgPSByZXRyaWV2ZUxldmVsKCk7XHJcblxyXG4gICAgR0FNRV9TVE9SRS5kaXNwYXRjaChVUERBVEVfTEVWRUxfQUNUSU9OKGxldmVsKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJldHJpZXZlTWF4TGV2ZWwoKVxyXG57XHJcbiAgICB2YXIgbWF4TGV2ZWxWYWx1ZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIm1heExldmVsXCIpO1xyXG4gICAgaWYgKG1heExldmVsVmFsdWUpXHJcbiAgICB7XHJcbiAgICAgICAgcmV0dXJuIE51bWJlcihtYXhMZXZlbFZhbHVlKTtcclxuICAgIH1cclxuICAgIGVsc2VcclxuICAgIHtcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gcmV0cmlldmVMZXZlbCgpXHJcbntcclxuICAgIHZhciBsZXZlbCA9IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImxldmVsXCIpO1xyXG4gICAgaWYgKGxldmVsKVxyXG4gICAge1xyXG4gICAgICAgIHJldHVybiBOdW1iZXIobGV2ZWwpO1xyXG4gICAgfVxyXG4gICAgZWxzZVxyXG4gICAge1xyXG4gICAgICAgIHJldHVybiAwO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBpbml0aWFsUmVuZGVyKClcclxue1xyXG4gICAgaWYgKHN0YXJ0SGFuZGxlKVxyXG4gICAge1xyXG4gICAgICAgIGNsZWFyVGltZW91dChzdGFydEhhbmRsZSk7XHJcbiAgICAgICAgc3RhcnRIYW5kbGUgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlJlYWN0Q29udGFpbmVyXCIpO1xyXG4gICAgaWYgKCFjb250YWluZXIpXHJcbiAgICB7XHJcbiAgICAgICAgc3RhcnRIYW5kbGUgPSBzZXRUaW1lb3V0KGluaXRpYWxSZW5kZXIsIDUwMCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnRhaW5lci5jbGFzc05hbWUgPSBcImZ1bGxcIjtcclxuXHJcbiAgICByZW5kZXJBcHAoKTtcclxuXHJcbiAgICBpZiAocHJlbG9hZGVyKVxyXG4gICAge1xyXG4gICAgICAgIHByZWxvYWRlci5yZW1vdmVQcmVsb2FkZXIoKTtcclxuICAgICAgICBwcmVsb2FkZXIgPSBudWxsO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiByZW5kZXJBcHAoKVxyXG57XHJcbiAgICBsZXQgY2FsbGJhY2tzID0ge1xyXG4gICAgICAgIG9uQ2VsbENsaWNrZWQ6IG9uQ2VsbENsaWNrZWQsXHJcbiAgICAgICAgb25HYW1lQnV0dG9uQ2xpY2tlZDogb25HYW1lQnV0dG9uQ2xpY2tlZCxcclxuICAgICAgICBvblN0YXJ0R2FtZUNsaWNrZWQ6IG9uU3RhcnRHYW1lQ2xpY2tlZCxcclxuICAgICAgICBvbkxldmVsQ2xpY2tlZDogb25MZXZlbENsaWNrZWQsXHJcbiAgICAgICAgb25TZWxlY3RMZXZlbENsaWNrZWQ6IG9uU2VsZWN0TGV2ZWxDbGlja2VkLFxyXG4gICAgICAgIGhpZGVMZXZlbE1lbnU6IGhpZGVMZXZlbE1lbnUsXHJcbiAgICAgICAgc2hvd0JlZ2luU2NyZWVuOiBzaG93QmVnaW5TY3JlZW4sXHJcbiAgICAgICAgcmVzZXRUb0JlZ2luU2NyZWVuOiByZXNldFRvQmVnaW5TY3JlZW4sXHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGdhbWVTdGF0ZSA9IEdBTUVfU1RPUkUuZ2V0U3RhdGUoKTtcclxuICAgIHJlbmRlcig8R2FtZVZpZXcgc3RhdGU9e2dhbWVTdGF0ZX0gY2FsbGJhY2tzPXtjYWxsYmFja3N9IC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlJlYWN0Q29udGFpbmVyXCIpKTtcclxufVxyXG5cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLWNhbGxiYWNrcy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuZnVuY3Rpb24gb25TdGFydEdhbWVDbGlja2VkKCkgXHJcbntcclxuICAgIHZhciBnYW1lU3RhdGUgPSBHQU1FX1NUT1JFLmdldFN0YXRlKCk7XHJcbiAgICBpZiAoZ2FtZVN0YXRlLnNjcmVlbiAhPSBTQ1JFRU5TLkJFR0lOX1NDUkVFTilcclxuICAgIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgU09VTkRTLnNvdW5kX2NsaWNrLnBsYXkoKTtcclxuXHJcbiAgICBsZXQgbmV3R2FtZURhdGEgPSBnZXROZXdHYW1lRGF0YShnYW1lU3RhdGUuZ2FtZUxldmVsLCBnYW1lU3RhdGUubWF4TGV2ZWwsIDApO1xyXG4gICAgR0FNRV9TVE9SRS5kaXNwYXRjaChJTklUSUFURV9ORVdfTEVWRUxfQUNUSU9OKG5ld0dhbWVEYXRhKSk7XHJcbn1cclxuXHJcblxyXG5mdW5jdGlvbiBvbkNlbGxDbGlja2VkKGluZGV4KSBcclxue1xyXG4gICAgdmFyIGdhbWVTdGF0ZSA9IEdBTUVfU1RPUkUuZ2V0U3RhdGUoKTtcclxuICAgIGlmIChnYW1lU3RhdGUuc2NyZWVuICE9IFNDUkVFTlMuR0FNRV9TQ1JFRU4gfHwgZ2FtZVN0YXRlLmdhbWUuZ2FtZVN0YXR1cyAhPSBHQU1FX1NUQVRVUy5TVEFUVVNfUlVOTklOR19SRU1FTUJFUilcclxuICAgIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgU09VTkRTLnNvdW5kX2NsaWNrLnBsYXkoKTtcclxuXHJcbiAgICB1bnN1YnNjcmliZUNsaWNrQW5hbHl6ZSA9IEdBTUVfU1RPUkUuc3Vic2NyaWJlKGFuYWx5emVDZWxsQ2xpY2tSZXN1bHQpO1xyXG5cclxuICAgIGxldCBtYXRjaCA9IGNoZWNrRm9yTWF0Y2goaW5kZXgsIGdhbWVTdGF0ZSk7XHJcbiAgICBpZiAobWF0Y2gpXHJcbiAgICB7XHJcbiAgICAgICAgdmFyIHRpbWVGcm9tTGFzdEd1ZXNzID0gZ2FtZVN0YXRlLmdhbWUudGltZSAtIGdhbWVTdGF0ZS5nYW1lLmxhc3RHdWVzc1RpbWVzdGFtcDtcclxuICAgICAgICB2YXIgZ3Vlc3NTY29yZSA9IE1hdGgucm91bmQoQkFTRV9QT0lOVFNfUEVSX0dVRVNTIC8gKHRpbWVGcm9tTGFzdEd1ZXNzICsgMSkpO1xyXG4gICAgICAgIC8vY29uc29sZS5sb2coXCJCQVNFX1BPSU5UU19QRVJfR1VFU1M6IFwiICsgQkFTRV9QT0lOVFNfUEVSX0dVRVNTKTtcclxuXHJcbiAgICAgICAgR0FNRV9TVE9SRS5kaXNwYXRjaChDRUxMX0dVRVNTRURfQUNUSU9OKGluZGV4LCBndWVzc1Njb3JlKSk7XHJcbiAgICB9XHJcbiAgICBlbHNlXHJcbiAgICB7XHJcbiAgICAgICAgdmFyIGN1cnJlbnRFcnJvcnMgPSBnYW1lU3RhdGUuZ2FtZS5lcnJvcnMgKyAxO1xyXG4gICAgICAgIEdBTUVfU1RPUkUuZGlzcGF0Y2goQ0VMTF9FUlJPUl9BQ1RJT04oaW5kZXgsIGN1cnJlbnRFcnJvcnMpKTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gc2hvd0JlZ2luU2NyZWVuKClcclxue1xyXG4gICAgbGV0IGxldmVsID0gR0FNRV9TVE9SRS5nZXRTdGF0ZSgpLmdhbWVMZXZlbDtcclxuICAgIGxldCBtYXhMZXZlbCA9IEdBTUVfU1RPUkUuZ2V0U3RhdGUoKS5tYXhMZXZlbDtcclxuICAgIEdBTUVfU1RPUkUuZGlzcGF0Y2goU0hPV19CRUdJTl9TQ1JFRU5fQUNUSU9OKGxldmVsLCBtYXhMZXZlbCkpO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZXNldFRvQmVnaW5TY3JlZW4oKVxyXG57XHJcbiAgICBjbGVhckludGVydmFsKHByZVJlbUhhbmRsZSk7XHJcbiAgICBnYW1lQ2xvY2sucmVzZXQoKTtcclxuICAgIHNob3dCZWdpblNjcmVlbigpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzaG93V2luU2NyZWVuKClcclxue1xyXG4gICAgZ2FtZUNsb2NrLnJlc2V0KCk7XHJcbiAgICBHQU1FX1NUT1JFLmRpc3BhdGNoKFNIT1dfV0lOX1NDUkVFTl9BQ1RJT04oKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9uR2FtZUJ1dHRvbkNsaWNrZWQoKSBcclxue1xyXG4gICAgaWYgKEdBTUVfU1RPUkUuZ2V0U3RhdGUoKS5nYW1lLmNhbmNlbGxlZClcclxuICAgIHtcclxuICAgICAgICBzaG93QmVnaW5TY3JlZW4oKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgU09VTkRTLnNvdW5kX2NsaWNrLnBsYXkoKTtcclxuXHJcbiAgICB2YXIgY3VycmVudEdhbWVTdGF0ZSA9IEdBTUVfU1RPUkUuZ2V0U3RhdGUoKS5nYW1lLmdhbWVTdGF0dXM7XHJcblxyXG4gICAgc3dpdGNoIChjdXJyZW50R2FtZVN0YXRlKVxyXG4gICAge1xyXG4gICAgICAgIGNhc2UgR0FNRV9TVEFUVVMuU1RBVFVTX1BSRV9NRU1PUklaRTpcclxuICAgICAgICAgICAgZ2FtZUNsb2NrLnN0YXJ0KCk7XHJcbiAgICAgICAgICAgIEdBTUVfU1RPUkUuZGlzcGF0Y2goU1RBUlRfTEVWRUxfQUNUSU9OKCkpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSBHQU1FX1NUQVRVUy5TVEFUVVNfUlVOTklOR19NRU1PUklaRTpcclxuICAgICAgICAgICAgZ2FtZUNsb2NrLnN0YXJ0KCk7XHJcbiAgICAgICAgICAgIGFjdGl2YXRlUmVtZW1iZXJNb2RlKCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBjYXNlIEdBTUVfU1RBVFVTLlNUQVRVU19QUkVfUkVNRU1CRVI6XHJcbiAgICAgICAgICAgIC8vY2xlYXJJbnRlcnZhbChwcmVSZW1IYW5kbGUpO1xyXG4gICAgICAgICAgICAvL2dhbWVDbG9jay5wYXVzZSgpO1xyXG4gICAgICAgICAgICAvL0dBTUVfU1RPUkUuZGlzcGF0Y2goRU5EX0dBTUVfQ0FOQ0VMX0FDVElPTigpKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgR0FNRV9TVEFUVVMuU1RBVFVTX1JVTk5JTkdfUkVNRU1CRVI6XHJcbiAgICAgICAgICAgIC8vZ2FtZUNsb2NrLnBhdXNlKCk7XHJcbiAgICAgICAgICAgIC8vR0FNRV9TVE9SRS5kaXNwYXRjaChFTkRfR0FNRV9DQU5DRUxfQUNUSU9OKCkpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSBHQU1FX1NUQVRVUy5TVEFUVVNfRU5ERURfRVJST1I6XHJcbiAgICAgICAgICAgIHNob3dCZWdpblNjcmVlbigpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSBHQU1FX1NUQVRVUy5TVEFUVVNfRU5ERURfVElNRU9VVDpcclxuICAgICAgICAgICAgc2hvd0JlZ2luU2NyZWVuKCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBjYXNlIEdBTUVfU1RBVFVTLlNUQVRVU19FTkRFRF9MRVZFTF9VUDpcclxuICAgICAgICAgICAgbGV0IGN1cnJlbnRTY29yZSA9IEdBTUVfU1RPUkUuZ2V0U3RhdGUoKS5zY29yZTtcclxuICAgICAgICAgICAgbGV0IG5ld0dhbWVMZXZlbCA9IEdBTUVfU1RPUkUuZ2V0U3RhdGUoKS5nYW1lTGV2ZWw7XHJcbiAgICAgICAgICAgIGxldCBtYXhMZXZlbCA9IEdBTUVfU1RPUkUuZ2V0U3RhdGUoKS5tYXhMZXZlbDtcclxuICAgICAgICAgICAgbGV0IG5ld0dhbWVEYXRhID0gZ2V0TmV3R2FtZURhdGEobmV3R2FtZUxldmVsLCBtYXhMZXZlbCwgY3VycmVudFNjb3JlKTtcclxuXHJcbiAgICAgICAgICAgIEdBTUVfU1RPUkUuZGlzcGF0Y2goSU5JVElBVEVfTkVXX0xFVkVMX0FDVElPTihuZXdHYW1lRGF0YSkpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSBHQU1FX1NUQVRVUy5TVEFUVVNfRU5ERURfTEFTVF9MRVZFTDpcclxuICAgICAgICAgICAgc2hvd1dpblNjcmVlbigpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gb25MZXZlbENsaWNrZWQobGV2ZWwpXHJcbntcclxuICAgIFNPVU5EUy5zb3VuZF9jbGljay5wbGF5KCk7XHJcblxyXG4gICAgR0FNRV9TVE9SRS5kaXNwYXRjaChDSEFOR0VfTEVWRUxfQUNUSU9OKGxldmVsKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9uU2VsZWN0TGV2ZWxDbGlja2VkKGUpXHJcbntcclxuICAgIFNPVU5EUy5zb3VuZF9jbGljay5wbGF5KCk7XHJcblxyXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIGxldCBzdGF0ZSA9IEdBTUVfU1RPUkUuZ2V0U3RhdGUoKTtcclxuICAgIGlmIChzdGF0ZS5sZXZlbE1lbnVPbilcclxuICAgIHtcclxuICAgICAgICBHQU1FX1NUT1JFLmRpc3BhdGNoKEhJREVfTEVWRUxfTUVOVV9BQ1RJT04oKSk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgR0FNRV9TVE9SRS5kaXNwYXRjaChTSE9XX0xFVkVMX01FTlVfQUNUSU9OKCkpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoaWRlTGV2ZWxNZW51KClcclxue1xyXG4gICAgbGV0IHN0YXRlID0gR0FNRV9TVE9SRS5nZXRTdGF0ZSgpO1xyXG4gICAgaWYgKHN0YXRlLmxldmVsTWVudU9uKVxyXG4gICAge1xyXG4gICAgICAgIEdBTUVfU1RPUkUuZGlzcGF0Y2goSElERV9MRVZFTF9NRU5VX0FDVElPTigpKTtcclxuICAgIH1cclxufVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1lbmQgY2FsbGJhY2tzLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5mdW5jdGlvbiBhbmFseXplQ2VsbENsaWNrUmVzdWx0KClcclxue1xyXG4gICAgdW5zdWJzY3JpYmVDbGlja0FuYWx5emUoKTtcclxuICAgIHVuc3Vic2NyaWJlQ2xpY2tBbmFseXplID0gbnVsbDtcclxuXHJcbiAgICBsZXQgZ2FtZVN0YXRlID0gR0FNRV9TVE9SRS5nZXRTdGF0ZSgpO1xyXG4gICAgaWYgKGdhbWVTdGF0ZS5zY3JlZW4gPT0gU0NSRUVOUy5HQU1FX1NDUkVFTiAmJiBnYW1lU3RhdGUuZ2FtZS5nYW1lU3RhdHVzID09IEdBTUVfU1RBVFVTLlNUQVRVU19SVU5OSU5HX1JFTUVNQkVSKVxyXG4gICAge1xyXG4gICAgICAgIGlmIChjaGVja0lmTGFzdChnYW1lU3RhdGUpKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgZ2FtZUNsb2NrLnBhdXNlKCk7XHJcbiAgICAgICAgICAgIGxldCBuZXdMZXZlbCA9IGdhbWVTdGF0ZS5nYW1lTGV2ZWwgKyAxO1xyXG4gICAgICAgICAgICBpZiAobmV3TGV2ZWwgPj0gR1JJRF9MRVZFTFMubGVuZ3RoKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBHQU1FX1NUT1JFLmRpc3BhdGNoKEVORF9HQU1FX0xBU1RfTEVWRUxfQUNUSU9OKDApKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImxldmVsXCIsIFN0cmluZyhuZXdMZXZlbCkpO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBtYXhMZXZlbCA9IGdhbWVTdGF0ZS5tYXhMZXZlbDtcclxuICAgICAgICAgICAgICAgIGlmKCFtYXhMZXZlbClcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXhMZXZlbCA9IDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAobmV3TGV2ZWwgPiBtYXhMZXZlbClcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJtYXhMZXZlbFwiLCBTdHJpbmcobmV3TGV2ZWwpKTtcclxuICAgICAgICAgICAgICAgICAgICBtYXhMZXZlbCA9IG5ld0xldmVsO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBHQU1FX1NUT1JFLmRpc3BhdGNoKEVORF9HQU1FX0xFVkVMX1VQX0FDVElPTihuZXdMZXZlbCwgbWF4TGV2ZWwpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGdhbWVTdGF0ZS5nYW1lLmVycm9ycyA+IE1BWF9FUlJPUlMpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBnYW1lQ2xvY2sucGF1c2UoKTtcclxuICAgICAgICAgICAgR0FNRV9TVE9SRS5kaXNwYXRjaChFTkRfR0FNRV9FUlJPUl9BQ1RJT04oZ2FtZVN0YXRlLmdhbWUuZXJyb3JzLCBnYW1lU3RhdGUuZ2FtZUxldmVsKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBnZXROZXdHYW1lRGF0YShsZXZlbCwgbWF4TGV2ZWwsIHNjb3JlKSBcclxue1xyXG4gICAgbGV0IGFsbENlbGxzID0gaW5pdENlbGxzKGxldmVsKTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBsZXZlbDogbGV2ZWwsXHJcbiAgICAgICAgICAgIG1heExldmVsOiBtYXhMZXZlbCxcclxuICAgICAgICAgICAgc2NvcmU6IHNjb3JlLFxyXG4gICAgICAgICAgICB0aW1lOiAwLFxyXG4gICAgICAgICAgICBsYXN0R3Vlc3NUaW1lc3RhbXA6IDAsXHJcbiAgICAgICAgICAgIGFsbENlbGxzOiBhbGxDZWxscyxcclxuICAgICAgICAgICAgZ2FtZVN0YXR1czogR0FNRV9TVEFUVVMuU1RBVFVTX1BSRV9NRU1PUklaRSxcclxuICAgICAgICAgICAgZXJyb3JzOiAwLFxyXG4gICAgICAgICAgICBsZXZlbERhdGE6IEdSSURfTEVWRUxTW2xldmVsXSxcclxuICAgICAgICAgICAgY2FuY2VsbGVkOiBmYWxzZSxcclxuICAgICAgICAgICAgY2xpY2tlZEluZGV4OiBudWxsLFxyXG4gICAgICAgIH1cclxuICAgIClcclxufVxyXG5cclxuZnVuY3Rpb24gb25UaWNrKHRpbWVTZWMpIFxyXG57XHJcbiAgICB2YXIgbGV2ZWwgPSBHQU1FX1NUT1JFLmdldFN0YXRlKCkuZ2FtZUxldmVsO1xyXG4gICAgdmFyIHRpbWVNb2RlID0gR0FNRV9TVE9SRS5nZXRTdGF0ZSgpLmdhbWUuZ2FtZVN0YXR1cztcclxuICAgIHZhciB0aW1lTGltaXQ7XHJcbiAgICBpZiAodGltZU1vZGUgPT0gR0FNRV9TVEFUVVMuU1RBVFVTX1JVTk5JTkdfTUVNT1JJWkUpXHJcbiAgICB7XHJcbiAgICAgICAgdGltZUxpbWl0ID0gR1JJRF9MRVZFTFNbbGV2ZWxdLnRpbWVNO1xyXG4gICAgICAgIGlmICh0aW1lU2VjID49IHRpbWVMaW1pdClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHVuc3Vic2NyaWJlUHJlUmVtQ2FsbGJhY2sgPSBHQU1FX1NUT1JFLnN1YnNjcmliZShwcmVSZW1DYWxsYmFjayk7XHJcbiAgICAgICAgICAgIGdhbWVDbG9jay5yZXNldCgpO1xyXG4gICAgICAgICAgICBHQU1FX1NUT1JFLmRpc3BhdGNoKFRJTUVfVElDS19TRUNPTkRTX0FDVElPTih0aW1lU2VjKSk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmICh0aW1lTW9kZSA9PSBHQU1FX1NUQVRVUy5TVEFUVVNfUlVOTklOR19SRU1FTUJFUilcclxuICAgIHtcclxuICAgICAgICB0aW1lTGltaXQgPSBHUklEX0xFVkVMU1tsZXZlbF0udGltZVI7XHJcbiAgICAgICAgaWYgKHRpbWVTZWMgPj0gdGltZUxpbWl0KVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgZ2FtZUNsb2NrLnBhdXNlKCk7ICAvL3N0b3BwaW5nIGNsb2NrLCBnYW1lIGlzIG92ZXJcclxuICAgICAgICAgICAgR0FNRV9TVE9SRS5kaXNwYXRjaChFTkRfR0FNRV9USU1FT1VUX0FDVElPTih0aW1lU2VjKSk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgR0FNRV9TVE9SRS5kaXNwYXRjaChUSU1FX1RJQ0tfU0VDT05EU19BQ1RJT04odGltZVNlYykpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBwcmVSZW1DYWxsYmFjaygpXHJcbntcclxuICAgIHVuc3Vic2NyaWJlUHJlUmVtQ2FsbGJhY2soKTtcclxuICAgIHVuc3Vic2NyaWJlUHJlUmVtQ2FsbGJhY2sgPSBudWxsO1xyXG5cclxuICAgIHVuc3Vic2NyaWJlUmVtQ2FsbGJhY2sgPSBHQU1FX1NUT1JFLnN1YnNjcmliZShwcmVBY3RpdmF0ZVJlbWVtYmVyTW9kZSk7XHJcblxyXG4gICAgR0FNRV9TVE9SRS5kaXNwYXRjaChTV0lUQ0hfUFJFX1JFTUVNQkVSX1BIQVNFX0FDVElPTigpKTtcclxufVxyXG5cclxuZnVuY3Rpb24gcHJlQWN0aXZhdGVSZW1lbWJlck1vZGUoKVxyXG57XHJcbiAgICB1bnN1YnNjcmliZVJlbUNhbGxiYWNrKCk7XHJcbiAgICB1bnN1YnNjcmliZVJlbUNhbGxiYWNrID0gbnVsbDtcclxuXHJcbiAgICBwcmVSZW1IYW5kbGUgPSBzZXRUaW1lb3V0KGFjdGl2YXRlUmVtZW1iZXJNb2RlLCBQUkVfUkVNX01PREVfRFVSQVRJT05fU0VDICogMTAwMCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFjdGl2YXRlUmVtZW1iZXJNb2RlKClcclxue1xyXG4gICAgR0FNRV9TVE9SRS5kaXNwYXRjaChTV0lUQ0hfUkVNRU1CRVJfUEhBU0VfQUNUSU9OKDApKTtcclxuICAgIGdhbWVDbG9jay5zdGFydCgpOyAgLy9yZXN0YXJ0aW5nIGNsb2NrIGZvciB0aGUgbmV3IHJlbWVtYmVyaW5nIG1vZGVcclxufVxyXG5cclxuZnVuY3Rpb24gaW5pdENlbGxzKGxldmVsKVxyXG57XHJcbiAgICBsZXQgd2lkdGggPSBHUklEX0xFVkVMU1tsZXZlbF0udztcclxuICAgIGxldCBoZWlnaHQgPSBHUklEX0xFVkVMU1tsZXZlbF0uaDtcclxuXHJcbiAgICBsZXQgbnVtVGFyZ2V0Q2VsbHMgPSBHUklEX0xFVkVMU1tsZXZlbF0uYztcclxuXHJcbiAgICBsZXQgZ3JpZEluZGV4ZXMgPSBbXTtcclxuICAgIGxldCBjaG9zZW5JbmRleGVzID0gW107XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHdpZHRoICogaGVpZ2h0OyBpKyspXHJcbiAgICB7XHJcbiAgICAgICAgZ3JpZEluZGV4ZXMucHVzaChpKTtcclxuICAgIH1cclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bVRhcmdldENlbGxzOyBpKyspXHJcbiAgICB7XHJcbiAgICAgICAgbGV0IGluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogZ3JpZEluZGV4ZXMubGVuZ3RoKTtcclxuICAgICAgICBjaG9zZW5JbmRleGVzW2ldID0gZ3JpZEluZGV4ZXNbaW5kZXhdO1xyXG4gICAgICAgIGdyaWRJbmRleGVzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGFsbENlbGxzID0gW107XHJcbiAgICBsZXQgY2VsbENvdW50ZXIgPSAwO1xyXG4gICAgZm9yIChsZXQgbiA9IDA7IG4gPCBHUklEX0xFVkVMU1tsZXZlbF0uaDsgbisrKVxyXG4gICAge1xyXG4gICAgICAgIGFsbENlbGxzW25dID0gW107XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBHUklEX0xFVkVMU1tsZXZlbF0udzsgaSsrKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFyIGNlbGxUeXBlVmFsdWUgPSBcIlRZUEVfTk9UX0RFRklORURcIjtcclxuICAgICAgICAgICAgaWYgKGNob3NlbkluZGV4ZXMuaW5kZXhPZihjZWxsQ291bnRlcikgIT0gLTEpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGNlbGxUeXBlVmFsdWUgPSBDRUxMX1RZUEVTLkZVTEw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBjZWxsVHlwZVZhbHVlID0gQ0VMTF9UWVBFUy5FTVBUWTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgbGV0IHRlbXBDZWxsID0ge1xyXG4gICAgICAgICAgICAgICAgY2VsbFN0YXRlOiBDRUxMX1NUQVRFUy5DTE9TRUQsXHJcbiAgICAgICAgICAgICAgICBjZWxsVHlwZTogY2VsbFR5cGVWYWx1ZSxcclxuICAgICAgICAgICAgICAgIGNlbGxJbmRleDogY2VsbENvdW50ZXIsXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGFsbENlbGxzW25dW2ldID0gdGVtcENlbGw7XHJcblxyXG4gICAgICAgICAgICBjZWxsQ291bnRlcisrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYWxsQ2VsbHM7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNoZWNrRm9yTWF0Y2goaW5kZXgsIGdhbWVTdGF0ZSkgXHJcbntcclxuICAgIHZhciBjZWxscyA9IGdhbWVTdGF0ZS5nYW1lLmFsbENlbGxzO1xyXG4gICAgZm9yICh2YXIgbiA9IDA7IG4gPCBjZWxscy5sZW5ndGg7IG4rKylcclxuICAgIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNlbGxzW25dLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYgKGluZGV4ID09IGNlbGxzW25dW2ldLmNlbGxJbmRleCAmJiBjZWxsc1tuXVtpXS5jZWxsVHlwZSA9PSBDRUxMX1RZUEVTLkZVTEwgJiZcclxuICAgICAgICAgICAgICAgIGNlbGxzW25dW2ldLmNlbGxTdGF0ZSA9PSBDRUxMX1NUQVRFUy5DTE9TRUQpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBmYWxzZTtcclxufVxyXG5cclxuZnVuY3Rpb24gY2hlY2tJZkxhc3QoZ2FtZVN0YXRlKVxyXG57XHJcbiAgICB2YXIgY2VsbHNEYXRhID0gZ2FtZVN0YXRlLmdhbWUuYWxsQ2VsbHM7XHJcbiAgICB2YXIgbnVtVW5vcGVuZWQgPSAwO1xyXG4gICAgZm9yICh2YXIgbiA9IDA7IG4gPCBjZWxsc0RhdGEubGVuZ3RoOyBuKyspXHJcbiAgICB7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjZWxsc0RhdGFbbl0ubGVuZ3RoOyBpKyspXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpZiAoY2VsbHNEYXRhW25dW2ldLmNlbGxUeXBlID09IENFTExfVFlQRVMuRlVMTCAmJiBjZWxsc0RhdGFbbl1baV0uY2VsbFN0YXRlID09IENFTExfU1RBVEVTLkNMT1NFRCkgXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG51bVVub3BlbmVkKys7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKG51bVVub3BlbmVkICE9IDApXHJcbiAgICB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0cnVlO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVTb3VuZChzcmMpXHJcbntcclxuICAgIHZhciBzb3VuZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhdWRpb1wiKTtcclxuICAgIHNvdW5kLnNyYyA9IHNyYztcclxuICAgIHNvdW5kLnNldEF0dHJpYnV0ZShcInByZWxvYWRcIiwgXCJhdXRvXCIpO1xyXG4gICAgc291bmQuc2V0QXR0cmlidXRlKFwiY29udHJvbHNcIiwgXCJub25lXCIpO1xyXG4gICAgc291bmQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzb3VuZCk7XHJcblxyXG4gICAgcmV0dXJuIChzb3VuZCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNsZWFyQWxsU291bmRzKClcclxue1xyXG4gICAgU291bmQucmVtb3ZlQWxsU291bmRzKCk7XHJcbn0iXSwibmFtZXMiOlsiQVNTRVRTX0RBVEEiLCJuYW1lIiwicGF0aCIsIklNQUdFU19EQVRBIiwiU09VTkRTIiwiU0NSRUVOUyIsIkJFR0lOX1NDUkVFTiIsIkdBTUVfU0NSRUVOIiwiV0lOX1NDUkVFTiIsIkNFTExfVFlQRVMiLCJFTVBUWSIsIkZVTEwiLCJDRUxMX1NUQVRFUyIsIk9QRU5FRCIsIkNMT1NFRCIsIkNFTExfVklTVUFMX1NUQVRFUyIsIkNPVkVSRUQiLCJTSE9XIiwiR1VFU1NFRCIsIlVOR1VFU1NFRCIsIkVSUk9SIiwiQUNUSU9OUyIsIlNUQVJUX0xFVkVMIiwiU1dJVENIX1BSRV9SRU1FTUJFUl9QSEFTRSIsIlNXSVRDSF9SRU1FTUJFUl9QSEFTRSIsIkhJREVfTEVWRUxfTUVOVSIsIlNIT1dfTEVWRUxfTUVOVSIsIkNIQU5HRV9MRVZFTCIsIkNFTExfR1VFU1NFRCIsIkNFTExfRVJST1IiLCJUSU1FX1RJQ0tfU0VDT05EUyIsIlNIT1dfQkVHSU5fU0NSRUVOIiwiSU5JVElBVEVfTkVXX0xFVkVMIiwiU0hPV19XSU5fU0NSRUVOIiwiRU5EX0dBTUVfTEVWRUxfVVAiLCJFTkRfR0FNRV9MQVNUX0xFVkVMIiwiRU5EX0dBTUVfVElNRU9VVCIsIkVORF9HQU1FX0VSUk9SIiwiRU5EX0dBTUVfQ0FOQ0VMIiwiVVBEQVRFX0xFVkVMIiwiVVBEQVRFX01BWF9MRVZFTCIsIkdBTUVfU1RBVFVTIiwiU1RBVFVTX1BSRV9NRU1PUklaRSIsIlNUQVRVU19SVU5OSU5HX01FTU9SSVpFIiwiU1RBVFVTX1BSRV9SRU1FTUJFUiIsIlNUQVRVU19SVU5OSU5HX1JFTUVNQkVSIiwiU1RBVFVTX0VOREVEX0xFVkVMX1VQIiwiU1RBVFVTX0VOREVEX1RJTUVPVVQiLCJTVEFUVVNfRU5ERURfRVJST1IiLCJTVEFUVVNfRU5ERURfTEFTVF9MRVZFTCIsIkdSSURfTEVWRUxTIiwidyIsImgiLCJjIiwidGltZU0iLCJ0aW1lUiIsIkJBU0VfUE9JTlRTX1BFUl9HVUVTUyIsIlBSRV9SRU1fTU9ERV9EVVJBVElPTl9TRUMiLCJNQVhfRVJST1JTIiwiQ0NfVEhSRVNfMSIsIkNDX1RIUkVTXzIiLCJDT0xPUl8xIiwiQ09MT1JfMiIsIkNPTE9SXzMiLCJMRVZFTF9HUk9VUF9TSVpFIiwiaW5pdGlhbEdhbWVTdGF0ZSIsInNjcmVlbiIsImxldmVsTWVudU9uIiwiZ2FtZUxldmVsIiwibWF4TGV2ZWwiLCJsZXZlbERhdGEiLCJzY29yZSIsImdhbWUiLCJ0aW1lIiwibGFzdEd1ZXNzVGltZXN0YW1wIiwiYWxsQ2VsbHMiLCJnYW1lU3RhdHVzIiwiZXJyb3JzIiwiY2FuY2VsbGVkIiwiY2xpY2tlZEluZGV4IiwiVEVYVFMiLCJTdGFydCIsIlNraXAiLCJDYW5jZWwiLCJTdGFydGluZyIsIlNlbGVjdF9MZXZlbCIsIldoZW5fcmVhZHkiLCJUcnlfdG9fbWVtb3JpemUiLCJDbGlja19vbl9ncmVlbl9jZWxscyIsIlRpbWVfdXAiLCJUaW1lX3N0b3BwZWQiLCJDb250aW51ZSIsIlJlYWN0IiwiQ29tcG9uZW50IiwiTGV2ZWxNZW51IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsIm51bUxldmVscyIsInNob3ciLCJidXR0b25DbGlja2VkIiwiYmluZCIsImluZGV4Iiwib25MZXZlbENsaWNrZWQiLCJyZW5kZXIiLCJsZXZlbEJ1dHRvbnMiLCJpIiwibGFiZWwiLCJjbGlja0hhbmRsZXIiLCJzdHlsZSIsImNvbG9yIiwiYmFja2dyb3VuZENvbG9yIiwiY3VycmVudExldmVsR3JvdXAiLCJNYXRoIiwiY2VpbCIsIm1heFVubG9ja2VkTGV2ZWwiLCJidXR0b24iLCJwdXNoIiwiQmVnaW5TY3JlZW4iLCJzdGFydEJ0blN0eWxlIiwicG9zaXRpb24iLCJtYXJnaW5Ub3AiLCJtYXJnaW5MZWZ0IiwibWFyZ2luUmlnaHQiLCJsZWZ0IiwicmlnaHQiLCJoZWlnaHQiLCJsaW5lSGVpZ2h0IiwiZm9udFNpemUiLCJ0b3AiLCJzZWxlY3RCdG5TdHlsZSIsInNpemUiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJzZWxlY3RMZXZlbExhYmVsIiwibGV2ZWwiLCJoaWRlTGV2ZWxNZW51IiwibGVuZ3RoIiwic3BsYXNoIiwib25TZWxlY3RMZXZlbENsaWNrZWQiLCJvblN0YXJ0R2FtZUNsaWNrZWQiLCJDZWxsIiwicHJvY2VlZENlbGxDbGljayIsImUiLCJzdG9wUHJvcGFnYXRpb24iLCJwcm9jZWVkQ2xpY2siLCJzdHlsZU9iaiIsImFuaW1hdGlvbiIsImlzQW5pbSIsInBpY3R1cmUiLCJ2U3RhdGUiLCJlcnJvciIsImNoZWNrIiwidW5ndWVzcyIsImNlbGxDbGFzcyIsIkdhbWVTY3JlZW4iLCJwcm9jZWVkQnV0dG9uQ2xpY2siLCJwcm9jZWVkQnV0dG9uQ2xpY2tCa2ciLCJzdGF0ZSIsIm9uQ2VsbENsaWNrZWQiLCJvbkdhbWVCdXR0b25DbGlja2VkIiwiZ2V0TWVzc2FnZVN0cmluZyIsIm1lc3NhZ2VTdHJpbmciLCJnZXRDbG9jayIsImdhbWVTdGF0ZSIsInRpbWVPYmoiLCJnZXRUaW1lU3RyaW5nIiwidGltZVN0ciIsInRpbWVTZWMiLCJ0aW1lTGltaXQiLCJlbGFwc2VkVGltZVBlciIsImNsb2NrRGlzcGxheSIsIm1pbnV0ZXNFbGFwc2VkIiwiZmxvb3IiLCJob3VycyIsInNlY29uZHMiLCJtaW51dGVzIiwiaG91cnNTdHIiLCJtaW51dGVzU3RyIiwic2Vjb25kc1N0ciIsInNlY29uZHNMZWZ0Iiwic2Vjb25kc0xlZnRTdHIiLCJnZXRCdXR0b25MYWJlbCIsImlzQ2FuY2VsbGVkIiwiYnV0dG9uTGFiZWwiLCJnZXRMZXZlbCIsImdldENlbGxTdHlsZSIsImNlbGxUeXBlIiwiY2VsbFN0YXRlIiwiY2xhc3NTdHIiLCJ2aXN1YWxTdGF0ZSIsImN1cnNvclN0eWxlIiwiY2xhc3MiLCJ2aXN1YWwiLCJnZXRNZXNzYWdlUG9wdXAiLCJjZWxscyIsInJvd0xlbmd0aCIsImNvbHVtbkhlaWdodCIsImNvdW50ZXIiLCJuIiwiY2VsbERhdGEiLCJjZWxsRGF0YU9iaiIsImNlbGxJbmRleCIsInRlbXBDZWxsIiwiY2xvY2siLCJtZXNzYWdlUG9wdXAiLCJzdHlsZUJ1dHRvbiIsInN0eWxlTGV2ZWwiLCJ0ZXh0QWxpZ24iLCJzdHlsZVNjb3JlIiwiY29udGFpbmVyU3R5bGVPYmoiLCJncmlkVGVtcGxhdGVDb2x1bW5zIiwid2lkdGgiLCJXaW5TY3JlZW4iLCJzaG93QmVnaW5TY3JlZW4iLCJ3aW4iLCJHYW1lVmlldyIsIkJlZ2luU2NyZWVuSW5zdGFuY2UiLCJHYW1lU2NyZWVuSW5zdGFuY2UiLCJXaW5TY3JlZW5JbnN0YW5jZSIsImNhbGxiYWNrcyIsInJlc2V0VG9CZWdpblNjcmVlbiIsImV4aXRCdXR0b24iLCJleGl0IiwiY2hhbmdlR2FtZVN0YXRlIiwiYWN0aW9uIiwidHlwZSIsImdhbWVEYXRhIiwibmV3Q2VsbHMiLCJndWVzc1Njb3JlIiwiY2VsbHNEYXRhIiwiY3JlYXRlU3RvcmUiLCJjb21iaW5lUmVkdWNlcnMiLCJjaGFuZ2VTY3JlZW4iLCJHQU1FX1NUT1JFIiwiQ2xvY2siLCJtaWxsaXNlY29uZHMiLCJpbnRlcnZhbCIsImhhbmRsZSIsImN1cnJlbnRUaW1lTVMiLCJvbkludGVydmFsIiwiYWRkQ2FsbGJhY2tzIiwiY2FsbGJhY2tzQXJyIiwicmVtb3ZlQ2FsbGJhY2tzIiwic3RhcnQiLCJyZXNldCIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsInBhdXNlIiwicmVzdW1lIiwidGltZVN0cmluZyIsImdldEN1cnJlbnRUaW1lU3RyaW5nIiwicHJpbnRUaW1lU3RyIiwiZ2V0Q3VycmVudFRpbWVTZWMiLCJyb3VuZCIsImdldFRpbWVPYmoiLCJ0aW1lVG9TdHIiLCJzZWNvbmRzRWxhcHNlZCIsIlByb2dyZXNzQmFyQmxvY2tUeXBlIiwiX3BhcmVudENvbnRhaW5lciIsImluaXRpYWxTaXplIiwicGFyZW50Q29udGFpbmVyIiwicmVzaXplIiwiY3VycmVudFByb2dyZXNzUGVyY2VudCIsIkFDVElWRSIsImNvbnRhaW5lciIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsInVwZGF0ZVByb2dyZXNzQmFyIiwiYmxvY2tJbml0QXJyYXkiLCJBcnJheSIsImNvb3JkaW5hdGVzQXJyYXkiLCJibG9ja0FycmF5IiwiaG9yaXpvbnRhbEJsb2Nrc0NvdW50IiwidmVydGljYWxCbG9ja3NDb3VudCIsInRvZ2dsZVZpc2liaWxpdHkiLCJzZXREaW1lbnNpb25zIiwiY3JlYXRlQmxvY2tzIiwiYWRkRXZlbnRMaXN0ZW5lciIsInByb3RvdHlwZSIsInNldFpJbmRleCIsInZhbHVlIiwiekluZGV4IiwicmVzaXplUmVhbCIsImNsaWVudFdpZHRoIiwiU0laRV9DT0VGIiwiZ2FwIiwiR0FQX0NPRUYiLCJibG9ja1dpZHRoIiwiYmxvY2tIZWlnaHQiLCJnZXRCbG9ja0Nvb3JkaW5hdGVzIiwic2V0UG9zWFkiLCJyb3ciLCJjb2x1bW4iLCJjaGFyQXQiLCJjb29yZFgiLCJjb29yZFkiLCJjb29yZHNYWSIsInRlbXBCbG9jayIsIlByb2dyZXNzQmFyQmxvY2siLCJhZGRUb0NvbnRhaW5lciIsInBhcmVudE5vZGUiLCJhcHBlbmRDaGlsZCIsInJlbW92ZUZyb21Db250YWluZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmVtb3ZlQ2hpbGQiLCJfcHJvZ3Jlc3MiLCJhY3RpdmVCbG9ja3NDb3VudCIsInVwZGF0ZUFjdGl2ZUJsb2Nrc0NvdW50IiwiX2FjdGl2ZUJsb2Nrc0NvdW50Iiwic2V0QWN0aXZlIiwic2V0SW5hY3RpdmUiLCJzZXRYWVBvcyIsIl9sZWZ0IiwiX3RvcCIsIl92aXNpYmxlIiwiZ2V0V2lkdGgiLCJnZXRIZWlnaHQiLCJfd2lkdGgiLCJfaGVpZ2h0IiwiYmxvY2siLCJQcm9ncmVzc0JhciIsIm91dGVyRGl2IiwiaW5uZXJEaXYiLCJwcm9ncmVzcyIsIlByZWxvYWRlckJsb2NrIiwib25DbGlja2VkQ2FsbGJhY2siLCJyZW1vdmVQcmVsb2FkZXIiLCJyZW1vdmVQcmVsb2FkZXJBbmRDbGVhckFsbCIsInVwZGF0ZVByZWxvYWRlciIsInByb2dyZXNzQmFyQmxvY2siLCJvbkNsaWNrZWQiLCJwcm9ncmVzc0JhciIsInByb2dyZXNSb3VuZGVkIiwiaW5uZXJUZXh0IiwicmVzZXRQcmVsb2FkZXIiLCJNdWx0aUxvYWRlciIsIm9uTG9hZGVkQ2FsbGJhY2siLCJvblByb2dyZXNzQ2FsbGJhY2siLCJsb2FkZXJQcm9ncmVzcyIsInByb2NlZWRMb2FkZWRSZXNvdXJjZSIsInJlc291cmNlc0xvYWRlZCIsImxvYWRlcnMiLCJyZXNwb25zZUFycmF5Iiwic2V0Q2FsbGJhY2tzIiwic2V0RGF0YSIsImRhdGEiLCJzdGFydExvYWRpbmciLCJ4bWxIdHRwIiwiZ2V0WG1sSHR0cFJlcXVlc3QiLCJjdXN0b21EYXRhIiwiY3VycmVudFByb2dyZXNzIiwib3BlbiIsInJlc3BvbnNlVHlwZSIsImV4dGVuc2lvbiIsInN1YnN0ciIsImwiLCJzZW5kIiwibGVuZ3RoQ29tcHV0YWJsZSIsImN1cnJlbnRUYXJnZXQiLCJsb2FkZWQiLCJ0b3RhbCIsImxvYWRpbmdQcm9ncmVzcyIsImJsb2IiLCJCbG9iIiwicmVzcG9uc2UiLCJibG9iTGluayIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsInJlc3BvbnNlT2JqIiwib2JqZWN0VVJMIiwib2JqZWN0QmxvYiIsIlhNTEh0dHBSZXF1ZXN0IiwiQWN0aXZlWE9iamVjdCIsImdldFJlc291cmNlIiwicmVzb3VyY2VOYW1lIiwiQ0VMTF9HVUVTU0VEX0FDVElPTiIsIkNFTExfRVJST1JfQUNUSU9OIiwiSU5JVElBVEVfTkVXX0xFVkVMX0FDVElPTiIsIlNUQVJUX0xFVkVMX0FDVElPTiIsIlNXSVRDSF9QUkVfUkVNRU1CRVJfUEhBU0VfQUNUSU9OIiwiU1dJVENIX1JFTUVNQkVSX1BIQVNFX0FDVElPTiIsIkVORF9HQU1FX0xFVkVMX1VQX0FDVElPTiIsIm5ld0xldmVsIiwiRU5EX0dBTUVfRVJST1JfQUNUSU9OIiwiY3VycmVudEVycm9ycyIsIkVORF9HQU1FX1RJTUVPVVRfQUNUSU9OIiwiRU5EX0dBTUVfQ0FOQ0VMX0FDVElPTiIsIkVORF9HQU1FX0xBU1RfTEVWRUxfQUNUSU9OIiwiU0hPV19CRUdJTl9TQ1JFRU5fQUNUSU9OIiwiU0hPV19XSU5fU0NSRUVOX0FDVElPTiIsIlRJTUVfVElDS19TRUNPTkRTX0FDVElPTiIsIkNIQU5HRV9MRVZFTF9BQ1RJT04iLCJTSE9XX0xFVkVMX01FTlVfQUNUSU9OIiwiSElERV9MRVZFTF9NRU5VX0FDVElPTiIsIlVQREFURV9MRVZFTF9BQ1RJT04iLCJVUERBVEVfTUFYX0xFVkVMX0FDVElPTiIsInN0YXJ0SGFuZGxlIiwicHJlUmVtSGFuZGxlIiwiZ2FtZUNsb2NrIiwidW5zdWJzY3JpYmVDbGlja0FuYWx5emUiLCJ1bnN1YnNjcmliZVByZVJlbUNhbGxiYWNrIiwidW5zdWJzY3JpYmVSZW1DYWxsYmFjayIsInByZWxvYWRlciIsImJvZHkiLCJtdWx0aWxvYWRlciIsIm9uQXNzZXRzTG9hZGVkIiwib25Bc3NldHNQcm9ncmVzcyIsInJlc291cmNlcyIsImluY2x1ZGVzIiwidGVtcFNvdW5kIiwiY3JlYXRlU291bmQiLCJ2b2x1bWUiLCJzZXR1cCIsImluaXRpYWxSZW5kZXIiLCJvblRpY2siLCJvbnJlc2l6ZSIsInJlbmRlckFwcCIsInVwZGF0ZUxldmVsQW5kTWF4TGV2ZWwiLCJzdWJzY3JpYmUiLCJyZXRyaWV2ZU1heExldmVsIiwiZGlzcGF0Y2giLCJyZXRyaWV2ZUxldmVsIiwibWF4TGV2ZWxWYWx1ZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJOdW1iZXIiLCJjbGVhclRpbWVvdXQiLCJnZXRFbGVtZW50QnlJZCIsInNldFRpbWVvdXQiLCJnZXRTdGF0ZSIsInNvdW5kX2NsaWNrIiwicGxheSIsIm5ld0dhbWVEYXRhIiwiZ2V0TmV3R2FtZURhdGEiLCJhbmFseXplQ2VsbENsaWNrUmVzdWx0IiwibWF0Y2giLCJjaGVja0Zvck1hdGNoIiwidGltZUZyb21MYXN0R3Vlc3MiLCJzaG93V2luU2NyZWVuIiwiY3VycmVudEdhbWVTdGF0ZSIsImFjdGl2YXRlUmVtZW1iZXJNb2RlIiwiY3VycmVudFNjb3JlIiwibmV3R2FtZUxldmVsIiwiY2hlY2tJZkxhc3QiLCJzZXRJdGVtIiwiU3RyaW5nIiwiaW5pdENlbGxzIiwidGltZU1vZGUiLCJwcmVSZW1DYWxsYmFjayIsInByZUFjdGl2YXRlUmVtZW1iZXJNb2RlIiwibnVtVGFyZ2V0Q2VsbHMiLCJncmlkSW5kZXhlcyIsImNob3NlbkluZGV4ZXMiLCJyYW5kb20iLCJzcGxpY2UiLCJjZWxsQ291bnRlciIsImNlbGxUeXBlVmFsdWUiLCJpbmRleE9mIiwibnVtVW5vcGVuZWQiLCJzcmMiLCJzb3VuZCIsInNldEF0dHJpYnV0ZSIsImRpc3BsYXkiLCJjbGVhckFsbFNvdW5kcyIsIlNvdW5kIiwicmVtb3ZlQWxsU291bmRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///479\n')},278:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(667);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n// Imports\n\n\n\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(695), __webpack_require__.b);\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "@font-face {\\r\\n  font-family: Evogria;\\r\\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");\\r\\n  /*font-weight: bold;*/\\r\\n}\\r\\n\\r\\n:root{\\r\\n  --bkgColor: rgb(35, 35, 37);\\r\\n  --preloaderTextColor: rgb(255, 255, 255);\\r\\n  --preloaderSquaresColor: rgb(95, 114, 148);\\r\\n}\\r\\n\\r\\n\\r\\n.preloaderBkg{\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    display: flex;\\r\\n    flex-flow: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    width:100%;\\r\\n    height:100%;\\r\\n    background-color: var(--bkgColor);\\r\\n    z-index: 900;\\r\\n  }\\r\\n\\r\\n  .preloaderBlockBkg{\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width:100%;\\r\\n    height:100%;\\r\\n    background-color: var(--bkgColor);\\r\\n    z-index: 1000;\\r\\n  }\\r\\n\\r\\n  .preloaderLightBkg{\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    display: flex;\\r\\n    flex-flow: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    width:100%;\\r\\n    height:100%;\\r\\n  }\\r\\n  \\r\\n  .preloaderLabel{\\r\\n   display: inline-block;\\r\\n   text-align: center;\\r\\n   color: var(--preloaderTextColor);\\r\\n   font-family: \\"Russo\\", Impact;\\r\\n   font-size: 15vw;\\r\\n   margin: 0.2vh;\\r\\n  }\\r\\n\\r\\n  .preloaderBlockLabel{\\r\\n    position: absolute;\\r\\n    top: 90%;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    text-align: center;\\r\\n    color: var(--preloaderTextColor);\\r\\n    font-family: \\"Russo\\", Impact;\\r\\n    font-size: calc(3vw + 3vh);\\r\\n    margin: 0.2vh;\\r\\n   }\\r\\n  \\r\\n  .preloaderOuter{\\r\\n    position: absolute;\\r\\n    top:0;\\r\\n    left: 0;  \\r\\n    display: inline-block;\\r\\n    height:0.7vh; \\r\\n    width: 100%;\\r\\n    /*border: 0.1rem solid black;*/\\r\\n  }\\r\\n  \\r\\n  .preloaderInner{\\r\\n    position: absolute;\\r\\n    display: inline-block;\\r\\n    margin: 0;\\r\\n    height:60%; \\r\\n    width: 0.1%;\\r\\n    background-color: rgb(255, 255, 255);\\r\\n    border-radius:2vh;\\r\\n  \\r\\n    top: 50%;\\r\\n    -ms-transform: translate(0, -50%) scaleX(0.96);\\r\\n    transform: translate(0, -50%) scaleX(0.96);\\r\\n  \\r\\n    -webkit-user-select: none; \\r\\n    -moz-user-select: none;     \\r\\n    -ms-user-select: none;     \\r\\n    user-select: none; \\r\\n  }\\r\\n\\r\\n  .preloaderAnim{\\r\\n      position: absolute;\\r\\n      width: 100%;\\r\\n      height: 100%;\\r\\n      margin: auto;\\r\\n      top: 0;\\r\\n      left: 0;\\r\\n      right: 0;\\r\\n      bottom: 0;\\r\\n  }\\r\\n\\r\\n  .preloaderLightAnim{\\r\\n    position: absolute;\\r\\n    width: 25%;\\r\\n    height: 25%;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\n.progressBarBT_CCSS{\\r\\n  position:absolute;\\r\\n  left: 50%;\\r\\n  top: 50%;\\r\\n  transform: translate(-50%, -50%);\\r\\n}\\r\\n\\r\\n.progressBarBT_Block_Active_CCSS{\\r\\n  position:absolute;\\r\\n  background-color: var(--preloaderSquaresColor);\\r\\n  /*border: 2px solid var(--preloaderTextColor);*/\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.progressBarBT_Block_Inactive_CCSS{\\r\\n  position:absolute;\\r\\n  /*border: 2px solid var(--preloaderTextColor);*/\\r\\n  /*border-radius: 0.5vh;*/\\r\\n}\\r\\n\\r\\n@keyframes preloaderFadeOut {\\r\\n  0%{\\r\\n      opacity: 1;\\r\\n  }\\r\\n  100%{\\r\\n      opacity: 0;\\r\\n  }\\r\\n}\\r\\n", "",{"version":3,"sources":["webpack://./src/styles/preloader.css"],"names":[],"mappings":"AAAA;EACE,oBAAoB;EACpB,4CAA2B;EAC3B,qBAAqB;AACvB;;AAEA;EACE,2BAA2B;EAC3B,wCAAwC;EACxC,0CAA0C;AAC5C;;;AAGA;IACI,kBAAkB;IAClB,MAAM;IACN,OAAO;IACP,aAAa;IACb,iBAAiB;IACjB,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;IACV,WAAW;IACX,iCAAiC;IACjC,YAAY;EACd;;EAEA;IACE,kBAAkB;IAClB,MAAM;IACN,OAAO;IACP,UAAU;IACV,WAAW;IACX,iCAAiC;IACjC,aAAa;EACf;;EAEA;IACE,kBAAkB;IAClB,MAAM;IACN,OAAO;IACP,aAAa;IACb,iBAAiB;IACjB,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;IACV,WAAW;EACb;;EAEA;GACC,qBAAqB;GACrB,kBAAkB;GAClB,gCAAgC;GAChC,4BAA4B;GAC5B,eAAe;GACf,aAAa;EACd;;EAEA;IACE,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,kBAAkB;IAClB,gCAAgC;IAChC,4BAA4B;IAC5B,0BAA0B;IAC1B,aAAa;GACd;;EAED;IACE,kBAAkB;IAClB,KAAK;IACL,OAAO;IACP,qBAAqB;IACrB,YAAY;IACZ,WAAW;IACX,8BAA8B;EAChC;;EAEA;IACE,kBAAkB;IAClB,qBAAqB;IACrB,SAAS;IACT,UAAU;IACV,WAAW;IACX,oCAAoC;IACpC,iBAAiB;;IAEjB,QAAQ;IACR,8CAA8C;IAC9C,0CAA0C;;IAE1C,yBAAyB;IACzB,sBAAsB;IACtB,qBAAqB;IACrB,iBAAiB;EACnB;;EAEA;MACI,kBAAkB;MAClB,WAAW;MACX,YAAY;MACZ,YAAY;MACZ,MAAM;MACN,OAAO;MACP,QAAQ;MACR,SAAS;EACb;;EAEA;IACE,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,YAAY;IACZ,MAAM;IACN,OAAO;IACP,QAAQ;IACR,SAAS;AACb;;AAEA;EACE,iBAAiB;EACjB,SAAS;EACT,QAAQ;EACR,gCAAgC;AAClC;;AAEA;EACE,iBAAiB;EACjB,8CAA8C;EAC9C,+CAA+C;EAC/C,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,+CAA+C;EAC/C,wBAAwB;AAC1B;;AAEA;EACE;MACI,UAAU;EACd;EACA;MACI,UAAU;EACd;AACF","sourcesContent":["@font-face {\\r\\n  font-family: Evogria;\\r\\n  src: url(fonts/Evogria.otf);\\r\\n  /*font-weight: bold;*/\\r\\n}\\r\\n\\r\\n:root{\\r\\n  --bkgColor: rgb(35, 35, 37);\\r\\n  --preloaderTextColor: rgb(255, 255, 255);\\r\\n  --preloaderSquaresColor: rgb(95, 114, 148);\\r\\n}\\r\\n\\r\\n\\r\\n.preloaderBkg{\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    display: flex;\\r\\n    flex-flow: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    width:100%;\\r\\n    height:100%;\\r\\n    background-color: var(--bkgColor);\\r\\n    z-index: 900;\\r\\n  }\\r\\n\\r\\n  .preloaderBlockBkg{\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width:100%;\\r\\n    height:100%;\\r\\n    background-color: var(--bkgColor);\\r\\n    z-index: 1000;\\r\\n  }\\r\\n\\r\\n  .preloaderLightBkg{\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    display: flex;\\r\\n    flex-flow: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    width:100%;\\r\\n    height:100%;\\r\\n  }\\r\\n  \\r\\n  .preloaderLabel{\\r\\n   display: inline-block;\\r\\n   text-align: center;\\r\\n   color: var(--preloaderTextColor);\\r\\n   font-family: \\"Russo\\", Impact;\\r\\n   font-size: 15vw;\\r\\n   margin: 0.2vh;\\r\\n  }\\r\\n\\r\\n  .preloaderBlockLabel{\\r\\n    position: absolute;\\r\\n    top: 90%;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    text-align: center;\\r\\n    color: var(--preloaderTextColor);\\r\\n    font-family: \\"Russo\\", Impact;\\r\\n    font-size: calc(3vw + 3vh);\\r\\n    margin: 0.2vh;\\r\\n   }\\r\\n  \\r\\n  .preloaderOuter{\\r\\n    position: absolute;\\r\\n    top:0;\\r\\n    left: 0;  \\r\\n    display: inline-block;\\r\\n    height:0.7vh; \\r\\n    width: 100%;\\r\\n    /*border: 0.1rem solid black;*/\\r\\n  }\\r\\n  \\r\\n  .preloaderInner{\\r\\n    position: absolute;\\r\\n    display: inline-block;\\r\\n    margin: 0;\\r\\n    height:60%; \\r\\n    width: 0.1%;\\r\\n    background-color: rgb(255, 255, 255);\\r\\n    border-radius:2vh;\\r\\n  \\r\\n    top: 50%;\\r\\n    -ms-transform: translate(0, -50%) scaleX(0.96);\\r\\n    transform: translate(0, -50%) scaleX(0.96);\\r\\n  \\r\\n    -webkit-user-select: none; \\r\\n    -moz-user-select: none;     \\r\\n    -ms-user-select: none;     \\r\\n    user-select: none; \\r\\n  }\\r\\n\\r\\n  .preloaderAnim{\\r\\n      position: absolute;\\r\\n      width: 100%;\\r\\n      height: 100%;\\r\\n      margin: auto;\\r\\n      top: 0;\\r\\n      left: 0;\\r\\n      right: 0;\\r\\n      bottom: 0;\\r\\n  }\\r\\n\\r\\n  .preloaderLightAnim{\\r\\n    position: absolute;\\r\\n    width: 25%;\\r\\n    height: 25%;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\n.progressBarBT_CCSS{\\r\\n  position:absolute;\\r\\n  left: 50%;\\r\\n  top: 50%;\\r\\n  transform: translate(-50%, -50%);\\r\\n}\\r\\n\\r\\n.progressBarBT_Block_Active_CCSS{\\r\\n  position:absolute;\\r\\n  background-color: var(--preloaderSquaresColor);\\r\\n  /*border: 2px solid var(--preloaderTextColor);*/\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.progressBarBT_Block_Inactive_CCSS{\\r\\n  position:absolute;\\r\\n  /*border: 2px solid var(--preloaderTextColor);*/\\r\\n  /*border-radius: 0.5vh;*/\\r\\n}\\r\\n\\r\\n@keyframes preloaderFadeOut {\\r\\n  0%{\\r\\n      opacity: 1;\\r\\n  }\\r\\n  100%{\\r\\n      opacity: 0;\\r\\n  }\\r\\n}\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///278\n')},772:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(667);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n// Imports\n\n\n\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(695), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(145), __webpack_require__.b);\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "@font-face {\\r\\n    font-family: Evogria;\\r\\n    src: url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");\\r\\n    /*font-weight: bold;*/\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n    font-family: Russo;\\r\\n    src: url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ");\\r\\n    /*font-weight: bold;*/\\r\\n}\\r\\n\\r\\n:root {\\r\\n    --bkg-color: rgb(44, 50, 60);\\r\\n    --test: rgb(148, 148, 148);\\r\\n}\\r\\n\\r\\nbody, html {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    background-color: var(--bkg-color);\\r\\n}\\r\\n\\r\\n.react-container {\\r\\n    width: 100%;\\r\\n    height: 100vh;\\r\\n}\\r\\n\\r\\n.full {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.gameBkg {\\r\\n    background-color: var(--bkg-color);\\r\\n}\\r\\n\\r\\n.BS_Bkg {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    font-size: 5rem;\\r\\n    color: white;\\r\\n    background-color: var(--bkg-color);\\r\\n}\\r\\n\\r\\n.splash {\\r\\n    position: absolute;\\r\\n    width: 70vmin;\\r\\n    margin: auto;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    transform: translate(0, -10vmin);\\r\\n}\\r\\n\\r\\n.GS_GameButton {\\r\\n    width: 30vmin;\\r\\n    height: 6vmin;\\r\\n    line-height: 6vmin;\\r\\n    color: white;\\r\\n    font-size: 4vmin;\\r\\n    font-family: Russo;\\r\\n    background-color: rgb(40, 75, 104);\\r\\n    border-radius: 0.5rem;\\r\\n    text-align: center;\\r\\n    user-select: none;\\r\\n    cursor: pointer;\\r\\n    border: white 2px solid;\\r\\n    transition: background-color 0.5s;\\r\\n}\\r\\n\\r\\n.GS_GameButton:hover {\\r\\n    background-color: coral;\\r\\n}\\r\\n\\r\\n.exitButton {\\r\\n    position: absolute;\\r\\n    bottom: 5px;\\r\\n    left: 5px;\\r\\n    width: calc(7vmin + 2rem);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.GS_Bkg {\\r\\n    width: 10rem;\\r\\n    height: 30rem;\\r\\n    font-size: 5rem;\\r\\n    color: white;\\r\\n    background-color: rgb(255, 123, 46);\\r\\n}\\r\\n\\r\\n.ES_Bkg {\\r\\n    width: 10rem;\\r\\n    height: 30rem;\\r\\n    font-size: 5rem;\\r\\n    color: white;\\r\\n    background-color: rgb(68, 141, 46);\\r\\n}\\r\\n\\r\\n.gvContainer {\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    top: 50%;\\r\\n    transform: translate(0, -50%);\\r\\n}\\r\\n\\r\\n.gvCellContainer {\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-top: 2vmin;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    display: grid;\\r\\n    grid-column-gap: 0.5vmin;\\r\\n    grid-row-gap: 0.5vmin;\\r\\n    padding: 0.5vmin;\\r\\n    /*width: 60vmin;\\r\\n    height: 60vmin;*/\\r\\n    background-color: rgb(38, 46, 65);\\r\\n}\\r\\n\\r\\n.levelScoreContainer {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.levelClass {\\r\\n    color: rgb(107, 166, 221);\\r\\n    font-size: 4vmin;\\r\\n    width: 40%;\\r\\n    text-align: center;\\r\\n    font-family: Russo;\\r\\n}\\r\\n\\r\\n.messageClass {\\r\\n    color: white;\\r\\n    font-size: 4vmin;\\r\\n    text-align: center;\\r\\n    font-family: Russo;\\r\\n    padding: 1vmin;\\r\\n}\\r\\n\\r\\n.clockClass {\\r\\n    color: white;\\r\\n    font-size: 6vmin;\\r\\n    text-align: center;\\r\\n    font-family: Russo;\\r\\n}\\r\\n\\r\\n/*@media only screen and (max-width: 400px) {\\r\\n    .levelClass {\\r\\n        font-size: 1rem;\\r\\n    }\\r\\n    .messageClass {\\r\\n        font-size: 1rem;\\r\\n    }\\r\\n    .clockClass {\\r\\n        font-size: 2rem;\\r\\n    }\\r\\n  }*/\\r\\n\\r\\n.cell {\\r\\n    position: relative;\\r\\n    border: rgb(46, 112, 255) 1px solid;\\r\\n}\\r\\n\\r\\n.cellEmpty {\\r\\n    background-color: rgb(34, 35, 36);\\r\\n}\\r\\n\\r\\n.cellFull {\\r\\n    background-color: rgb(28, 112, 20);\\r\\n}\\r\\n\\r\\n.cellFullUnopened {\\r\\n    background-color: rgb(64, 80, 63);\\r\\n    border: rgb(255, 46, 46) 2px solid;\\r\\n}\\r\\n\\r\\n.cellError {\\r\\n    background-color: rgb(255, 0, 0);\\r\\n}\\r\\n\\r\\n.cell_Img {\\r\\n    position: absolute;\\r\\n    width: 70%;\\r\\n    height: 70%;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n}\\r\\n\\r\\n.cellCursor {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.headerContainer {\\r\\n    background-color: rgb(32, 40, 44);\\r\\n}\\r\\n\\r\\n.messagePopup {\\r\\n    position: absolute;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n    height: 7vmin;\\r\\n    width: 100%;\\r\\n    color: white;\\r\\n    font-size: 3vmin;\\r\\n    font-family: Russo;\\r\\n    line-height: 7vmin;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.bkgGreen {\\r\\n    background-color: rgba(93, 146, 72, 0.7);\\r\\n    border-top: 2px solid rgb(0, 161, 35);\\r\\n    border-bottom: 2px solid rgb(0, 161, 35);\\r\\n}\\r\\n\\r\\n.bkgRed {\\r\\n    background-color: rgba(220, 20, 60, 0.6);\\r\\n    border-top: 2px solid rgb(255, 55, 48);\\r\\n    border-bottom: 2px solid rgb(255, 55, 48);\\r\\n}\\r\\n\\r\\n.selectLevelButton {\\r\\n    position: absolute;\\r\\n    margin-top: 3vmin;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    top: 65%;\\r\\n    width: 50vmin;\\r\\n    height: 6vmin;\\r\\n    line-height: 6vmin;\\r\\n    color: white;\\r\\n    font-size: 5vmin;\\r\\n    font-family: Russo;\\r\\n    background-color: rgb(58, 115, 161);\\r\\n    border-radius: 0.5rem;\\r\\n    text-align: center;\\r\\n    user-select: none;\\r\\n    cursor: pointer;\\r\\n    border: white 2px solid;\\r\\n    transition: background-color 0.5s;\\r\\n}\\r\\n\\r\\n.selectLevelButton:hover {\\r\\n    background-color: coral;\\r\\n}\\r\\n\\r\\n.menuButton {\\r\\n    width: 30vmin;\\r\\n    height: 6vmin;\\r\\n    line-height: 6vmin;\\r\\n    color: white;\\r\\n    font-size: 4vmin;\\r\\n    font-family: Russo;\\r\\n    background-color: rgb(40, 75, 104);\\r\\n    border-radius: 0.5rem;\\r\\n    text-align: center;\\r\\n    user-select: none;\\r\\n    cursor: pointer;\\r\\n    border: white 2px solid;\\r\\n    transition: background-color 0.5s;\\r\\n}\\r\\n\\r\\n.menuButtonsContainer {\\r\\n    position: absolute;\\r\\n    margin-top: 3vmin;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    top: 22vh;\\r\\n    width: calc(30vmin + 20px);\\r\\n    height: 40vh;\\r\\n    overflow-y: scroll;\\r\\n    overflow-x: hidden;\\r\\n    z-index: 10;\\r\\n    background-color: var(--bkg-color);\\r\\n    box-sizing: content-box;\\r\\n    border-radius: 1rem;\\r\\n    border: 3px solid #6b798a;\\r\\n}\\r\\n\\r\\n.menuButtonsContainer::-webkit-scrollbar {\\r\\n    width: 14px;\\r\\n}\\r\\n\\r\\n/* Track */\\r\\n\\r\\n.menuButtonsContainer::-webkit-scrollbar-track {\\r\\n    background: #4e5761;\\r\\n}\\r\\n\\r\\n/* Handle */\\r\\n\\r\\n.menuButtonsContainer::-webkit-scrollbar-thumb {\\r\\n    background: rgb(55, 63, 71);\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n/* Handle on hover */\\r\\n.menuButtonsContainer::-webkit-scrollbar-thumb:hover {\\r\\n    background: rgb(36, 54, 66);\\r\\n}\\r\\n\\r\\n@keyframes fadeIn {\\r\\n    0% {\\r\\n        opacity: 0;\\r\\n        transform: scale(0.7);\\r\\n    }\\r\\n    100% {\\r\\n        opacity: 1;\\r\\n        transform: scale(1);\\r\\n    }\\r\\n}", "",{"version":3,"sources":["webpack://./src/styles/styles.css"],"names":[],"mappings":"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","sourcesContent":["@font-face {\\r\\n    font-family: Evogria;\\r\\n    src: url(fonts/Evogria.otf);\\r\\n    /*font-weight: bold;*/\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n    font-family: Russo;\\r\\n    src: url(fonts/RussoOne-Regular.ttf);\\r\\n    /*font-weight: bold;*/\\r\\n}\\r\\n\\r\\n:root {\\r\\n    --bkg-color: rgb(44, 50, 60);\\r\\n    --test: rgb(148, 148, 148);\\r\\n}\\r\\n\\r\\nbody, html {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    background-color: var(--bkg-color);\\r\\n}\\r\\n\\r\\n.react-container {\\r\\n    width: 100%;\\r\\n    height: 100vh;\\r\\n}\\r\\n\\r\\n.full {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.gameBkg {\\r\\n    background-color: var(--bkg-color);\\r\\n}\\r\\n\\r\\n.BS_Bkg {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    font-size: 5rem;\\r\\n    color: white;\\r\\n    background-color: var(--bkg-color);\\r\\n}\\r\\n\\r\\n.splash {\\r\\n    position: absolute;\\r\\n    width: 70vmin;\\r\\n    margin: auto;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    transform: translate(0, -10vmin);\\r\\n}\\r\\n\\r\\n.GS_GameButton {\\r\\n    width: 30vmin;\\r\\n    height: 6vmin;\\r\\n    line-height: 6vmin;\\r\\n    color: white;\\r\\n    font-size: 4vmin;\\r\\n    font-family: Russo;\\r\\n    background-color: rgb(40, 75, 104);\\r\\n    border-radius: 0.5rem;\\r\\n    text-align: center;\\r\\n    user-select: none;\\r\\n    cursor: pointer;\\r\\n    border: white 2px solid;\\r\\n    transition: background-color 0.5s;\\r\\n}\\r\\n\\r\\n.GS_GameButton:hover {\\r\\n    background-color: coral;\\r\\n}\\r\\n\\r\\n.exitButton {\\r\\n    position: absolute;\\r\\n    bottom: 5px;\\r\\n    left: 5px;\\r\\n    width: calc(7vmin + 2rem);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.GS_Bkg {\\r\\n    width: 10rem;\\r\\n    height: 30rem;\\r\\n    font-size: 5rem;\\r\\n    color: white;\\r\\n    background-color: rgb(255, 123, 46);\\r\\n}\\r\\n\\r\\n.ES_Bkg {\\r\\n    width: 10rem;\\r\\n    height: 30rem;\\r\\n    font-size: 5rem;\\r\\n    color: white;\\r\\n    background-color: rgb(68, 141, 46);\\r\\n}\\r\\n\\r\\n.gvContainer {\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    top: 50%;\\r\\n    transform: translate(0, -50%);\\r\\n}\\r\\n\\r\\n.gvCellContainer {\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-top: 2vmin;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    display: grid;\\r\\n    grid-column-gap: 0.5vmin;\\r\\n    grid-row-gap: 0.5vmin;\\r\\n    padding: 0.5vmin;\\r\\n    /*width: 60vmin;\\r\\n    height: 60vmin;*/\\r\\n    background-color: rgb(38, 46, 65);\\r\\n}\\r\\n\\r\\n.levelScoreContainer {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.levelClass {\\r\\n    color: rgb(107, 166, 221);\\r\\n    font-size: 4vmin;\\r\\n    width: 40%;\\r\\n    text-align: center;\\r\\n    font-family: Russo;\\r\\n}\\r\\n\\r\\n.messageClass {\\r\\n    color: white;\\r\\n    font-size: 4vmin;\\r\\n    text-align: center;\\r\\n    font-family: Russo;\\r\\n    padding: 1vmin;\\r\\n}\\r\\n\\r\\n.clockClass {\\r\\n    color: white;\\r\\n    font-size: 6vmin;\\r\\n    text-align: center;\\r\\n    font-family: Russo;\\r\\n}\\r\\n\\r\\n/*@media only screen and (max-width: 400px) {\\r\\n    .levelClass {\\r\\n        font-size: 1rem;\\r\\n    }\\r\\n    .messageClass {\\r\\n        font-size: 1rem;\\r\\n    }\\r\\n    .clockClass {\\r\\n        font-size: 2rem;\\r\\n    }\\r\\n  }*/\\r\\n\\r\\n.cell {\\r\\n    position: relative;\\r\\n    border: rgb(46, 112, 255) 1px solid;\\r\\n}\\r\\n\\r\\n.cellEmpty {\\r\\n    background-color: rgb(34, 35, 36);\\r\\n}\\r\\n\\r\\n.cellFull {\\r\\n    background-color: rgb(28, 112, 20);\\r\\n}\\r\\n\\r\\n.cellFullUnopened {\\r\\n    background-color: rgb(64, 80, 63);\\r\\n    border: rgb(255, 46, 46) 2px solid;\\r\\n}\\r\\n\\r\\n.cellError {\\r\\n    background-color: rgb(255, 0, 0);\\r\\n}\\r\\n\\r\\n.cell_Img {\\r\\n    position: absolute;\\r\\n    width: 70%;\\r\\n    height: 70%;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n}\\r\\n\\r\\n.cellCursor {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.headerContainer {\\r\\n    background-color: rgb(32, 40, 44);\\r\\n}\\r\\n\\r\\n.messagePopup {\\r\\n    position: absolute;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n    height: 7vmin;\\r\\n    width: 100%;\\r\\n    color: white;\\r\\n    font-size: 3vmin;\\r\\n    font-family: Russo;\\r\\n    line-height: 7vmin;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.bkgGreen {\\r\\n    background-color: rgba(93, 146, 72, 0.7);\\r\\n    border-top: 2px solid rgb(0, 161, 35);\\r\\n    border-bottom: 2px solid rgb(0, 161, 35);\\r\\n}\\r\\n\\r\\n.bkgRed {\\r\\n    background-color: rgba(220, 20, 60, 0.6);\\r\\n    border-top: 2px solid rgb(255, 55, 48);\\r\\n    border-bottom: 2px solid rgb(255, 55, 48);\\r\\n}\\r\\n\\r\\n.selectLevelButton {\\r\\n    position: absolute;\\r\\n    margin-top: 3vmin;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    top: 65%;\\r\\n    width: 50vmin;\\r\\n    height: 6vmin;\\r\\n    line-height: 6vmin;\\r\\n    color: white;\\r\\n    font-size: 5vmin;\\r\\n    font-family: Russo;\\r\\n    background-color: rgb(58, 115, 161);\\r\\n    border-radius: 0.5rem;\\r\\n    text-align: center;\\r\\n    user-select: none;\\r\\n    cursor: pointer;\\r\\n    border: white 2px solid;\\r\\n    transition: background-color 0.5s;\\r\\n}\\r\\n\\r\\n.selectLevelButton:hover {\\r\\n    background-color: coral;\\r\\n}\\r\\n\\r\\n.menuButton {\\r\\n    width: 30vmin;\\r\\n    height: 6vmin;\\r\\n    line-height: 6vmin;\\r\\n    color: white;\\r\\n    font-size: 4vmin;\\r\\n    font-family: Russo;\\r\\n    background-color: rgb(40, 75, 104);\\r\\n    border-radius: 0.5rem;\\r\\n    text-align: center;\\r\\n    user-select: none;\\r\\n    cursor: pointer;\\r\\n    border: white 2px solid;\\r\\n    transition: background-color 0.5s;\\r\\n}\\r\\n\\r\\n.menuButtonsContainer {\\r\\n    position: absolute;\\r\\n    margin-top: 3vmin;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    top: 22vh;\\r\\n    width: calc(30vmin + 20px);\\r\\n    height: 40vh;\\r\\n    overflow-y: scroll;\\r\\n    overflow-x: hidden;\\r\\n    z-index: 10;\\r\\n    background-color: var(--bkg-color);\\r\\n    box-sizing: content-box;\\r\\n    border-radius: 1rem;\\r\\n    border: 3px solid #6b798a;\\r\\n}\\r\\n\\r\\n.menuButtonsContainer::-webkit-scrollbar {\\r\\n    width: 14px;\\r\\n}\\r\\n\\r\\n/* Track */\\r\\n\\r\\n.menuButtonsContainer::-webkit-scrollbar-track {\\r\\n    background: #4e5761;\\r\\n}\\r\\n\\r\\n/* Handle */\\r\\n\\r\\n.menuButtonsContainer::-webkit-scrollbar-thumb {\\r\\n    background: rgb(55, 63, 71);\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n/* Handle on hover */\\r\\n.menuButtonsContainer::-webkit-scrollbar-thumb:hover {\\r\\n    background: rgb(36, 54, 66);\\r\\n}\\r\\n\\r\\n@keyframes fadeIn {\\r\\n    0% {\\r\\n        opacity: 0;\\r\\n        transform: scale(0.7);\\r\\n    }\\r\\n    100% {\\r\\n        opacity: 1;\\r\\n        transform: scale(1);\\r\\n    }\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///772\n')},645:module=>{eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], " {").concat(content, "}");\n      }\n\n      return content;\n    }).join("");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === "string") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, ""]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQ1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw0Q0FBNEMscUJBQXFCO0FBQ2pFOztBQUVBO0FBQ0EsS0FBSztBQUNMLEtBQUs7QUFDTDs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFCQUFxQixxQkFBcUI7QUFDMUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lbW9yeWdhbWUvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzPzI0ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///645\n')},15:module=>{eval('\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === "function") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join("\\n");\n  }\n\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsa0NBQWtDOztBQUVsQyw4QkFBOEI7O0FBRTlCLGtEQUFrRCxnQkFBZ0IsZ0VBQWdFLHdEQUF3RCw2REFBNkQsc0RBQXNEOztBQUU3Uyx1Q0FBdUMsdURBQXVELHVDQUF1QyxTQUFTLE9BQU8sb0JBQW9COztBQUV6Syx5Q0FBeUMsMEdBQTBHLHdCQUF3QixlQUFlLGVBQWUsZ0JBQWdCLFlBQVksTUFBTSx3QkFBd0IsK0JBQStCLGFBQWEscUJBQXFCLHVDQUF1QyxjQUFjLFdBQVcsWUFBWSxVQUFVLE1BQU0sbURBQW1ELFVBQVUsc0JBQXNCOztBQUVuZixnQ0FBZ0M7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVtb3J5Z2FtZS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzPzc1ZTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IHZhciBfaSA9IGFyciA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXTsgaWYgKF9pID09IG51bGwpIHJldHVybjsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfcywgX2U7IHRyeSB7IGZvciAoX2kgPSBfaS5jYWxsKGFycik7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pIHtcbiAgdmFyIF9pdGVtID0gX3NsaWNlZFRvQXJyYXkoaXRlbSwgNCksXG4gICAgICBjb250ZW50ID0gX2l0ZW1bMV0sXG4gICAgICBjc3NNYXBwaW5nID0gX2l0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///15\n')},667:module=>{eval('\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url); // If url is already wrapped in quotes, remove them\n\n  if (/^[\'"].*[\'"]$/.test(url)) {\n    // eslint-disable-next-line no-param-reassign\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/["\'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return "\\"".concat(url.replace(/"/g, \'\\\\"\').replace(/\\n/g, "\\\\n"), "\\"");\n  }\n\n  return url;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjY3LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7OztBQUdKLG9EQUFvRDs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lbW9yeWdhbWUvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzPzFkZTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVyc2NvcmUtZGFuZ2xlLCBuby1wYXJhbS1yZWFzc2lnblxuXG5cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpOyAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cblxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH0gLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuXG5cbiAgaWYgKC9bXCInKCkgXFx0XFxuXXwoJTIwKS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgXCJcXFxcblwiKSwgXCJcXFwiXCIpO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///667\n')},418:module=>{eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDE4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixRQUFRO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixzQkFBc0I7QUFDdkM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLG9CQUFvQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lbW9yeWdhbWUvLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcz8zMjBjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///418\n")},448:(__unused_webpack_module,exports,__webpack_require__)=>{eval('var __webpack_unused_export__;\n/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\nvar aa=__webpack_require__(294),m=__webpack_require__(418),r=__webpack_require__(840);function y(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+"Capture",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||"undefined"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n["checked","multiple","muted","selected"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});["capture","download"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});["cols","rows","size","span"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});["rowSpan","start"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif("function"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E("react.element");ta=E("react.portal");ua=E("react.fragment");wa=E("react.strict_mode");xa=E("react.profiler");ya=E("react.provider");za=E("react.context");Aa=E("react.forward_ref");Ba=E("react.suspense");Ca=E("react.suspense_list");Da=E("react.memo");Ea=E("react.lazy");Fa=E("react.block");E("react.scope");Ga=E("react.opaque.id");Ha=E("react.debug_trace_mode");Ia=E("react.offscreen");Ja=E("react.legacy_hidden")}\nvar Ka="function"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||"object"!==typeof a)return null;a=Ka&&a[Ka]||a["@@iterator"];return"function"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||""}return"\\n"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return"";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&"string"===typeof k.stack){for(var e=k.stack.split("\\n"),\nf=d.stack.split("\\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return"\\n"+e[g].replace(" at new "," at ");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Na(a):""}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na("Lazy");case 13:return Na("Suspense");case 19:return Na("SuspenseList");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return""}}\nfunction Ra(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ua:return"Fragment";case ta:return"Portal";case xa:return"Profiler";case wa:return"StrictMode";case Ba:return"Suspense";case Ca:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case za:return(a.displayName||"Context")+".Consumer";case ya:return(a._context.displayName||"Context")+".Provider";case Aa:var b=a.render;b=b.displayName||b.name||"";\nreturn a.displayName||(""!==b?"ForwardRef("+b+")":"ForwardRef");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}function Ta(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}\nfunction Ua(a){var b=Ta(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=Ta(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,"checked",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?bb(a,b.type,c):b.hasOwnProperty("defaultValue")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}\nfunction bb(a,b,c){if("number"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}function db(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}var kb={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};\nfunction lb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function mb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?lb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}\nvar nb,ob=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||"innerHTML"in a)a.innerHTML=b;else{nb=nb||document.createElement("div");nb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=["Webkit","ms","Moz","O"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(""+b).trim():b+"px"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=sb(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!("object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if("function"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,"passive",{get:function(){Pb=!0}});window.addEventListener("test",Qb,Qb);window.removeEventListener("test",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case "focusin":case "focusout":kc=null;break;case "dragenter":case "dragleave":lc=null;break;case "mouseover":case "mouseout":mc=null;break;case "pointerover":case "pointerout":nc.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case "focusin":return kc=tc(kc,a,b,c,d,e),!0;case "dragenter":return lc=tc(lc,a,b,c,d,e),!0;case "mouseover":return mc=tc(mc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Ec={animationend:Dc("Animation","AnimationEnd"),animationiteration:Dc("Animation","AnimationIteration"),animationstart:Dc("Animation","AnimationStart"),transitionend:Dc("Transition","TransitionEnd")},Fc={},Gc={};\nfa&&(Gc=document.createElement("div").style,"AnimationEvent"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),"TransitionEvent"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc("animationend"),Jc=Hc("animationiteration"),Kc=Hc("animationstart"),Lc=Hc("transitionend"),Mc=new Map,Nc=new Map,Oc=["abort","abort",Ic,"animationEnd",Jc,"animationIteration",Kc,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart",\n"lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Lc,"transitionEnd","waiting","waiting"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e="on"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e="value"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if("movementX"in\na)return a.movementX;a!==yd&&(yd&&"mousemove"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return"movementY"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",\nSpacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",\n119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=od(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Nd[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return"keypress"===a.type?od(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===\na.type?od(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&"CompositionEvent"in window,be=null;fa&&"documentMode"in document&&(be=document.documentMode);var ce=fa&&"TextEvent"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case "keyup":return-1!==$d.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "focusout":return!0;default:return!1}}function he(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case "compositionend":return he(b);case "keypress":if(32!==b.which)return null;fe=!0;return ee;case "textInput":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return"compositionend"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return de&&"ko"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!le[a.type]:"textarea"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,"onChange");0<b.length&&(c=new td("onChange","change",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if("change"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;");ye="function"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(a){if("value"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){"focusin"===a?(Ae(),pe=b,qe=c,pe.attachEvent("onpropertychange",Be)):"focusout"===a&&Ae()}function De(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return te(qe)}function Ee(a,b){if("click"===a)return te(b)}function Fe(a,b){if("input"===a||"change"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He="function"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}\nvar Pe=fa&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,"selectionStart"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,"onSelect"),0<d.length&&(b=new td("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),\n0);Pc("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1);Pc(Oc,2);for(var Ve="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea("onMouseEnter",["mouseout","mouseover"]);\nea("onMouseLeave",["mouseout","mouseover"]);ea("onPointerEnter",["pointerout","pointerover"]);ea("onPointerLeave",["pointerout","pointerover"]);da("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));da("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));da("onBeforeInput",["compositionend","keypress","textInput","paste"]);da("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));\nda("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));da("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Xe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ye=new Set("cancel close invalid load scroll toggle".split(" ").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+"__bubble";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf="_reactListening"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;"selectionchange"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if("scroll"!==a)return;e|=2;f=d}var g=$e(f),h=a+"__"+(b?"capture":"bubble");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case "keypress":if(0===od(c))break a;case "keydown":case "keyup":k=Rd;break;case "focusin":x="focus";k=Fd;break;case "focusout":x="blur";k=Fd;break;case "beforeblur":case "afterblur":k=Fd;break;case "click":if(2===c.button)break a;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":k=Bd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":k=\nDd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case "scroll":k=vd;break;case "wheel":k=Zd;break;case "copy":case "cut":case "paste":k=Jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":k=Td}var w=0!==(b&4),z=!w&&"scroll"===a,u=w?null!==h?h+"Capture":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h="mouseover"===a||"pointerover"===a;k="mouseout"===a||"pointerout"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v="onMouseLeave";u="onMouseEnter";t="mouse";if("pointerout"===a||"pointerover"===a)w=Td,v="onPointerLeave",u="onPointerEnter",t="pointer";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+"leave",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+"enter",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if("select"===k||"input"===k&&"file"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);"focusout"===a&&(K=h._wrapperState)&&\nK.controlled&&"number"===h.type&&bb(h,"number",h.value)}K=d?ue(d):window;switch(a){case "focusin":if(me(K)||"true"===K.contentEditable)Qe=K,Re=d,Se=null;break;case "focusout":Se=Re=Qe=null;break;case "mousedown":Te=!0;break;case "contextmenu":case "mouseup":case "dragend":Te=!1;Ue(g,c,e);break;case "selectionchange":if(Pe)break;case "keydown":case "keyup":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case "compositionstart":var L="onCompositionStart";break b;case "compositionend":L="onCompositionEnd";break b;\ncase "compositionupdate":L="onCompositionUpdate";break b}L=void 0}else ie?ge(a,c)&&(L="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(L="onCompositionStart");L&&(de&&"ko"!==c.locale&&(ie||"onCompositionStart"!==L?"onCompositionEnd"===L&&ie&&(Q=nd()):(kd=e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,"onBeforeInput"),0<d.length&&(e=new Ld("onBeforeInput",\n"beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}\nfunction nf(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of="function"===typeof setTimeout?setTimeout:void 0,pf="function"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent="":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=""))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--}else"/$"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf="__reactFiber$"+vf,xf="__reactProps$"+vf,ff="__reactContainer$"+vf,yf="__reactEvents$"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||"Unknown",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if("function"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h="function"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;"object"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||\n(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if("string"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if("textarea"!==a.type)throw Error(y(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Ug(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||\nnull,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if("function"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||"Component"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||"$?"===c.data||"$!"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else"$"!==c&&"$!"!==c&&"$?"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return"function"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c("r:"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c("r:"+(tf++).toString(36))},\nvoid 0,null));return b}b="r:"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode||"unstable-defer-without-hiding"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A="function"===typeof n||"function"===typeof g.getSnapshotBeforeUpdate;A||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&\n"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?("function"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===\ntypeof g.componentDidMount&&(b.flags|=4)):("function"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;"object"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n="function"===typeof C||\n"function"===typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?("function"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if("number"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:"visible",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:"hidden",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:"visible",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:"hidden",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case "together":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case "input":e=Ya(a,e);d=Ya(a,d);f=[];break;case "option":e=eb(a,e);d=eb(a,d);f=[];break;case "select":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case "textarea":e=gb(a,e);d=gb(a,d);f=[];break;default:"function"!==typeof e.onClick&&"function"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else"dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ca.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&G("scroll",a),f||h===k||(f=[])):"object"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push("style",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case "dialog":G("cancel",d);G("close",d);break;case "iframe":case "object":case "embed":G("load",d);break;case "video":case "audio":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case "source":G("error",d);break;case "img":case "image":case "link":G("error",d);G("load",d);break;case "details":G("toggle",d);break;case "input":Za(d,f);G("invalid",d);break;case "select":d._wrapperState=\n{wasMultiple:!!f.multiple};G("invalid",d);break;case "textarea":hb(d,f),G("invalid",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],"children"===g?"string"===typeof e?d.textContent!==e&&(a=["children",e]):"number"===typeof e&&d.textContent!==""+e&&(a=["children",""+e]):ca.hasOwnProperty(g)&&null!=e&&"onScroll"===g&&G("scroll",d));switch(c){case "input":Va(d);cb(d,f,!0);break;case "textarea":Va(d);jb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?"script"===c?(a=g.createElement("div"),a.innerHTML="<script>\\x3c/script>",a=a.removeChild(a.firstChild)):"string"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case "dialog":G("cancel",a);G("close",a);\ne=d;break;case "iframe":case "object":case "embed":G("load",a);e=d;break;case "video":case "audio":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case "source":G("error",a);e=d;break;case "img":case "image":case "link":G("error",a);G("load",a);e=d;break;case "details":G("toggle",a);e=d;break;case "input":Za(a,d);e=Ya(a,d);G("invalid",a);break;case "option":e=eb(a,d);break;case "select":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G("invalid",a);break;case "textarea":hb(a,d);e=\ngb(a,d);G("invalid",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];"style"===f?tb(a,k):"dangerouslySetInnerHTML"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):"children"===f?"string"===typeof k?("textarea"!==c||""!==k)&&pb(a,k):"number"===typeof k&&pb(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ca.hasOwnProperty(f)?null!=k&&"onScroll"===f&&G("scroll",a):null!=k&&qa(a,f,k,g))}switch(c){case "input":Va(a);cb(a,d,!1);\nbreak;case "textarea":Va(a);jb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+Sa(d.value));break;case "select":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&"hidden"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&"unstable-defer-without-hiding"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c="",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e="\\nError generating stack: "+f.message+"\\n"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi="function"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}var Ui="function"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,"function"===typeof d.setProperty?d.setProperty("display","none","important"):d.display="none";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null;d.style.display=sb("display",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?"":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&"function"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if("function"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,""),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;"input"===a&&"radio"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];"style"===g?tb(c,h):"dangerouslySetInnerHTML"===g?ob(c,h):"children"===g?pb(c,h):qa(c,g,h,b)}switch(a){case "input":ab(c,d);break;case "textarea":ib(c,d);break;case "select":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:"",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&"object"===typeof k&&"function"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&("function"===typeof K.getDerivedStateFromError||null!==Q&&"function"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if("selectionStart"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,"");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&("function"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),"selectionStart"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});"function"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}"function"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&"function"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if("function"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if("function"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if("object"===\ntypeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;"function"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if("function"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)ji(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if("object"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,""));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if("function"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if("function"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case "input":ab(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+\'][type="radio"]\');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case "textarea":ib(a,c);break;case "select":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}__webpack_unused_export__=vk;__webpack_unused_export__=uk;\n__webpack_unused_export__=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};__webpack_unused_export__=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};__webpack_unused_export__=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};__webpack_unused_export__=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};__webpack_unused_export__=Wj;__webpack_unused_export__=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\n__webpack_unused_export__=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};__webpack_unused_export__="17.0.2";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///448\n')},935:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (false) {}\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(448);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTM1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLEtBQXFDLEVBQUUsRUFTMUM7QUFDSDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLElBQXFDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLEVBQUUseUNBQTZEO0FBQy9ELEVBQUUsS0FBSyxFQUVOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVtb3J5Z2FtZS8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanM/OGJjOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///935\n")},408:(__unused_webpack_module,exports,__webpack_require__)=>{eval('/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar l=__webpack_require__(418),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif("function"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w("react.element");p=w("react.portal");exports.Fragment=w("react.fragment");exports.StrictMode=w("react.strict_mode");exports.Profiler=w("react.profiler");q=w("react.provider");r=w("react.context");t=w("react.forward_ref");exports.Suspense=w("react.suspense");u=w("react.memo");v=w("react.lazy")}var x="function"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||"object"!==typeof a)return null;a=x&&a[x]||a["@@iterator"];return"function"===typeof a?a:null}function z(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,"setState")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return"object"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(""+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if("undefined"===k||"boolean"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case "string":case "number":h=!0;break;case "object":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=""===e?"."+N(h,0):e,Array.isArray(d)?(c="",null!=a&&(c=a.replace(M,"$&/")+"/"),O(d,b,c,"",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?"":(""+d.key).replace(M,"$&/")+"/")+a)),b.push(d)),1;h=0;e=""===e?".":e+":";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),"function"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if("object"===k)throw b=""+a,Error(z(31,"[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,"","",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=""+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version="17.0.2";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Ly9tZW1vcnlnYW1lLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcz9iZTI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4yXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj02MDEwMyxwPTYwMTA2O2V4cG9ydHMuRnJhZ21lbnQ9NjAxMDc7ZXhwb3J0cy5TdHJpY3RNb2RlPTYwMTA4O2V4cG9ydHMuUHJvZmlsZXI9NjAxMTQ7dmFyIHE9NjAxMDkscj02MDExMCx0PTYwMTEyO2V4cG9ydHMuU3VzcGVuc2U9NjAxMTM7dmFyIHU9NjAxMTUsdj02MDExNjtcbmlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3Ipe3ZhciB3PVN5bWJvbC5mb3I7bj13KFwicmVhY3QuZWxlbWVudFwiKTtwPXcoXCJyZWFjdC5wb3J0YWxcIik7ZXhwb3J0cy5GcmFnbWVudD13KFwicmVhY3QuZnJhZ21lbnRcIik7ZXhwb3J0cy5TdHJpY3RNb2RlPXcoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTtleHBvcnRzLlByb2ZpbGVyPXcoXCJyZWFjdC5wcm9maWxlclwiKTtxPXcoXCJyZWFjdC5wcm92aWRlclwiKTtyPXcoXCJyZWFjdC5jb250ZXh0XCIpO3Q9dyhcInJlYWN0LmZvcndhcmRfcmVmXCIpO2V4cG9ydHMuU3VzcGVuc2U9dyhcInJlYWN0LnN1c3BlbnNlXCIpO3U9dyhcInJlYWN0Lm1lbW9cIik7dj13KFwicmVhY3QubGF6eVwiKX12YXIgeD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7XG5mdW5jdGlvbiB5KGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT14JiZhW3hdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24geihhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1cbnZhciBBPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxCPXt9O2Z1bmN0aW9uIEMoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Qjt0aGlzLnVwZGF0ZXI9Y3x8QX1DLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0MucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcih6KDg1KSk7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtDLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcbmZ1bmN0aW9uIEQoKXt9RC5wcm90b3R5cGU9Qy5wcm90b3R5cGU7ZnVuY3Rpb24gRShhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfXZhciBGPUUucHJvdG90eXBlPW5ldyBEO0YuY29uc3RydWN0b3I9RTtsKEYsQy5wcm90b3R5cGUpO0YuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEc9e2N1cnJlbnQ6bnVsbH0sSD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEk9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIEooYSxiLGMpe3ZhciBlLGQ9e30saz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihlIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihrPVwiXCIrYi5rZXkpLGIpSC5jYWxsKGIsZSkmJiFJLmhhc093blByb3BlcnR5KGUpJiYoZFtlXT1iW2VdKTt2YXIgZz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWcpZC5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxnKXtmb3IodmFyIGY9QXJyYXkoZyksbT0wO208ZzttKyspZlttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWZ9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGUgaW4gZz1hLmRlZmF1bHRQcm9wcyxnKXZvaWQgMD09PWRbZV0mJihkW2VdPWdbZV0pO3JldHVybnskJHR5cGVvZjpuLHR5cGU6YSxrZXk6ayxyZWY6aCxwcm9wczpkLF9vd25lcjpHLmN1cnJlbnR9fVxuZnVuY3Rpb24gSyhhLGIpe3JldHVybnskJHR5cGVvZjpuLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTChhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09bn1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiK2EucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE09L1xcLysvZztmdW5jdGlvbiBOKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKFwiXCIrYS5rZXkpOmIudG9TdHJpbmcoMzYpfVxuZnVuY3Rpb24gTyhhLGIsYyxlLGQpe3ZhciBrPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1rfHxcImJvb2xlYW5cIj09PWspYT1udWxsO3ZhciBoPSExO2lmKG51bGw9PT1hKWg9ITA7ZWxzZSBzd2l0Y2goayl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpoPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBuOmNhc2UgcDpoPSEwfX1pZihoKXJldHVybiBoPWEsZD1kKGgpLGE9XCJcIj09PWU/XCIuXCIrTihoLDApOmUsQXJyYXkuaXNBcnJheShkKT8oYz1cIlwiLG51bGwhPWEmJihjPWEucmVwbGFjZShNLFwiJCYvXCIpK1wiL1wiKSxPKGQsYixjLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KSk6bnVsbCE9ZCYmKEwoZCkmJihkPUsoZCxjKyghZC5rZXl8fGgmJmgua2V5PT09ZC5rZXk/XCJcIjooXCJcIitkLmtleSkucmVwbGFjZShNLFwiJCYvXCIpK1wiL1wiKSthKSksYi5wdXNoKGQpKSwxO2g9MDtlPVwiXCI9PT1lP1wiLlwiOmUrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGc9XG4wO2c8YS5sZW5ndGg7ZysrKXtrPWFbZ107dmFyIGY9ZStOKGssZyk7aCs9TyhrLGIsYyxmLGQpfWVsc2UgaWYoZj15KGEpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxnPTA7IShrPWEubmV4dCgpKS5kb25lOylrPWsudmFsdWUsZj1lK04oayxnKyspLGgrPU8oayxiLGMsZixkKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1rKXRocm93IGI9XCJcIithLEVycm9yKHooMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWI/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YikpO3JldHVybiBofWZ1bmN0aW9uIFAoYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W10sZD0wO08oYSxlLFwiXCIsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYi5jYWxsKGMsYSxkKyspfSk7cmV0dXJuIGV9XG5mdW5jdGlvbiBRKGEpe2lmKC0xPT09YS5fc3RhdHVzKXt2YXIgYj1hLl9yZXN1bHQ7Yj1iKCk7YS5fc3RhdHVzPTA7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX1pZigxPT09YS5fc3RhdHVzKXJldHVybiBhLl9yZXN1bHQ7dGhyb3cgYS5fcmVzdWx0O312YXIgUj17Y3VycmVudDpudWxsfTtmdW5jdGlvbiBTKCl7dmFyIGE9Ui5jdXJyZW50O2lmKG51bGw9PT1hKXRocm93IEVycm9yKHooMzIxKSk7cmV0dXJuIGF9dmFyIFQ9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6UixSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzp7dHJhbnNpdGlvbjowfSxSZWFjdEN1cnJlbnRPd25lcjpHLElzU29tZVJlbmRlcmVyQWN0aW5nOntjdXJyZW50OiExfSxhc3NpZ246bH07XG5leHBvcnRzLkNoaWxkcmVuPXttYXA6UCxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtQKGEsZnVuY3Rpb24oKXtiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sYyl9LGNvdW50OmZ1bmN0aW9uKGEpe3ZhciBiPTA7UChhLGZ1bmN0aW9uKCl7YisrfSk7cmV0dXJuIGJ9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7cmV0dXJuIFAoYSxmdW5jdGlvbihhKXtyZXR1cm4gYX0pfHxbXX0sb25seTpmdW5jdGlvbihhKXtpZighTChhKSl0aHJvdyBFcnJvcih6KDE0MykpO3JldHVybiBhfX07ZXhwb3J0cy5Db21wb25lbnQ9QztleHBvcnRzLlB1cmVDb21wb25lbnQ9RTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPVQ7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoeigyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxrPWEucmVmLGg9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihrPWIucmVmLGg9Ry5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBnPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGYgaW4gYilILmNhbGwoYixmKSYmIUkuaGFzT3duUHJvcGVydHkoZikmJihlW2ZdPXZvaWQgMD09PWJbZl0mJnZvaWQgMCE9PWc/Z1tmXTpiW2ZdKX12YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxmKXtnPUFycmF5KGYpO2Zvcih2YXIgbT0wO208ZjttKyspZ1ttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWd9cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6ayxwcm9wczplLF9vd25lcjpofX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6cixfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnEsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PUo7ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPUouYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnQscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PUw7XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnYsX3BheWxvYWQ6e19zdGF0dXM6LTEsX3Jlc3VsdDphfSxfaW5pdDpRfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnUsdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNvbnRleHQoYSxiKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixjKX07XG5leHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlUmVkdWNlcihhLGIsYyl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlU3RhdGUoYSl9O2V4cG9ydHMudmVyc2lvbj1cIjE3LjAuMlwiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///408\n')},294:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nif (true) {\n  module.exports = __webpack_require__(408);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjk0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksSUFBcUM7QUFDekMsRUFBRSx5Q0FBeUQ7QUFDM0QsRUFBRSxLQUFLLEVBRU4iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZW1vcnlnYW1lLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzP2FiNWIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///294\n")},53:(__unused_webpack_module,exports)=>{eval('/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar f,g,h,k;if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif("undefined"===typeof window||"function"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if("undefined"!==typeof console){var z=\nwindow.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn\'t support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");"function"!==typeof z&&console.error("This browser doesn\'t support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if("function"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===typeof c&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNhLFlBQVksdUVBQXVFLGtCQUFrQixvQkFBb0IsWUFBWSxnQkFBZ0IsS0FBSyxxQkFBcUIsb0JBQW9CLFlBQVk7QUFDNU4sb0VBQW9FLCtCQUErQixnQkFBZ0IsNkJBQTZCLFFBQVEsT0FBTyxTQUFTLDJCQUEyQixjQUFjLGtEQUFrRCxnQkFBZ0IsbUJBQW1CLGFBQWEsaUJBQWlCLDRCQUE0QixZQUFZLFVBQVUsRUFBRSwrQkFBK0IsY0FBYyxLQUFLLDhDQUE4QyxpQ0FBaUM7QUFDemYsNEJBQTRCLHNOQUFzTiwwTEFBMEwsNkJBQTZCLDRCQUE0QixZQUFZO0FBQ2pmLEdBQUcsZUFBZSwrQkFBK0IsYUFBYSx1S0FBdUssbUNBQW1DLDZCQUE2QixhQUFhLDZCQUE2QixNQUFNLElBQUksMENBQTBDLFNBQVMsOEJBQThCLFdBQVcsY0FBYyxJQUFJLCtCQUErQixnQkFBZ0I7QUFDdGYsYUFBYSwwQkFBMEIsS0FBSyxhQUFhLEtBQUssTUFBTSxnQkFBZ0IsZUFBZSxVQUFVLFFBQVEsRUFBRSxxQkFBcUIsMENBQTBDLGNBQWMsY0FBYyxPQUFPO0FBQ3pOLGNBQWMsV0FBVyxlQUFlLGNBQWMsVUFBVSxPQUFPLHlCQUF5QixJQUFJLEVBQUUsb0NBQW9DLHFGQUFxRiwrQ0FBK0MsY0FBYyxTQUFTLFlBQVksZ0JBQWdCLDhCQUE4Qix5QkFBeUI7QUFDeFgsY0FBYyxlQUFlLFNBQVMsRUFBRSwwQkFBMEIsZ0VBQWdFLFdBQVcsUUFBUSxjQUFjLEtBQUssS0FBSywrQkFBK0IsS0FBSyxXQUFXO0FBQzVOLGdCQUFnQixLQUFLLGNBQWMsS0FBSyxRQUFRLElBQUksS0FBSyxXQUFXLHNFQUFzRSxFQUFFLGlCQUFpQiwwQkFBMEIsZ0JBQWdCLGtCQUFrQiw2QkFBNkIseUJBQXlCLGtEQUFrRCxLQUFLLFVBQVUsT0FBTyxxQkFBcUIsS0FBSyxXQUFXLDZCQUE2QixLQUFLLFNBQVMsUUFBUSxpQkFBaUIsUUFBUSw2QkFBNkI7QUFDcmUsa0NBQWtDLEdBQUcsNEJBQTRCLEdBQUcsK0JBQStCLEdBQUcsMEJBQTBCLE1BQU0scUNBQXFDLEdBQUcsK0JBQStCLGFBQWEsaUJBQWlCLGtDQUFrQyxZQUFZLG1CQUFtQix3Q0FBd0MsWUFBWSxVQUFVLHFDQUFxQyxZQUFZO0FBQzNaLHFCQUFxQixhQUFhLFVBQVUsNkJBQTZCLE1BQU0sWUFBWSxRQUFRLElBQUksSUFBSSxXQUFXLFFBQVEsTUFBTSwrQkFBK0IsY0FBYyw2QkFBNkIsR0FBRyxnQ0FBZ0MsZUFBZSxVQUFVLHlDQUF5QyxZQUFZLFFBQVEsSUFBSSxJQUFJLFdBQVcsUUFBUTtBQUNsVyxpQ0FBaUMsaUJBQWlCLDZCQUE2QiwrRUFBK0UsVUFBVSxnQkFBZ0IsTUFBTSxhQUFhLE1BQU0sb0JBQW9CLE1BQU0sYUFBYSxNQUFNLGNBQWMsTUFBTSxHQUFHLDZFQUE2RSxpSEFBaUg7QUFDbmQsNkJBQTZCLGFBQWEsUUFBUSxrQkFBa0IsUUFBUSxJQUFJLElBQUksK0JBQStCLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZW1vcnlnYW1lLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzP2ZiMDciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjIwLjJcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGs7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fVxuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHQ9bnVsbCx1PW51bGwsdz1mdW5jdGlvbigpe2lmKG51bGwhPT10KXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3QoITAsYSk7dD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodywwKSxiO319O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXQ/c2V0VGltZW91dChmLDAsYSk6KHQ9YSxzZXRUaW1lb3V0KHcsMCkpfTtnPWZ1bmN0aW9uKGEsYil7dT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodSl9O2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX07az1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB4PXdpbmRvdy5zZXRUaW1lb3V0LHk9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciB6PVxud2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIHomJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpfXZhciBBPSExLEI9bnVsbCxDPS0xLEQ9NSxFPTA7ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1cbkV9O2s9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOkQ9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBGPW5ldyBNZXNzYWdlQ2hhbm5lbCxHPUYucG9ydDI7Ri5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtpZihudWxsIT09Qil7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtFPWErRDt0cnl7QighMCxhKT9HLnBvc3RNZXNzYWdlKG51bGwpOihBPSExLEI9bnVsbCl9Y2F0Y2goYil7dGhyb3cgRy5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBBPSExfTtmPWZ1bmN0aW9uKGEpe0I9YTtBfHwoQT0hMCxHLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0M9XG54KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt5KEMpO0M9LTF9fWZ1bmN0aW9uIEgoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SShlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gSihhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gSyhhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5JKG4sYykpdm9pZCAwIT09ciYmMD5JKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5JKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBJKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBMPVtdLE09W10sTj0xLE89bnVsbCxQPTMsUT0hMSxSPSExLFM9ITE7XG5mdW5jdGlvbiBUKGEpe2Zvcih2YXIgYj1KKE0pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spSyhNKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKUsoTSksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxIKEwsYik7ZWxzZSBicmVhaztiPUooTSl9fWZ1bmN0aW9uIFUoYSl7Uz0hMTtUKGEpO2lmKCFSKWlmKG51bGwhPT1KKEwpKVI9ITAsZihWKTtlbHNle3ZhciBiPUooTSk7bnVsbCE9PWImJmcoVSxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBWKGEsYil7Uj0hMTtTJiYoUz0hMSxoKCkpO1E9ITA7dmFyIGM9UDt0cnl7VChiKTtmb3IoTz1KKEwpO251bGwhPT1PJiYoIShPLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZCgpKTspe3ZhciBkPU8uY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe08uY2FsbGJhY2s9bnVsbDtQPU8ucHJpb3JpdHlMZXZlbDt2YXIgZT1kKE8uZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9PLmNhbGxiYWNrPWU6Tz09PUooTCkmJksoTCk7VChiKX1lbHNlIEsoTCk7Tz1KKEwpfWlmKG51bGwhPT1PKXZhciBtPSEwO2Vsc2V7dmFyIG49SihNKTtudWxsIT09biYmZyhVLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtPPW51bGwsUD1jLFE9ITF9fXZhciBXPWs7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtcbmV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7Unx8UXx8KFI9ITAsZihWKSl9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUH07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBKKEwpfTtcbmV4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUCl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9UH12YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1A9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVc7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1QO1A9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1A9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDpOKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxIKE0sYSksbnVsbD09PUooTCkmJmE9PT1KKE0pJiYoUz9oKCk6Uz0hMCxnKFUsYy1kKSkpOihhLnNvcnRJbmRleD1lLEgoTCxhKSxSfHxRfHwoUj0hMCxmKFYpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7UD1jfX19O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///53\n')},840:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nif (true) {\n  module.exports = __webpack_require__(53);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQwLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksSUFBcUM7QUFDekMsRUFBRSx3Q0FBNkQ7QUFDL0QsRUFBRSxLQUFLLEVBRU4iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZW1vcnlnYW1lLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcz80MDI5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///840\n")},379:module=>{eval('\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzc5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7O0FBRUEsa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEscUJBQXFCLDZCQUE2QjtBQUNsRDs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZW1vcnlnYW1lLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzPzJkYmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5Eb21bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRG9tW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRG9tLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///379\n')},569:module=>{eval('\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTY5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHNEQUFzRDs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lbW9yeWdhbWUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzP2IyMTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///569\n')},216:module=>{eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var style = document.createElement("style");\n  options.setAttributes(style, options.attributes);\n  options.insert(style);\n  return style;\n}\n\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE2LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVtb3J5Z2FtZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKHN0eWxlLCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIHJldHVybiBzdHlsZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///216\n')},565:(module,__unused_webpack_exports,__webpack_require__)=>{eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(style) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n\n  if (nonce) {\n    style.setAttribute("nonce", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTY1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxjQUFjLEtBQXdDLEdBQUcsc0JBQWlCLEdBQUcsQ0FBSTs7QUFFakY7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZW1vcnlnYW1lLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzP2RkY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlKSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///565\n')},795:module=>{eval('\n\n/* istanbul ignore next  */\nfunction apply(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute("media", media);\n  } else {\n    style.removeAttribute("media");\n  }\n\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, style);\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var style = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(style, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(style);\n    }\n  };\n}\n\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzk1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0EseURBQXlEO0FBQ3pELElBQUk7O0FBRUo7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lbW9yeWdhbWUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcz9lNDc5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKFwibWVkaWFcIiwgbWVkaWEpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlLnJlbW92ZUF0dHJpYnV0ZShcIm1lZGlhXCIpO1xuICB9XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGUpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlLCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///795\n')},589:module=>{eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, style) {\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTg5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZW1vcnlnYW1lLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanM/MWRkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlKSB7XG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZS5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///589\n")},695:(l,c,Q)=>{l.exports=Q.p+"f90e5f33987b13d9c840.otf"},145:(l,c,Q)=>{l.exports=Q.p+"eeee49799c79e2929b29.ttf"}},__webpack_module_cache__={};function __webpack_require__(l){var c=__webpack_module_cache__[l];if(void 0!==c)return c.exports;var Q=__webpack_module_cache__[l]={id:l,exports:{}};return __webpack_modules__[l](Q,Q.exports,__webpack_require__),Q.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.n=l=>{var c=l&&l.__esModule?()=>l.default:()=>l;return __webpack_require__.d(c,{a:c}),c},__webpack_require__.d=(l,c)=>{for(var Q in c)__webpack_require__.o(c,Q)&&!__webpack_require__.o(l,Q)&&Object.defineProperty(l,Q,{enumerable:!0,get:c[Q]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(l){if("object"==typeof window)return window}}(),__webpack_require__.o=(l,c)=>Object.prototype.hasOwnProperty.call(l,c),(()=>{var l;__webpack_require__.g.importScripts&&(l=__webpack_require__.g.location+"");var c=__webpack_require__.g.document;if(!l&&c&&(c.currentScript&&(l=c.currentScript.src),!l)){var Q=c.getElementsByTagName("script");Q.length&&(l=Q[Q.length-1].src)}if(!l)throw new Error("Automatic publicPath is not supported in this browser");l=l.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=l})(),__webpack_require__.b=document.baseURI||self.location.href;var __webpack_exports__=__webpack_require__(479)})();